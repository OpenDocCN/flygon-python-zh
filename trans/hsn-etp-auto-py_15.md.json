["```py\n$ sudo yum install -y https://www.rdoproject.org/repos/rdo-release.rpm\n$ sudo yum update -y\n$ sudo yum install -y OpenStack-packstack\n```", "```py\n$ sudo yum install -y centos-release-OpenStack-queens\n$ sudo yum update -y\n$ sudo yum install -y OpenStack-packstack\n```", "```py\n# packstack --gen-answer-file=/root/EnterpriseAutomation\n```", "```py\nCONFIG_DEFAULT_PASSWORD=access123 CONFIG_CEILOMETER_INSTALL=n CONFIG_AODH_INSTALL=n CONFIG_KEYSTONE_ADMIN_PW=access123 CONFIG_PROVISION_DEMO=n \n```", "```py\n# packstack answer-file=EnterpriseAutomation\n```", "```py\n **** Installation completed successfully ******\n\nAdditional information:\n * Time synchronization installation was skipped. Please note that unsynchronized time on server instances might be problem for some OpenStack components.\n * File /root/keystonerc_admin has been created on OpenStack client host 10.10.10.150\\. To use the command line tools you need to source the file.\n * To access the OpenStack Dashboard browse to http://10.10.10.150/dashboard .\nPlease, find your login credentials stored in the keystonerc_admin in your home directory.\n * The installation log file is available at: /var/tmp/packstack/20180410-155124-CMpsKR/OpenStack-setup.log\n * The generated manifests are available at: /var/tmp/packstack/20180410-155124-CMpsKR/manifests\n```", "```py\nyum install -y gcc openssl-devel python-pip python-wheel\npip install python-novaclient\npip install python-neutronclient\npip install python-keystoneclient\npip install python-glanceclient\npip install python-cinderclient\npip install python-heatclient\npip install python-OpenStackclient\n```", "```py\ncat /root/keystonerc_admin\nunset OS_SERVICE_TOKEN\nexport OS_USERNAME=admin\nexport OS_PASSWORD='access123'\nexport OS_AUTH_URL=http://10.10.10.150:5000/v3\nexport PS1='[\\u@\\h \\W(keystone_admin)]\\$ '\n\nexport OS_PROJECT_NAME=admin\nexport OS_USER_DOMAIN_NAME=Default\nexport OS_PROJECT_DOMAIN_NAME=Default\nexport OS_IDENTITY_API_VERSION=3\n```", "```py\nfrom keystoneauth1.identity import v3\nfrom keystoneauth1 import session\n\nauth = v3.Password(auth_url=\"http://10.10.10.150:5000/v3\",\n  username=\"admin\",\n  password=\"access123\",\n  project_name=\"admin\",\n  user_domain_name=\"Default\",\n  project_domain_name=\"Default\")\nsess = session.Session(auth=auth, verify=False)\nprint(sess) \n```", "```py\n#vim /root/creds.ini [os_creds]  auth_url=\"http://10.10.10.150:5000/v3\" username=\"admin\" password=\"access123\" project_name=\"admin\" user_domain_name=\"Default\" project_domain_name=\"Default\"\n```", "```py\nfrom keystoneauth1.identity import v3\nfrom keystoneauth1 import session\nimport ConfigParser\nconfig = ConfigParser.ConfigParser() config.read(\"/root/creds.ini\") auth = v3.Password(auth_url=config.get(\"os_creds\",\"auth_url\"),\n  username=config.get(\"os_creds\",\"username\"),\n  password=config.get(\"os_creds\",\"password\"),\n  project_name=config.get(\"os_creds\",\"project_name\"),\n  user_domain_name=config.get(\"os_creds\",\"user_domain_name\"),\n  project_domain_name=config.get(\"os_creds\",\"project_domain_name\")) sess = session.Session(auth=auth, verify=False) print(sess)   \n```", "```py\n#cd /root/ ; wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img\n```", "```py\nfrom keystoneauth1.identity import v3\nfrom keystoneauth1 import session\nfrom glanceclient import client as gclient\nfrom pprint import pprint\n\nauth = v3.Password(auth_url=\"http://10.10.10.150:5000/v3\",\n  username=\"admin\",\n  password=\"access123\",\n  project_name=\"admin\",\n  user_domain_name=\"Default\",\n  project_domain_name=\"Default\")     sess = session.Session(auth=auth, verify=False)    #Upload the image to the Glance  glance = gclient.Client('2', session=sess)   image = glance.images.create(name=\"CirrosImage\",\n  container_format='bare',\n  disk_format='qcow2',\n  )   glance.images.upload(image.id, open('/root/cirros-0.4.0-x86_64-disk.img', 'rb'))   \n```", "```py\nprint(\"==========================Image Details==========================\") for image in glance.images.list(name=\"CirrosImage\"):\n  pprint(image) \n{u'checksum': u'443b7623e27ecf03dc9e01ee93f67afe',\n u'container_format': u'bare',\n u'created_at': u'2018-04-11T03:11:58Z',\n u'disk_format': u'qcow2',\n u'file': u'/v2/images/3c2614b0-e53c-4be1-b99d-bbd9ce14b287/file',\n u'id': u'3c2614b0-e53c-4be1-b99d-bbd9ce14b287',\n u'min_disk': 0,\n u'min_ram': 0,\n u'name': u'CirrosImage',\n u'owner': u'8922dc52984041af8fe22061aaedcd13',\n u'protected': False,\n u'schema': u'/v2/schemas/image',\n u'size': 12716032,\n u'status': u'active',\n u'tags': [],\n u'updated_at': u'2018-04-11T03:11:58Z',\n u'virtual_size': None,\n u'visibility': u'shared'}\n```", "```py\nfrom keystoneauth1.identity import v3\nfrom keystoneauth1 import session\nfrom novaclient import client as nclient\nfrom pprint import pprint\n\nauth = v3.Password(auth_url=\"http://10.10.10.150:5000/v3\",\n  username=\"admin\",\n  password=\"access123\",\n  project_name=\"admin\",\n  user_domain_name=\"Default\",\n  project_domain_name=\"Default\")   sess = session.Session(auth=auth, verify=False)   nova = nclient.Client(2.1, session=sess) instance_flavor = nova.flavors.find(name=\"m1.small\") print(\"==========================Flavor Details==========================\") pprint(instance_flavor)\n```", "```py\nfrom keystoneauth1.identity import v3\nfrom keystoneauth1 import session\nimport neutronclient.neutron.client as neuclient\n\nauth = v3.Password(auth_url=\"http://10.10.10.150:5000/v3\",\n  username=\"admin\",\n  password=\"access123\",\n  project_name=\"admin\",\n  user_domain_name=\"Default\",\n  project_domain_name=\"Default\")   sess = session.Session(auth=auth, verify=False)   neutron = neuclient.Client(2, session=sess)   # Create Network   body_network = {'name': 'python_network',\n  'admin_state_up': True,\n #'port_security_enabled': False,\n  'shared': True,\n  # 'provider:network_type': 'vlan|vxlan',\n # 'provider:segmentation_id': 29 # 'provider:physical_network': None, # 'mtu': 1450,  } neutron.create_network({'network':body_network}) network_id = neutron.list_networks(name=\"python_network\")[\"networks\"][0][\"id\"]     # Create Subnet   body_subnet = {\n  \"subnets\":[\n  {\n  \"name\":\"python_network_subnet\",\n  \"network_id\":network_id,\n  \"enable_dhcp\":True,\n  \"cidr\": \"172.16.128.0/24\",\n  \"gateway_ip\": \"172.16.128.1\",\n  \"allocation_pools\":[\n  {\n  \"start\": \"172.16.128.10\",\n  \"end\": \"172.16.128.100\"\n  }\n  ],\n  \"ip_version\": 4,\n  }\n  ]\n  } neutron.create_subnet(body=body_subnet) \n```", "```py\n\nprint(\"=================Launch The Instance=================\")   image_name = glance.images.get(image.id)   network1 = neutron.list_networks(name=\"python_network\") instance_nics = [{'net-id': network1[\"networks\"][0][\"id\"]}]   server = nova.servers.create(name = \"python-instance\",\n  image = image_name.id,\n  flavor = instance_flavor.id,\n  nics = instance_nics,) status = server.status\nwhile status == 'BUILD':\n  print(\"Sleeping 5 seconds till the server status is changed\")\n  time.sleep(5)\n  instance = nova.servers.get(server.id)\n  status = instance.status\n    print(status) print(\"Current Status is: {0}\".format(status))\n```", "```py\nSleeping 5 seconds till the server status is changed\nSleeping 5 seconds till the server status is changed\nSleeping 5 seconds till the server status is changed\nCurrent Status is: ACTIVE\n```", "```py\npip install shade\n```", "```py\n# yum install ansible -y\n```", "```py\n[root@AutomationServer ~]# ansible --version\nansible 2.5.0\n config file = /etc/ansible/ansible.cfg\n configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']\n ansible python module location = /usr/lib/python2.7/site-packages/ansible\n executable location = /usr/bin/ansible\n python version = 2.7.5 (default, Aug  4 2017, 00:39:18) [GCC 4.8.5 20150623 (Red Hat 4.8.5-16)]\n```", "```py\n--- - hosts: localhost\n  vars:\n os_server: '10.10.10.150'\n  gather_facts: yes\n  connection: local\n  environment:\n OS_USERNAME: admin\n  OS_PASSWORD: access123\n  OS_AUTH_URL: http://{{ os_server }}:5000/v3\n  OS_TENANT_NAME: admin\n  OS_REGION_NAME: RegionOne\n  OS_USER_DOMAIN_NAME: Default\n  OS_PROJECT_DOMAIN_NAME: Default    tasks:\n  - name: \"Upload the Cirros Image\"\n  os_image:\n name: Cirros_Image\n  container_format: bare\n  disk_format: qcow2\n  state: present\n  filename: /root/cirros-0.4.0-x86_64-disk.img\n  ignore_errors: yes    - name: \"CREATE CIRROS_FLAVOR\"\n  os_nova_flavor:\n state: present\n  name: CIRROS_FLAVOR\n  ram: 2048\n  vcpus: 4\n  disk: 35\n  ignore_errors: yes    - name: \"Create the Cirros Network\"\n  os_network:\n state: present\n  name: Cirros_network\n  external: True\n  shared: True\n  register: Cirros_network\n  ignore_errors: yes      - name: \"Create Subnet for The network Cirros_network\"\n  os_subnet:\n state: present\n  network_name: \"{{ Cirros_network.id }}\"\n  name: Cirros_network_subnet\n  ip_version: 4\n  cidr: 10.10.128.0/18\n  gateway_ip: 10.10.128.1\n  enable_dhcp: yes\n  dns_nameservers:\n  - 8.8.8.8\n  register: Cirros_network_subnet\n  ignore_errors: yes      - name: \"Create Cirros Machine on Compute\"\n  os_server:\n state: present\n  name: ansible_instance\n  image: Cirros_Image\n  flavor: CIRROS_FLAVOR\n  security_groups: default\n  nics:\n  - net-name: Cirros_network\n  ignore_errors: yes \n```", "```py\nansible-playbook os_playbook.yml\n```", "```py\n [WARNING]: No inventory was parsed, only implicit localhost is available\n\n [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'\n\nPLAY [localhost] ****************************************************************************\n\nTASK [Gathering Facts] **********************************************************************\nok: [localhost]\n\nTASK [Upload the Cirros Image] **************************************************************\nchanged: [localhost]\n\nTASK [CREATE CIRROS_FLAVOR] *****************************************************************\nok: [localhost]\n\nTASK [Create the Cirros Network] ************************************************************\nchanged: [localhost]\n\nTASK [Create Subnet for The network Cirros_network] *****************************************\nchanged: [localhost]\n\nTASK [Create Cirros Machine on Compute] *****************************************************\nchanged: [localhost]\n\nPLAY RECAP **********************************************************************************\nlocalhost                  : ok=6    changed=4    unreachable=0    failed=0   \n```"]