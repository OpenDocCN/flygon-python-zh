["```py\nhttps://<account-id>.us-west-2.aws.found.io:9243\n```", "```py\nhttps://<username>:<password>@<account-id>.us-west-2.aws.found.io:9243\n```", "```py\nhttps://elastic:tduhdExunhEWPjSuH73O6yLS@d7c72d3327076cc4daf5528103c46a27.us-west-2.aws.found.io:9243\n```", "```py\n$ curl https://elastic:tduhdExunhEWPjSuH73O6yLS@7dc72d3327076cc4daf5528103c46a27.us-west-2.aws.found.io:9243\n{\n  \"name\": \"instance-0000000001\",\n  \"cluster_name\": \"7dc72d3327076cc4daf5528103c46a27\",\n  \"cluster_uuid\": \"g9UMPEo-QRaZdIlgmOA7hg\",\n  \"version\": {\n    \"number\": \"6.1.1\",\n    \"build_hash\": \"bd92e7f\",\n    \"build_date\": \"2017-12-17T20:23:25.338Z\",\n    \"build_snapshot\": false,\n    \"lucene_version\": \"7.1.0\",\n    \"minimum_wire_compatibility_version\": \"5.6.0\",\n    \"minimum_index_compatibility_version\": \"5.0.0\"\n  },\n  \"tagline\": \"You Know, for Search\"\n}\nMichaels-iMac-2:pems michaelheydt$\n```", "```py\n$ python elasticcloud_starwars.py\n```", "```py\nfrom elasticsearch import Elasticsearch\nimport requests\nimport json\n\nif __name__ == '__main__':\n    es = Elasticsearch(\n        [\n            \"https://elastic:tduhdExunhEWPjSuH73O6yLS@d7c72d3327076cc4daf5528103c46a27.us-west-2.aws.found.io:9243\"\n  ])\n\ni = 1 while i<20:\n    r = requests.get('http://swapi.co/api/people/' + str(i))\n    if r.status_code is not 200:\n print(\"Got a \" + str(r.status_code) + \" so stopping\")\n break  j = json.loads(r.content)\n print(i, j)\n #es.index(index='sw', doc_type='people', id=i, body=json.loads(r.content))\n  i = i + 1\n```", "```py\n1 Luke Skywalker\n2 C-3PO\n3 R2-D2\n4 Darth Vader\n5 Leia Organa\n6 Owen Lars\n7 Beru Whitesun lars\n8 R5-D4\n9 Biggs Darklighter\n10 Obi-Wan Kenobi\n11 Anakin Skywalker\n12 Wilhuff Tarkin\n13 Chewbacca\n14 Han Solo\n15 Greedo\n16 Jabba Desilijic Tiure\nGot a 404 so stopping\n```", "```py\nes = Elasticsearch(\n    [\n        \"https://elastic:tduhdExunhEWPjSuH73O6yLS@7dc72d3327076cc4daf5528103c46a27.us-west-2.aws.found.io:9243\"\n  ])\n\nsearch_definition = {\n    \"query\":{\n        \"match\": {\n            \"hair_color\": \"blond\"\n  }\n    }\n}\n\nresult = es.search(index=\"sw\", doc_type=\"people\", body=search_definition)\nprint(json.dumps(result, indent=4))\n```", "```py\n{\n  \"took\": 2,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 2,\n    \"max_score\": 1.3112576,\n    \"hits\": [\n      {\n        \"_index\": \"sw\",\n        \"_type\": \"people\",\n        \"_id\": \"1\",\n        \"_score\": 1.3112576,\n        \"_source\": {\n          \"name\": \"Luke Skywalker\",\n          \"height\": \"172\",\n          \"mass\": \"77\",\n          \"hair_color\": \"blond\",\n          \"skin_color\": \"fair\",\n          \"eye_color\": \"blue\",\n          \"birth_year\": \"19BBY\",\n          \"gender\": \"male\",\n          \"homeworld\": \"https://swapi.co/api/planets/1/\",\n          \"films\": [\n            \"https://swapi.co/api/films/2/\",\n            \"https://swapi.co/api/films/6/\",\n            \"https://swapi.co/api/films/3/\",\n            \"https://swapi.co/api/films/1/\",\n            \"https://swapi.co/api/films/7/\"\n          ],\n          \"species\": [\n            \"https://swapi.co/api/species/1/\"\n          ],\n          \"vehicles\": [\n            \"https://swapi.co/api/vehicles/14/\",\n            \"https://swapi.co/api/vehicles/30/\"\n          ],\n          \"starships\": [\n            \"https://swapi.co/api/starships/12/\",\n            \"https://swapi.co/api/starships/22/\"\n          ],\n          \"created\": \"2014-12-09T13:50:51.644000Z\",\n          \"edited\": \"2014-12-20T21:17:56.891000Z\",\n          \"url\": \"https://swapi.co/api/people/1/\"\n        }\n      },\n      {\n        \"_index\": \"sw\",\n        \"_type\": \"people\",\n        \"_id\": \"11\",\n        \"_score\": 0.80259144,\n        \"_source\": {\n          \"name\": \"Anakin Skywalker\",\n          \"height\": \"188\",\n          \"mass\": \"84\",\n          \"hair_color\": \"blond\",\n          \"skin_color\": \"fair\",\n          \"eye_color\": \"blue\",\n          \"birth_year\": \"41.9BBY\",\n          \"gender\": \"male\",\n          \"homeworld\": \"https://swapi.co/api/planets/1/\",\n          \"films\": [\n            \"https://swapi.co/api/films/5/\",\n            \"https://swapi.co/api/films/4/\",\n            \"https://swapi.co/api/films/6/\"\n          ],\n          \"species\": [\n            \"https://swapi.co/api/species/1/\"\n          ],\n          \"vehicles\": [\n            \"https://swapi.co/api/vehicles/44/\",\n            \"https://swapi.co/api/vehicles/46/\"\n          ],\n          \"starships\": [\n            \"https://swapi.co/api/starships/59/\",\n            \"https://swapi.co/api/starships/65/\",\n            \"https://swapi.co/api/starships/39/\"\n          ],\n          \"created\": \"2014-12-10T16:20:44.310000Z\",\n          \"edited\": \"2014-12-20T21:17:50.327000Z\",\n          \"url\": \"https://swapi.co/api/people/11/\"\n        }\n      }\n    ]\n  }\n}\n```", "```py\nfrom sojobs.scraping import get_job_listing_info\nfrom elasticsearch import Elasticsearch\nimport json\n\nif __name__ == \"__main__\":\n\n    es = Elasticsearch()\n\n    job_ids = [\"122517\", \"163854\", \"138222\", \"164641\"]\n\n    for job_id in job_ids:\n        if not es.exists(index='joblistings', doc_type='job-listing', id=job_id):\n            listing = get_job_listing_info(job_id)\n            es.index(index='joblistings', doc_type='job-listing', id=job_id, body=listing)\n\n    search_definition = {\n        \"query\": {\n            \"match\": {\n                \"JSON.skills\": {\n                    \"query\": \"c#\"   }\n            }\n        }\n    }\n\n    result = es.search(index=\"joblistings\", doc_type=\"job-listing\", body=search_definition)\n    print(json.dumps(result, indent=4))\n```", "```py\n{\n  \"took\": 4,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 2,\n    \"max_score\": 1.031828,\n    \"hits\": [\n\n```", "```py\nsearch_definition = {\n    \"query\": {\n        \"match\": {\n            \"JSON.skills\": {\n                \"query\": \"c# sql\"\n  }\n        }\n    },\n    \"_source\": [\"ID\"]\n}\n```", "```py\n{\n  \"took\": 4,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 2,\n    \"max_score\": 1.031828,\n    \"hits\": [\n      {\n        \"_index\": \"joblistings\",\n        \"_type\": \"job-listing\",\n        \"_id\": \"164641\",\n        \"_score\": 1.031828,\n        \"_source\": {\n          \"ID\": \"164641\"\n        }\n      },\n      {\n        \"_index\": \"joblistings\",\n        \"_type\": \"job-listing\",\n        \"_id\": \"122517\",\n        \"_score\": 0.9092852,\n        \"_source\": {\n          \"ID\": \"122517\"\n        }\n      }\n    ]\n  }\n}\n```", "```py\nsearch_definition={\n  \"query\": {\n    \"match\": {\n      \"JSON.skills\": {\n        \"query\": \"c# sql\",\n        \"operator\": \"AND\"\n      }\n    }\n  },\n  \"_source\": [\n    \"ID\"\n  ]\n}\n```", "```py\n{\n  \"took\": 4,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 2,\n    \"max_score\": 1.031828,\n    \"hits\": [\n      {\n        \"_index\": \"joblistings\",\n        \"_type\": \"job-listing\",\n        \"_id\": \"164641\",\n        \"_score\": 1.031828,\n        \"_source\": {\n          \"ID\": \"164641\"\n        }\n      },\n      {\n        \"_index\": \"joblistings\",\n        \"_type\": \"job-listing\",\n        \"_id\": \"122517\",\n        \"_score\": 0.9092852,\n        \"_source\": {\n          \"ID\": \"122517\"\n        }\n      }\n    ]\n  }\n}\n```", "```py\n$ python scraper_api.py\nStarting the job listing API ...\n * Running on http://0.0.0.0:8080/ (Press CTRL+C to quit)\n * Restarting with stat\nStarting the job listing API ...\n * Debugger is active!\n * Debugger pin code: 449-370-213\n```", "```py\n$ curl localhost:8080/joblistings/search -d \"skills=c# sql\"\n{\n  \"took\": 4,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 2,\n    \"max_score\": 1.031828,\n    \"hits\": [\n      {\n        \"_index\": \"joblistings\",\n        \"_type\": \"job-listing\",\n        \"_id\": \"164641\",\n        \"_score\": 1.031828,\n        \"_source\": {\n          \"ID\": \"164641\"\n        }\n      },\n      {\n        \"_index\": \"joblistings\",\n        \"_type\": \"job-listing\",\n        \"_id\": \"122517\",\n        \"_score\": 0.9092852,\n        \"_source\": {\n          \"ID\": \"122517\"\n        }\n      }\n    ]\n  }\n}\n```", "```py\nclass JobSearch(Resource):\n    def post(self):\n        skills = request.form['skills']\n        print(\"Request for jobs with the following skills: \" + skills)\n\n        host = 'localhost'\n  if os.environ.get('ES_HOST'):\n            host = os.environ.get('ES_HOST')\n        print(\"ElasticSearch host: \" + host)\n\n        es = Elasticsearch(hosts=[host])\n        search_definition = {\n            \"query\": {\n                \"match\": {\n                    \"JSON.skills\": {\n                        \"query\": skills,\n                        \"operator\": \"AND\"\n  }\n                }\n            },\n            \"_source\": [\"ID\"]\n        }\n\n        try:\n            result = es.search(index=\"joblistings\", doc_type=\"job-listing\", body=search_definition)\n            print(result)\n            return result\n\n        except:\n            return sys.exc_info()[0]\n\napi.add_resource(JobSearch, '/', '/joblistings/search')\n```", "```py\nhost = 'localhost'\nif os.environ.get('ES_HOST'):\n    host = os.environ.get('ES_HOST')\nprint(\"ElasticSearch host: \" + host)\n\nes = Elasticsearch(hosts=[host])\n```", "```py\nCONFIG = {'AMQP_URI': \"amqp://guest:guest@localhost\"}\nif os.environ.get('JOBS_AMQP_URL'):\n    CONFIG['AMQP_URI'] = os.environ.get('JOBS_AMQP_URL')\nprint(\"AMQP_URI: \" + CONFIG[\"AMQP_URI\"])\n\nwith ClusterRpcProxy(CONFIG) as rpc:\n```", "```py\n$ aws configure\nAWS Access Key ID [None]: AKIA---------QKCVQAA\nAWS Secret Access Key [None]: KEuSaLgn4dpyXe-------------VmEKdhV\nDefault region name [None]: us-west-2\nDefault output format [None]: json\n```", "```py\n$ aws ecr get-login --no-include-email --region us-west-2 docker login -u AWS -p eyJwYXlsb2FkIjoiN3BZVWY4Q2JoZkFwYUNKOUp6c1BkRy80VmRYN0Y2LzQ0Y2pVNFJKZTA5alBrUEdSMHlNUk9TMytsTFVURGtxb3Q5VTZqV0xxNmRCVHJnL1FIb2lGbEF0dVZhNFpEOUkxb1FxUTNwcUluaVhqS1FCZmU2WTRLNlQrbjE4VHdiOEpqbmtwWjJJek8xRlR2Y2Y5S3NGRlQrbDZhcktUNXZJbjNkb1czVGQ2TXZPUlg5cE5Ea2w4S29vamt6SE10Ym8rOW5mLzBvVkRRSDlaY3hqRG45d0FzNVA5Z1BPVUU5OVFrTEZGeENPUHJRZmlTeHFqaEVPcGo3ZVAxL3pCNnFTdjVXUEozaUNtV0I0b1lFNEcyVzA4M2hKQmpESUFTV1VMZ1B0MFI2YUlHSHJxTlRvTGZOR1R5clJ2VUZKcnFWZGptMkZlR0ppK3I5emFrdGFKeDJBNVRCUzBzZDZaOG1yeW1Nd0dBVi81NDZDeU1XYVliby9reWtaNUNuZE8zVXFHdHFKSnJmQVRKakhlVU1jTXQ1RjE0Tk83OWR0ckNnYmZmUHdtS1hXOVh6MklWUG5VUlJsekRaUjRMMVFKT2NjNlE0NWFaNkR2enlDRWw1SzVwOEcvK3lSMXFPYzdKUWpxaUErdDZyaCtDNXJCWHlJQndKRm5mcUJhaVhBMVhNMFNocmlNd0FUTXFjZ0NtZTEyUGhOMmM2c0pNTU5hZ0JMNEhXSkwyNXZpQzMyOVI2MytBUWhPNkVaajVMdG9iMVRreFFjbjNGamVNdThPM0ppZnM5WGxPSVJsOHlsUUh0LzFlQ2ZYelQ1cVFOU2g1NjFiVWZtOXNhNFRRWlhZUlNLVVFrd3JFK09EUXh3NUVnTXFTbS9FRm1PbHkxdEpncXNzVFljeUE4Y1VYczFnOFBHL2VwVGtVTG1ReFYwa0p5MzdxUmlIdHU1OWdjMDRmZWFSVGdSekhQcXl0WExzdFpXcTVCeVRZTnhMeVVpZW0yN3JkQWhmaStpUHpMTXV1NGZJa3JjdmlBZFF3dGwrdEVORTNZSVBhUnZJMFN0Q1djN2J2blI2Njg3OEhQZHJKdXlYaTN0czhDYlBXNExOamVCRm8waUt0SktCckJjN0tUZzJEY1d4NlN4b1Vkc2ErdnN4V0N5NWFzeWdMUlBHYVdoNzFwOVhFZWpPZTczNE80Z0l5RklBU0pHR3o1SVRzYVkwbFB6ajNEYW9QMVhOT3dhcDYwcC9Gb0pQMG1ITjNsb202eW1EaDA0WEoxWnZ0K0lkMFJ4bE9lVUt3bzRFZFVMaHJ2enBMOUR4SGI5WFFCMEdNWjFJRlI0MitSb3NMaDVQa0g1RHh1bDJZU0pQMXc0UnVoNUpzUm5rcmF3dHZzSG5PSGd2YVZTeWl5bFR0cFlQY1haVk51NE5iWnkxSzQwOG5XTVhiMFBNQzJ5OHJuNlpVTDA9IiwiZGF0YWtleSI6IkFRRUJBSGo2bGM0WElKdy83bG4wSGMwMERNZWs2R0V4SENiWTRSSXBUTUNJNThJblV3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURQdTFQVXQwRDFkN3c3Rys3Z0lCRUlBN21Xay9EZnNOM3R5MS9iRFdRYlZtZjdOOURST2xhQWFFbTBFQVFndy9JYlBjTzhLc0RlNDBCLzhOVnR0YmlFK1FXSDBCaTZmemtCbzNxTkE9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTE1NjA2NzM0fQ== https://270157190882.dkr.ecr.us-west-2.amazonaws.com\n```", "```py\n$(aws ecr get-login --no-include-email --region us-west-2)\nWARNING! Using --password via the CLI is insecure. Use --password-stdin.\nLogin Succeeded\n```", "```py\n$ docker build ../.. -f Dockerfile-api -t scraper-rest-api:latest\n```", "```py\nFROM python:3\nWORKDIR /usr/src/app\n\nRUN pip install Flask-RESTful Elasticsearch Nameko\nCOPY 11/11/scraper_api.py .\n\nCMD [\"python\", \"scraper_api.py\"]\n```", "```py\n$ docker build ../.. -f Dockerfile-microservice -t scraper-microservice:latest\n```", "```py\nFROM python:3\nWORKDIR /usr/src/app\n\nRUN pip install nameko BeautifulSoup4 nltk lxml\nRUN python -m nltk.downloader punkt -d /usr/share/nltk_data all\n\nCOPY 11/05/scraper_microservice.py .\nCOPY modules/sojobs sojobs\n\nCMD [\"python\", \"-u\", \"scraper_microservice.py\"]\n```", "```py\n$ aws ecr describe-repositories\n{\n    \"repositories\": []\n}\n```", "```py\n$ aws ecr create-repository --repository-name scraper-rest-api\n{\n  \"repository\": {\n    \"repositoryArn\": \"arn:aws:ecr:us-west-2:414704166289:repository/scraper-rest-api\",\n    \"repositoryUri\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-rest-api\",\n    \"repositoryName\": \"scraper-rest-api\",\n    \"registryId\": \"414704166289\",\n    \"createdAt\": 1515632756.0\n  }\n}\n\n05 $ aws ecr create-repository --repository-name scraper-microservice\n{\n  \"repository\": {\n    \"repositoryArn\": \"arn:aws:ecr:us-west-2:414704166289:repository/scraper-microservice\",\n    \"registryId\": \"414704166289\",\n    \"repositoryName\": \"scraper-microservice\",\n    \"repositoryUri\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-microservice\",\n    \"createdAt\": 1515632772.0\n  }\n}\n\n05 $ aws ecr create-repository --repository-name rabbitmq\n{\n  \"repository\": {\n    \"repositoryArn\": \"arn:aws:ecr:us-west-2:414704166289:repository/rabbitmq\",\n    \"repositoryName\": \"rabbitmq\",\n    \"registryId\": \"414704166289\",\n    \"createdAt\": 1515632780.0,\n    \"repositoryUri\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/rabbitmq\"\n  }\n}\n```", "```py\n$ docker images\nREPOSITORY           TAG          IMAGE ID     CREATED        SIZE\nscraper-rest-api     latest       b82653e11635 29 seconds ago 717MB\nscraper-microservice latest       efe19d7b5279 11 minutes ago 4.16GB\nrabbitmq             3-management 6cb6e2f951a8 2 weeks ago    151MB\npython               3            c1e459c00dc3 3 weeks ago    692MB\n```", "```py\n$ docker tag b8 414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-rest-api\n\n$ docker tag ef 414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-microservice\n\n$ docker tag 6c 414704166289.dkr.ecr.us-west-2.amazonaws.com/rabbitmq\n```", "```py\n$ docker images\nREPOSITORY TAG IMAGE ID CREATED SIZE\n414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-rest-api latest b82653e11635 4 minutes ago 717MB\nscraper-rest-api latest b82653e11635 4 minutes ago 717MB\n414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-microservice latest efe19d7b5279 15 minutes ago 4.16GB\nscraper-microservice latest efe19d7b5279 15 minutes ago 4.16GB\n414704166289.dkr.ecr.us-west-2.amazonaws.com/rabbitmq latest 6cb6e2f951a8 2 weeks ago 151MB\nrabbitmq 3-management 6cb6e2f951a8 2 weeks ago 151MB\npython 3 c1e459c00dc3 3 weeks ago 692MB\n```", "```py\n$ docker push 414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-rest-api\nThe push refers to repository [414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-rest-api]\n7117db0da9a9: Pushed\n8eb1be67ed26: Pushed\n5fcc76c4c6c0: Pushed\n6dce5c484bde: Pushed\n057c34df1f1a: Pushed\n3d358bf2f209: Pushed\n0870b36b7599: Pushed\n8fe6d5dcea45: Pushed\n06b8d020c11b: Pushed\nb9914afd042f: Pushed\n4bcdffd70da2: Pushed\nlatest: digest: sha256:2fa2ccc0f4141a1473386d3592b751527eaccb37f035aa08ed0c4b6d7abc9139 size: 2634\n\n$ docker push 414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-microservice\nThe push refers to repository [414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-microservice]\n3765fccaf6a6: Pushed\n4bde7a8212e1: Pushed\nd0aa245987b4: Pushed\n5657283a8f79: Pushed\n4f33694fe63a: Pushed\n5fcc76c4c6c0: Pushed\n6dce5c484bde: Pushed\n057c34df1f1a: Pushed\n3d358bf2f209: Pushed\n0870b36b7599: Pushed\n8fe6d5dcea45: Pushed\n06b8d020c11b: Pushed\nb9914afd042f: Pushed\n4bcdffd70da2: Pushed\nlatest: digest: sha256:02c1089689fff7175603c86d6ef8dc21ff6aaffadf45735ef754f606f2cf6182 size: 3262\n\n$ docker push 414704166289.dkr.ecr.us-west-2.amazonaws.com/rabbitmq\nThe push refers to repository [414704166289.dkr.ecr.us-west-2.amazonaws.com/rabbitmq]\ne38187f05202: Pushed\nea37471972cd: Pushed\n2f1d47e88a53: Pushed\ne8c84964de08: Pushed\nd0537ac3fb13: Pushed\n9f345d60d035: Pushed\nb45610229549: Pushed\n773afacc96cc: Pushed\n5eb8d21fccbb: Pushed\n10699a5bd960: Pushed\n27be686b9e1f: Pushed\n96bfbdb03e1c: Pushed\n1709335ba200: Pushed\n2ec5c0a4cb57: Pushed\nlatest: digest: sha256:74308ef1dabc1a0b9615f756d80f5faf388f4fb038660ae42f437be45866b65e size: 3245\n```", "```py\n$ aws ecr list-images --repository-name scraper-rest-api\n{\n  \"imageIds\": [\n    {\n      \"imageTag\": \"latest\",\n      \"imageDigest\": \"sha256:2fa2ccc0f4141a1473386d3592b751527eaccb37f035aa08ed0c4b6d7abc9139\"\n    }\n  ]\n}\n```", "```py\n$ aws ecs create-cluster --cluster-name scraper-cluster\n{\n  \"cluster\": {\n    \"clusterName\": \"scraper-cluster\",\n    \"registeredContainerInstancesCount\": 0,\n    \"clusterArn\": \"arn:aws:ecs:us-west-2:414704166289:cluster/scraper-cluster\",\n    \"status\": \"ACTIVE\",\n    \"activeServicesCount\": 0,\n    \"pendingTasksCount\": 0,\n    \"runningTasksCount\": 0\n  }\n}\n```", "```py\n$ aws ec2 create-key-pair --key-name ScraperClusterKP --query 'KeyMaterial' --output text > ScraperClusterKP.pem\n\n$ aws ec2 describe-key-pairs --key-name ScraperClusterKP\n{\n  \"KeyPairs\": [\n    {\n      \"KeyFingerprint\": \"4a:8a:22:fa:53:a7:87:df:c5:17:d9:4f:b1:df:4e:22:48:90:27:2d\",\n      \"KeyName\": \"ScraperClusterKP\"\n    }\n  ]\n}\n```", "```py\n$ aws  ec2  create-security-group  --group-name  ScraperClusterSG  --description  \"Scraper Cluster SG\u201d\n{\n  \"GroupId\": \"sg-5e724022\"\n} \n$ aws ec2 authorize-security-group-ingress --group-name ScraperClusterSG --protocol tcp --port 22 --cidr 0.0.0.0/0\n\n$ aws ec2 authorize-security-group-ingress --group-name ScraperClusterSG --protocol tcp --port 80 --cidr 0.0.0.0/0\n\n$ aws ec2 authorize-security-group-ingress --group-name ScraperClusterSG --protocol tcp --port 5672 --cidr 0.0.0.0/0\n\n$ aws ec2 authorize-security-group-ingress --group-name ScraperClusterSG --protocol tcp --port 15672 --cidr 0.0.0.0/0\n```", "```py\n$ aws iam create-role --role-name ecsRole --assume-role-policy-document file://ecsPolicy.json\n\n$ aws  iam  put-role-policy  --role-name  ecsRole  --policy-name  ecsRolePolicy  --policy-document  file://rolePolicy.json\n\n$ aws iam create-instance-profile --instance-profile-name ecsRole \n$ aws iam add-role-to-instance-profile --instance-profile-name ecsRole --role-name ecsRole\n```", "```py\n$ aws ec2 run-instances --image-id ami-c9c87cb1 --count 1 --instance-type m4.large --key-name ScraperClusterKP --iam-instance-profile \"Name= ecsRole\" --security-groups ScraperClusterSG --user-data file://userdata.txt\n```", "```py\n$ aws ecs list-container-instances --cluster scraper-cluster\n{\n  \"containerInstanceArns\": [\n    \"arn:aws:ecs:us-west-2:414704166289:container-instance/263d9416-305f-46ff-a344-9e7076ca352a\"\n  ]\n}\n```", "```py\n$ aws ecs register-task-definition --cli-input-json file://td.json\n{\n  \"taskDefinition\": {\n    \"volumes\": [\n\n    ],\n    \"family\": \"scraper\",\n    \"memory\": \"4096\",\n    \"placementConstraints\": [\n\n    ]\n  ],\n  \"cpu\": \"1024\",\n  \"containerDefinitions\": [\n    {\n      \"name\": \"rabbitmq\",\n      \"cpu\": 0,\n      \"volumesFrom\": [\n\n      ],\n      \"mountPoints\": [\n\n      ],\n      \"portMappings\": [\n        {\n          \"hostPort\": 15672,\n          \"protocol\": \"tcp\",\n          \"containerPort\": 15672\n        },\n        {\n          \"hostPort\": 5672,\n          \"protocol\": \"tcp\",\n          \"containerPort\": 5672\n        }\n      ],\n      \"environment\": [\n\n      ],\n      \"image\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/rabbitmq\",\n      \"memory\": 256,\n      \"essential\": true\n    },\n    {\n      \"name\": \"scraper-microservice\",\n      \"cpu\": 0,\n      \"essential\": true,\n      \"volumesFrom\": [\n\n      ],\n      \"mountPoints\": [\n\n      ],\n      \"portMappings\": [\n\n      ],\n      \"environment\": [\n        {\n          \"name\": \"AMQP_URI\",\n          \"value\": \"pyamqp://guest:guest@rabbitmq\"\n        }\n      ],\n      \"image\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-microservice\",\n      \"memory\": 256,\n      \"links\": [\n        \"rabbitmq\"\n      ]\n    },\n    {\n      \"name\": \"api\",\n      \"cpu\": 0,\n      \"essential\": true,\n      \"volumesFrom\": [\n\n      ],\n      \"mountPoints\": [\n\n      ],\n      \"portMappings\": [\n        {\n          \"hostPort\": 80,\n          \"protocol\": \"tcp\",\n          \"containerPort\": 8080\n        }\n      ],\n      \"environment\": [\n        {\n          \"name\": \"AMQP_URI\",\n          \"value\": \"pyamqp://guest:guest@rabbitmq\"\n        },\n        {\n          \"name\": \"ES_HOST\",\n          \"value\": \"https://elastic:tduhdExunhEWPjSuH73O6yLS@7dc72d3327076cc4daf5528103c46a27.us-west-2.aws.found.io:9243\"\n        }\n      ],\n      \"image\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-rest-api\",\n      \"memory\": 128,\n      \"links\": [\n        \"rabbitmq\"\n      ]\n    }\n  ],\n  \"requiresCompatibilities\": [\n    \"EC2\"\n  ],\n  \"status\": \"ACTIVE\",\n  \"taskDefinitionArn\": \"arn:aws:ecs:us-west-2:414704166289:task-definition/scraper:7\",\n  \"requiresAttributes\": [\n    {\n      \"name\": \"com.amazonaws.ecs.capability.ecr-auth\"\n    }\n  ],\n  \"revision\": 7,\n  \"compatibilities\": [\n    \"EC2\"\n  ]\n}\n```", "```py\n{\n    \"family\": \"scraper-as-a-service\",\n  \"requiresCompatibilities\": [\n        \"EC2\"\n  ],\n  \"cpu\": \"1024\",\n  \"memory\": \"4096\",\n  \"volumes\": [], \n```", "```py\n\"containerDefinitions\": [\n```", "```py\n{\n    \"name\": \"rabbitmq\",\n  \"image\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/rabbitmq\",   \"cpu\": 0,\n  \"memory\": 256,\n  \"portMappings\": [\n        {\n            \"containerPort\": 15672,\n  \"hostPort\": 15672,\n  \"protocol\": \"tcp\"\n  },\n  {\n            \"containerPort\": 5672,\n  \"hostPort\": 5672,\n  \"protocol\": \"tcp\"\n  }\n    ],\n  \"essential\": true },\n```", "```py\n{\n    \"name\": \"scraper-microservice\",\n  \"image\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-microservice\",\n  \"cpu\": 0,\n  \"memory\": 256,\n  \"essential\": true,\n  \"environment\": [\n        {\n            \"name\": \"AMQP_URI\",\n  \"value\": \"pyamqp://guest:guest@rabbitmq\"\n  }\n    ],\n  \"links\": [\n        \"rabbitmq\"\n  ]\n},\n```", "```py\n{\n  \"name\": \"api\",\n  \"image\": \"414704166289.dkr.ecr.us-west-2.amazonaws.com/scraper-rest-api\",\n  \"cpu\": 0,\n  \"memory\": 128,\n  \"essential\": true,\n  \"portMappings\": [\n    {\n      \"containerPort\": 8080,\n      \"hostPort\": 80,\n      \"protocol\": \"tcp\"\n    }\n  ],\n  \"environment\": [\n    {\n      \"name\": \"AMQP_URI\",\n      \"value\": \"pyamqp://guest:guest@rabbitmq\"\n    },\n    {\n      \"name\": \"ES_HOST\",\n      \"value\": \"https://elastic:tduhdExunhEWPjSuH73O6yLS@7dc72d3327076cc4daf5528103c46a27.us-west-2.aws.found.io:9243\"\n    }\n  ],\n  \"links\": [\n    \"rabbitmq\"\n  ]\n}\n    ]\n}\n```", "```py\n$ aws ecs list-task-definitions\n{\n  \"taskDefinitionArns\": [\n    \"arn:aws:ecs:us-west-2:414704166289:task-definition/scraper-as-a-service:17\"\n  ]\n}\n```", "```py\n$ aws  ecs  run-task  --cluster  scraper-cluster  --task-definition scraper-as-a-service:17  --count  1\n{\n  \"tasks\": [\n    {\n      \"taskArn\": \"arn:aws:ecs:us-west-2:414704166289:task/00d7b868-1b99-4b54-9f2a-0d5d0ae75197\",\n      \"version\": 1,\n      \"group\": \"family:scraper-as-a-service\",\n      \"containerInstanceArn\": \"arn:aws:ecs:us-west-2:414704166289:container-instance/5959fd63-7fd6-4f0e-92aa-ea136dabd762\",\n      \"taskDefinitionArn\": \"arn:aws:ecs:us-west-2:414704166289:task-definition/scraper-as-a-service:17\",\n      \"containers\": [\n        {\n          \"name\": \"rabbitmq\",\n          \"containerArn\": \"arn:aws:ecs:us-west-2:414704166289:container/4b14d4d5-422c-4ffa-a64c-476a983ec43b\",\n          \"lastStatus\": \"PENDING\",\n          \"taskArn\": \"arn:aws:ecs:us-west-2:414704166289:task/00d7b868-1b99-4b54-9f2a-0d5d0ae75197\",\n          \"networkInterfaces\": [\n\n          ]\n        },\n        {\n          \"name\": \"scraper-microservice\",\n          \"containerArn\": \"arn:aws:ecs:us-west-2:414704166289:container/511b39d2-5104-4962-a859-86fdd46568a9\",\n          \"lastStatus\": \"PENDING\",\n          \"taskArn\": \"arn:aws:ecs:us-west-2:414704166289:task/00d7b868-1b99-4b54-9f2a-0d5d0ae75197\",\n          \"networkInterfaces\": [\n\n          ]\n        },\n        {\n          \"name\": \"api\",\n          \"containerArn\": \"arn:aws:ecs:us-west-2:414704166289:container/0e660af7-e2e8-4707-b04b-b8df18bc335b\",\n          \"lastStatus\": \"PENDING\",\n          \"taskArn\": \"arn:aws:ecs:us-west-2:414704166289:task/00d7b868-1b99-4b54-9f2a-0d5d0ae75197\",\n          \"networkInterfaces\": [\n\n          ]\n        }\n      ],\n      \"launchType\": \"EC2\",\n      \"overrides\": {\n        \"containerOverrides\": [\n          {\n            \"name\": \"rabbitmq\"\n          },\n          {\n            \"name\": \"scraper-microservice\"\n          },\n          {\n            \"name\": \"api\"\n          }\n        ]\n      },\n      \"lastStatus\": \"PENDING\",\n      \"createdAt\": 1515739041.287,\n      \"clusterArn\": \"arn:aws:ecs:us-west-2:414704166289:cluster/scraper-cluster\",\n      \"memory\": \"4096\",\n      \"cpu\": \"1024\",\n      \"desiredStatus\": \"RUNNING\",\n      \"attachments\": [\n\n      ]\n    }\n  ],\n  \"failures\": [\n\n  ]\n} \n```", "```py\n$ aws  ecs  describe-tasks  --cluster  scraper-cluster  --task 00d7b868-1b99-4b54-9f2a-0d5d0ae75197\n```", "```py\n$ aws ecs list-container-instances --cluster scraper-cluster\n{\n  \"containerInstanceArns\": [\n    \"arn:aws:ecs:us-west-2:414704166289:container-instance/5959fd63-7fd6-4f0e-92aa-ea136dabd762\"\n  ]\n}\n```", "```py\n$ aws ecs describe-container-instances --cluster scraper-cluster --container-instances 5959fd63-7fd6-4f0e-92aa-ea136dabd762 | grep \"ec2InstanceId\"\n            \"ec2InstanceId\": \"i-08614daf41a9ab8a2\",\n```", "```py\n$ aws ec2 describe-instances --instance-ids i-08614daf41a9ab8a2 | grep \"PublicDnsName\"\n                    \"PublicDnsName\": \"ec2-52-27-26-220.us-west-2.compute.amazonaws.com\",\n                                        \"PublicDnsName\": \"ec2-52-27-26-220.us-west-2.compute.amazonaws.com\"\n                                \"PublicDnsName\": \"ec2-52-27-26-220.us-west-2.compute.amazonaws.com\"\n```", "```py\n$ curl ec2-52-27-26-220.us-west-2.compute.amazonaws.com/joblisting/122517 | head -n 6\n```", "```py\n{\n  \"ID\": \"122517\",\n  \"JSON\": {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"JobPosting\",\n    \"title\": \"SpaceX Enterprise Software Engineer, Full Stack\",\n```", "```py\n$ aws ec2 terminate-instances --instance-ids i-08614daf41a9ab8a2\n{\n  \"TerminatingInstances\": [\n    {\n      \"CurrentState\": {\n        \"Name\": \"shutting-down\",\n        \"Code\": 32\n      },\n      \"PreviousState\": {\n        \"Name\": \"running\",\n        \"Code\": 16\n      },\n      \"InstanceId\": \"i-08614daf41a9ab8a2\"\n    }\n  ]\n}\n```", "```py\n$ aws ecs delete-cluster --cluster scraper-cluster\n{\n  \"cluster\": {\n    \"activeServicesCount\": 0,\n    \"pendingTasksCount\": 0,\n    \"clusterArn\": \"arn:aws:ecs:us-west-2:414704166289:cluster/scraper-cluster\",\n    \"runningTasksCount\": 0,\n    \"clusterName\": \"scraper-cluster\",\n    \"registeredContainerInstancesCount\": 0,\n    \"status\": \"INACTIVE\"\n  }\n}\n```"]