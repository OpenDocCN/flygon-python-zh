["```py\nimport turtle\n\npacman = turtle.Turtle()\npacman.forward(100)\n\nturtle.done()\n```", "```py\nimport turtle\n\npacman = turtle.Turtle()\n\npacman.forward(50)\npacman.right(90)     \n\npacman.forward(50)\npacman.right(90)\n\npacman.forward(50)\npacman.right(90)\n\npacman.forward(50)\npacman.right(90)\n\nturtle.done()\n```", "```py\nimport turtle\n\npacman = turtle.Turtle()\nfor i in range(4):\n    pacman.forward(50)\n    pacman.right(90)\n\nturtle.done()\n```", "```py\nimport turtle\nstar = turtle.Turtle()\n\nexit = False\ndef main():\n    if not exit:\n        for i in range(100):\n star.forward(i)\n star.right(144)\nmain()\nturtle.mainloop()\n```", "```py\ndef draw_objects():\n    #statements\n    draw_objects() #may be you want to call it within the time interval \n                    of 100ms\n\ndraw_objects()\nturtle.mainloop()\n```", "```py\nimport turtle\nstar = turtle.Turtle()\n\nexit = False\ndef main():\n    if not exit:\n            star.forward(50)\n            star.right(144)\n    turtle.ontimer(main,500)\nmain()\n```", "```py\nimport turtle\nstar = turtle.Turtle()\ndef main():\n    for i in range(30):\n        star.forward(100)\n star.right(144)\nturtle.onkeypress(main,\"space\")\nturtle.listen()\nturtle.mainloop()\n```", "```py\nimport turtle\npacman = turtle.Turtle()\ndef move(x,y):\n    pacman.forward(180)\n    print(x,y)\n\nturtle.onclick(move) #calling move method\n#turtle.onclick(None) #to remove event-binding   \n```", "```py\n      import turtle \n\n      hexagon = turtle.Turtle()\n\n      num_of_sides = 6\n      length_of_sides = 70\n      angle = 360.0 / num_of_sides \n\n      for i in range(num_of_sides):\n          hexagon.forward(length_of_sides)\n          hexagon.right(angle)\n\n      turtle.done()\n```", "```py\nfrom turtle import *\n\ncolor('red', 'yellow')\nbegin_fill()\nwhile True:\n    forward(200)\n    left(170)\n    if abs(pos()) < 1:\n        break\nend_fill()\ndone()\n```"]