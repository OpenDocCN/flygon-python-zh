["```py\n$ sudo apt-get update\n$ sudo apt-get install -y git\n$ git --version\ngit version 2.7.4\n```", "```py\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@domain.com\"\n$ git config --list\nuser.name=Your Name\nuser.email=email@domain.com\n```", "```py\n$ cat ~/.gitconfig\n[user]\n name = Your Name\n email = email@domain.com\n```", "```py\n(optional)\n$ git config --global core.editor \"vim\"\n$ git config --list\nuser.name=Your Name\nuser.email=email@domain.com\ncore.editor=vim\n```", "```py\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n```", "```py\n# OSX\n# =========================\n\n.DS_Store\n.AppleDouble\n.LSOverride\n```", "```py\n$ git --help\nusage: git [--version] [--help] [-C <path>] [-c name=value]\n [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\n [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n <command> [<args>]\n```", "```py\n$ mkdir TestRepo\n$ cd TestRepo/\n$ git init\nInitialized empty Git repository in /home/echou/Master_Python_Networking_second_edition/Chapter11/TestRepo/.git/\n$ echo \"this is my test file\" > myFile.txt\n```", "```py\n$ ls -a\n. .. .git myFile.txt\n\n$ ls .git/\nbranches config description HEAD hooks info objects refs\n```", "```py\n$ ls .git/config\n.git/config\n\n$ ls ~/.gitconfig\n/home/echou/.gitconfig\n\n$ git config -l\nuser.name=Eric Chou\nuser.email=<email>\ncore.editor=vim\ncore.repositoryformatversion=0\ncore.filemode=true\ncore.bare=false\ncore.logallrefupdates=true\n```", "```py\n$ git status\nOn branch master\n\nInitial commit\n\nUntracked files:\n (use \"git add <file>...\" to include in what will be committed)\n\n myFile.txt\n\nnothing added to commit but untracked files present (use \"git add\" to track)\n\n$ git add myFile.txt\n$ git status\nOn branch master\n\nInitial commit\n\nChanges to be committed:\n (use \"git rm --cached <file>...\" to unstage)\n\n new file: myFile.txt\n```", "```py\n$ git commit -m \"adding myFile.txt\"\n[master (root-commit) 5f579ab] adding myFile.txt\n 1 file changed, 1 insertion(+)\n create mode 100644 myFile.txt\n\n$ git status\nOn branch master\nnothing to commit, working directory clean\n```", "```py\n$ vim myFile.txt\n$ cat myFile.txt\nthis is the second iteration of my test file\n$ git status\nOn branch master\nChanges not staged for commit:\n (use \"git add <file>...\" to update what will be committed)\n (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n modified: myFile.txt\n$ git add myFile.txt\n$ git commit -m \"made modificaitons to myFile.txt\"\n[master a3dd3ea] made modificaitons to myFile.txt\n 1 file changed, 1 insertion(+), 1 deletion(-)\n```", "```py\n$ git log\ncommit a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 09:58:24 2018 -0700\n\n made modificaitons to myFile.txt\n\ncommit 5f579ab1e9a3fae13aa7f1b8092055213157524d\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 08:05:09 2018 -0700\n\n adding myFile.txt\n```", "```py\n$ git show a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\ncommit a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 09:58:24 2018 -0700\n\n made modificaitons to myFile.txt\n\ndiff --git a/myFile.txt b/myFile.txt\nindex 6ccb42e..69e7d47 100644\n--- a/myFile.txt\n+++ b/myFile.txt\n@@ -1 +1 @@\n-this is my test file\n+this is the second iteration of my test file\n```", "```py\n$ git revert a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\n[master 9818f29] Revert \"made modificaitons to myFile.txt\"\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n# Check to verified the file content was before the second change. \n$ cat myFile.txt\nthis is my test file\n```", "```py\n$ git log\ncommit 9818f298f477fd880db6cb87112b50edc392f7fa\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 13:11:30 2018 -0700\n\n Revert \"made modificaitons to myFile.txt\"\n\n This reverts commit a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038.\n\n modified: reverted the change to myFile.txt\n\ncommit a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 09:58:24 2018 -0700\n\n made modificaitons to myFile.txt\n\ncommit 5f579ab1e9a3fae13aa7f1b8092055213157524d\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 08:05:09 2018 -0700\n\n adding myFile.txt\n```", "```py\n$ git reset --hard a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\nHEAD is now at a3dd3ea made modificaitons to myFile.txt\n\n$ git log\ncommit a3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 09:58:24 2018 -0700\n\n made modificaitons to myFile.txt\n\ncommit 5f579ab1e9a3fae13aa7f1b8092055213157524d\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 08:05:09 2018 -0700\n\n adding myFile.txt\n```", "```py\n$ git branch dev\n$ git branch\n dev\n* master\n```", "```py\n$ git checkout dev\nSwitched to branch 'dev'\n$ git branch\n* dev\n master\n```", "```py\n$ echo \"my second file\" > mySecondFile.txt\n$ git add mySecondFile.txt\n$ git commit -m \"added mySecondFile.txt to dev branch\"\n[dev c983730] added mySecondFile.txt to dev branch\n 1 file changed, 1 insertion(+)\n create mode 100644 mySecondFile.txt\n```", "```py\n$ git branch\n* dev\n master\n$ git checkout master\nSwitched to branch 'master'\n$ ls\nmyFile.txt\n$ git checkout dev\nSwitched to branch 'dev'\n$ ls\nmyFile.txt mySecondFile.txt\n```", "```py\n$ git branch\n* dev\n master\n$ git checkout master\n$ git merge dev master\nUpdating a3dd3ea..c983730\nFast-forward\n mySecondFile.txt | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 mySecondFile.txt\n$ git branch\n dev\n* master\n$ ls\nmyFile.txt mySecondFile.txt\n```", "```py\n$ touch myThirdFile.txt\n$ git add myThirdFile.txt\n$ git commit -m \"adding myThirdFile.txt\"\n[master 2ec5f7d] adding myThirdFile.txt\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 myThirdFile.txt\n$ ls\nmyFile.txt mySecondFile.txt myThirdFile.txt\n$ git rm myThirdFile.txt\nrm 'myThirdFile.txt'\n$ git status\nOn branch master\nChanges to be committed:\n (use \"git reset HEAD <file>...\" to unstage)\n\n deleted: myThirdFile.txt\n$ git commit -m \"deleted myThirdFile.txt\"\n[master bc078a9] deleted myThirdFile.txt\n 1 file changed, 0 insertions(+), 0 deletions(-)\n delete mode 100644 myThirdFile.txt\n```", "```py\n$ git log\ncommit bc078a97e41d1614c1ba1f81f72acbcd95c0728c\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 14:02:02 2018 -0700\n\n deleted myThirdFile.txt\n\ncommit 2ec5f7d1a734b2cc74343ce45075917b79cc7293\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 14:01:18 2018 -0700\n\n adding myThirdFile.txt\n```", "```py\n$ git remote add gitHubRepo https://github.com/ericchou1/TestRepo.git\n$ git remote -v\ngitHubRepo https://github.com/ericchou1/TestRepo.git (fetch)\ngitHubRepo https://github.com/ericchou1/TestRepo.git (push)\n```", "```py\n$ git push gitHubRepo master\nUsername for 'https://github.com': echou@yahoo.com\nPassword for 'https://echou@yahoo.com@github.com':\nTo https://github.com/ericchou1/TestRepo.git\n ! [rejected] master -> master (fetch first)\n```", "```py\n$ git pull gitHubRepo master\nUsername for 'https://github.com': <username>\nPassword for 'https://<username>@github.com':\nFrom https://github.com/ericchou1/TestRepo\n * branch master -> FETCH_HEAD\nMerge made by the 'recursive' strategy.\n .gitignore | 104 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n LICENSE | 21 +++++++++++++\n README.md | 2 ++\n 3 files changed, 127 insertions(+)\n create mode 100644 .gitignore\n create mode 100644 LICENSE\n create mode 100644 README.md\n```", "```py\n$ git push gitHubRepo master\nUsername for 'https://github.com': <username>\nPassword for 'https://<username>@github.com':\nCounting objects: 15, done.\nCompressing objects: 100% (9/9), done.\nWriting objects: 100% (15/15), 1.51 KiB | 0 bytes/s, done.\nTotal 15 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1), done.\nTo https://github.com/ericchou1/TestRepo.git\n a001b81..0aa362a master -> master\n```", "```py\n[This is operated from another host]\n$ cd /tmp\n$ git clone https://github.com/ericchou1/TestRepo.git\nCloning into 'TestRepo'...\nremote: Counting objects: 20, done.\nremote: Compressing objects: 100% (13/13), done.\nremote: Total 20 (delta 2), reused 15 (delta 1), pack-reused 0\nUnpacking objects: 100% (20/20), done.\n$ cd TestRepo/\n$ ls\nLICENSE myFile.txt\nREADME.md mySecondFile.txt\n```", "```py\n$ git log\ncommit 0aa362a47782e7714ca946ba852f395083116ce5 (HEAD -> master, origin/master, origin/HEAD)\nMerge: bc078a9 a001b81\nAuthor: Eric Chou <echou@yahoo.com>\nDate: Fri Jul 20 14:18:58 2018 -0700\n\n Merge branch 'master' of https://github.com/ericchou1/TestRepo\n\ncommit a001b816bb75c63237cbc93067dffcc573c05aa2\nAuthor: Eric Chou <ericchou1@users.noreply.github.com>\nDate: Fri Jul 20 14:16:30 2018 -0700\n\n Initial commit\n...\n```", "```py\n$ sudo pip3 install gitpython\n$ python3\n>>> from git import Repo\n>>> repo = Repo('/home/echou/Master_Python_Networking_second_edition/Chapter11/TestRepo')\n>>> for commits in list(repo.iter_commits('master')):\n... print(commits)\n...\n0aa362a47782e7714ca946ba852f395083116ce5\na001b816bb75c63237cbc93067dffcc573c05aa2\nbc078a97e41d1614c1ba1f81f72acbcd95c0728c\n2ec5f7d1a734b2cc74343ce45075917b79cc7293\nc98373069f27d8b98d1ddacffe51b8fa7a30cf28\na3dd3ea8e6eb15b57d1f390ce0d2c3a03f07a038\n5f579ab1e9a3fae13aa7f1b8092055213157524d\n\n```", "```py\n>>> for (path, stage), entry in index.entries.items():\n... print(path, stage, entry)\n...\nmySecondFile.txt 0 100644 75d6370ae31008f683cf18ed086098d05bf0e4dc 0 mySecondFile.txt\nLICENSE 0 100644 52feb16b34de141a7567e4d18164fe2400e9229a 0 LICENSE\nmyFile.txt 0 100644 69e7d4728965c885180315c0d4c206637b3f6bad 0 myFile.txt\n.gitignore 0 100644 894a44cc066a027465cd26d634948d56d13af9af 0 .gitignore\nREADME.md 0 100644 a29fe688a14d119c20790195a815d078976c3bc6 0 README.md\n>>>\n```", "```py\n$ sudo pip install pygithub\n$ sudo pip3 install pygithub\n```", "```py\n$ python3\n>>> from github import Github\n>>> g = Github(\"ericchou1\", \"<password>\")\n>>> for repo in g.get_user().get_repos():\n...     print(repo.name)\n...\nansible\n...\n-Hands-on-Network-Programming-with-Python\nMastering-Python-Networking\nMastering-Python-Networking-Second-Edition\n>>>\n```", "```py\n>>> from github import Github\n>>> g = Github(\"<token>\")\n>>> for repo in g.get_user().get_repos():\n...     print(repo)\n...\nRepository(full_name=\"oreillymedia/distributed_denial_of_service_ddos\")\nRepository(full_name=\"PacktPublishing/-Hands-on-Network-Programming-with-Python\")\nRepository(full_name=\"PacktPublishing/Mastering-Python-Networking\")\nRepository(full_name=\"PacktPublishing/Mastering-Python-Networking-Second-Edition\")\n...\n```", "```py\n$ ls configs/\niosv-1 iosv-2\n\n$ cat configs/iosv-1\nBuilding configuration...\n\nCurrent configuration : 4573 bytes\n!\n! Last configuration change at 02:50:05 UTC Sat Jun 2 2018 by cisco\n!\nversion 15.6\nservice timestamps debug datetime msec\n...\n```", "```py\n$ cat Chapter11_1.py\n#!/usr/bin/env python3\n# reference: https://stackoverflow.com/questions/38594717/how-do-i-push-new-files-to-github\n\nfrom github import Github, InputGitTreeElement\nimport os\n\ngithub_token = '<token>'\nconfigs_dir = 'configs'\ngithub_repo = 'TestRepo'\n\n# Retrieve the list of files in configs directory\nfile_list = []\nfor dirpath, dirname, filenames in os.walk(configs_dir):\n    for f in filenames:\n        file_list.append(configs_dir + \"/\" + f)\n\ng = Github(github_token)\nrepo = g.get_user().get_repo(github_repo)\n\ncommit_message = 'add configs'\nmaster_ref = repo.get_git_ref('heads/master')\nmaster_sha = master_ref.object.sha\nbase_tree = repo.get_git_tree(master_sha)\n\nelement_list = list()\n\nfor entry in file_list:\n    with open(entry, 'r') as input_file:\n        data = input_file.read()\n    element = InputGitTreeElement(entry, '100644', 'blob', data)\n    element_list.append(element)\n\n# Create tree and commit\ntree = repo.create_git_tree(element_list, base_tree)\nparent = repo.get_git_commit(master_sha)\ncommit = repo.create_git_commit(commit_message, tree, [parent])\nmaster_ref.edit(commit.sha)\n```"]