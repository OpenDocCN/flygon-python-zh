["```py\n[all:children] web-servers db-servers   [web-servers] web01 Ansible_ssh_host=192.168.10.10     [db-servers] db01 Ansible_ssh_host=192.168.10.11 db02 Ansible_ssh_host=192.168.10.12   [all:vars] Ansible_ssh_user=root Ansible_ssh_pass=access123   [db-servers:vars] Ansible_ssh_user=root Ansible_ssh_pass=access123   \n```", "```py\n[local] 127.0.0.1 Ansible_connection=local Ansible_python_interpreter=\"/usr/bin/python\"\n```", "```py\nsudo yum install epel-release\n```", "```py\nsudo yum install Ansible\n```", "```py\n$ sudo apt-get update\n$ sudo apt-get install software-properties-common\n$ sudo apt-add-repository ppa:Ansible/Ansible\n$ sudo apt-get update\n$ sudo apt-get install Ansible\n```", "```py\n[all:children] centos-servers ubuntu-servers   [centos-servers] centos-machine01 Ansible_ssh_host=10.10.10.193   [ubuntu-servers] ubuntu-machine01 Ansible_ssh_host=10.10.10.140   [all:vars] Ansible_ssh_user=root Ansible_ssh_pass=access123   [centos-servers:vars] Ansible_ssh_user=root Ansible_ssh_pass=access123   [ubuntu-servers:vars] Ansible_ssh_user=root Ansible_ssh_pass=access123\n\n[routers]\ngateway ansible_ssh_host = 10.10.88.110 ansible_ssh_user=cisco ansible_ssh_pass=cisco   [local] 127.0.0.1 Ansible_connection=local Ansible_python_interpreter=\"/usr/bin/python\"\n```", "```py\n# Ansible -i hosts all -m ping\n```", "```py\nubuntu-machine01 | FAILED! => {\n \"msg\": \"Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support this.  Please add this host's fingerprint to your known_hosts file to manage this host.\"\n}\ncentos-machine01 | FAILED! => {\n \"msg\": \"Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support this.  Please add this host's fingerprint to your known_hosts file to manage this host.\"\n}\n```", "```py\nsed -i -e 's/#host_key_checking = False/host_key_checking = False/g' /etc/Ansible/Ansible.cfg\n\nsed -i -e 's/#   StrictHostKeyChecking ask/   StrictHostKeyChecking no/g' /etc/ssh/ssh_config\n```", "```py\n127.0.0.1 | SUCCESS => {\n \"changed\": false, \n \"ping\": \"pong\"\n}\nubuntu-machine01 | SUCCESS => {\n \"changed\": false, \n \"ping\": \"pong\"\n}\ncentos-machine01 | SUCCESS => {\n \"changed\": false, \n \"ping\": \"pong\"\n}\n```", "```py\n# Ansible -i hosts ubuntu-servers -m apt -a \"name=apache2 state=present\" \n```", "```py\n#Ansible -i hosts centos-servers -m service -a \"name=httpd state=stopped, enabled=no\"\n```", "```py\n#Ansible -i hosts centos-servers -m service -a \"name=mariadb state=restarted\"\n```", "```py\n#Ansible -i hosts all -a \"ifconfig\"\n```", "```py\n#Ansible -i hosts centos-servers -a \"reboot\"\n```", "```py\n#Ansible -i hosts ubuntu-servers --become-user bassim  --ask-become-pass -a \"cat /etc/sudoers\"\n```", "```py\n# Ansible -i hosts routers -m raw -a \"show arp\" \ngateway | SUCCESS | rc=0 >>\n\nSat Apr 21 01:33:58.391 CAIRO\n\nAddress         Age        Hardware Addr   State      Type  Interface\n85.54.41.9         -          45ea.2258.d0a9  Interface  ARPA  TenGigE0/2/0/0\n10.88.18.1      -          d0b7.428b.2814  Satellite  ARPA  TenGigE0/2/0/0\n192.168.100.1   -          00a7.5a3b.4193  Interface  ARPA  GigabitEthernet100/0/0/9\n192.168.100.2   02:08:03   fc5b.3937.0b00  Dynamic    ARPA  \\\n```", "```py\n- hosts: centos-servers\n  remote_user: root\n\n  tasks:\n    - name: Install openssh\n      yum: pkg=openssh-server state=installed\n\n    - name: Start the openssh\n      service: name=sshd state=started enabled=yes\n```", "```py\n#Ansible-playbook -i hosts first_playbook.yaml \n\nPLAY [centos-servers] **********************************************************************\n\nTASK [Gathering Facts] *********************************************************************\nok: [centos-machine01]\n\nTASK [Install openssh] *********************************************************************\nok: [centos-machine01]\n\nTASK [Start the openssh] *******************************************************************\nok: [centos-machine01]\n\n```", "```py\nPLAY RECAP *********************************************************************************\ncentos-machine01           : ok=3    changed=0    unreachable=0    failed=0   \n```", "```py\n[infra:children] centos-servers ubuntu-servers     [infra:vars] Ansible_ssh_user=root Ansible_ssh_pass=access123 \n```", "```py\n- hosts: infra\n  remote_user: root\n\n  tasks:\n    - name: Install openssh\n      yum: pkg=openssh-server state=installed\n      when: Ansible_distribution == \"CentOS\"\n\n    - name: Start the openssh\n      service: name=sshd state=started enabled=yes\n  when: Ansible_distribution == \"CentOS\"\n```", "```py\n# Ansible-playbook -i hosts using_when.yaml \n\nPLAY [infra] *******************************************************************************\n\nTASK [Gathering Facts] *********************************************************************\nok: [centos-machine01]\nok: [ubuntu-machine01]\n\nTASK [Install openssh] *********************************************************************\nskipping: [ubuntu-machine01]\nok: [centos-machine01]\n\nTASK [Start the openssh] *******************************************************************\nskipping: [ubuntu-machine01]\nok: [centos-machine01]\n\nPLAY RECAP *********************************************************************************\ncentos-machine01           : ok=3    changed=0    unreachable=0    failed=0 \nubuntu-machine01           : ok=1    changed=0    unreachable=0    failed=0  \n```", "```py\n- hosts: infra\n  remote_user: root\n\n  tasks:\n    - name: Install openssh\n      apt: pkg=open-vm-tools state=installed\n      when:\n        - Ansible_distribution == \"Debian\"\n        - Ansible_system_vendor == \"VMware, Inc.\"\n```", "```py\n# Ansible-playbook -i hosts using_when_1.yaml \n\nPLAY [infra] *******************************************************************************\n\nTASK [Gathering Facts] *********************************************************************\nok: [centos-machine01]\nok: [ubuntu-machine01]\n\nTASK [Install openssh] *********************************************************************\nskipping: [centos-machine01]\nok: [ubuntu-machine01]\n\nPLAY RECAP *********************************************************************************\ncentos-machine01           : ok=1    changed=0    unreachable=0    failed=0\nubuntu-machine01           : ok=2    changed=0    unreachable=0    failed=0 \n```", "```py\nhosts: routers\n\ntasks:\n  - name: \"show the ospf neighbor status\"\n    raw: show ip ospf neighbor\n    register: neighbors\n\n  - name: \"Validate the Neighbors\"\n    debug:\n      msg: \"OSPF neighbors stuck\"\n    when: ('EXSTART' in neighbors.stdout) or ('EXCHANGE' in neigbnors.stdout)\n```", "```py\n- hosts: infra\n  remote_user: root\n\n  tasks:\n    - name: \"Modifying Packages\"\n  yum: name={{ item.name }} state={{ item.state }}\n  with_items:\n        - { name: python-keyring-5.0-1.el7.noarch, state: absent }\n  - { name: python-django, state: absent }\n  - { name: python-django-bash-completion, state: absent }\n  - { name: httpd, state: present }\n  - { name: httpd-tools, state: present }\n  - { name: python-qpid, state: present }\n  when: Ansible_distribution == \"CentOS\"\n```", "```py\n- hosts: centos-servers\n  remote_user: root\n\n  tasks:\n    - name: \"Install KVM\"\n  yum: name={{ item.name }} state={{ item.state }}\n  with_items:\n        - { name: qemu-kvm, state: installed }\n  - { name: libvirt, state: installed }\n  - { name: virt-install, state: installed }\n  - { name: bridge-utils, state: installed }    notify:\n        - load sysctl\n        - load kvm at boot\n        - enable kvm\n\n  handlers:\n    - name: load sysctl\n      command: sysctl -p\n\n    - name: enable kvm\n      command: \"{{ item.name }}\"\n      with_items:\n        - {name: modprobe -a kvm}\n  - {name: modprobe 8021q}\n  - {name: udevadm trigger}    - name: load kvm at boot\n      lineinfile: dest=/etc/modules state=present create=True line={{ item.name }}\n  with_items:\n        - {name: kvm}   \n```", "```py\nwhen: Ansible_distribution == \"CentOS\"\n```", "```py\n- hosts: centos-servers\n  gather_facts: yes\n  tasks:\n    <your tasks go here>\n```", "```py\n#Ansible -i hosts ubuntu-servers -m setup | less \n```", "```py\n- hosts: centos-servers\n  vars:\n    - Header: \"Welcome to Server facts page generated from Ansible playbook\"\n gather_facts: yes  tasks:\n    - name: Getting the current date\n      command: date\n      register: date_now\n    - name: Setup webserver\n      yum: pkg=nginx state=installed\n      when: Ansible_distribution == \"CentOS\"\n\n      notify:\n        - enable the service\n        - start the service\n\n    - name: Copying the index page\n      template: src=index.j2 dest=/usr/share/nginx/html/index.html\n\n  handlers:\n    - name: enable the service\n      service: name=nginx enabled=yes    - name: start the service\n      service: name=nginx state=started\n```", "```py\n<html> <head><title>Hello world</title></head> <body>   <font size=\"6\" color=\"green\">{{ Header }}</font>   <br> <font size=\"5\" color=\"#ff7f50\">Facts about the server</font> <br> <b>Date Now is:</b> {{ date_now.stdout }}\n\n<font size=\"4\" color=\"#00008b\"> <ul>\n <li>IPv4 Address: {{ Ansible_default_ipv4['address'] }}</li>\n <li>IPv4 gateway: {{ Ansible_default_ipv4['gateway'] }}</li>\n <li>Hostname: {{ Ansible_hostname }}</li>\n <li>Total Memory: {{ Ansible_memtotal_mb }}</li>\n <li>Operating System Family: {{ Ansible_os_family }}</li>\n <li>System Vendor: {{ Ansible_system_vendor }}</li> </ul> </font> </body> </html>\n```"]