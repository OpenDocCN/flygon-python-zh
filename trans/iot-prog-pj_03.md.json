["```py\nimport picamera\nimport time\n\npicam = picamera.PiCamera()\npicam.start_preview()\ntime.sleep(10)\npicam.stop_preview()\npicam.close()\n```", "```py\nfrom PIL import Image\n\nimg = Image.open('image.png')\nprint(img.format, img.size)\n```", "```py\nfrom sense_emu import SenseHat\n\nsense_emulator = SenseHat()\nsense_emulator.show_message('Hello World')\n```", "```py\nsudo pip3 install pibrella\n```", "```py\nimport pibrella\nimport time\n\npibrella.light.red.on()\ntime.sleep(5)\npibrella.light.red.off()\npibrella.buzzer.success()\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(18, GPIO.OUT)\nGPIO.output(18, GPIO.HIGH)\ntime.sleep(5)\nGPIO.output(18, GPIO.LOW)\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\n```", "```py\nGPIO.setmode(GPIO.BCM)\n```", "```py\nGPIO.setup(18, GPIO.OUT)\n```", "```py\nGPIO.output(18, GPIO.HIGH)\ntime.sleep(5)\nGPIO.output(18, GPIO.LOW)\n```", "```py\nfrom gipozero import LED\nimport time\n\nled = LED(18)\nled.on()\ntime.sleep(5)\nled.off()\n```", "```py\nfrom gpiozero import LED\n\nled = LED(18)\nled.blink(1,1,10)\n```", "```py\nblink(on_time=1, off_time=1, n=none, background=True)\n```", "```py\nfrom gpiozero import LED\nfrom time import sleep\n\nclass MorseCodeGenerator:\n\n    led = LED(18)\n    dot_duration = 0.3\n    dash_duration = dot_duration * 3\n    word_spacing_duration = dot_duration * 7\n\n    MORSE_CODE = {\n        'A': '.-', 'B': '-...', 'C': '-.-.', \n        'D': '-..', 'E': '.', 'F': '..-.',\n        'G': '--.', 'H': '....', 'I': '..',\n        'J': '.---', 'K': '-.-', 'L': '.-..',\n        'M': '--', 'N': '-.', 'O': '---',\n        'P': '.--.', 'Q': '--.-', 'R': '.-.',\n       'S': '...', 'T': '-', 'U': '..-',\n        'V': '...-', 'W': '.--', 'X': '-..-',\n        'Y': '-.--', 'Z': '--..', '0': '-----',\n        '1': '.----', '2': '..---', '3': '...--',\n        '4': '....-', '5': '.....', '6': '-....',\n        '7': '--...', '8': '---..', '9': '----.',\n        ' ': ' '\n        } \n\n    def transmit_message(self, message):\n        for letter in message: \n            morse_code_letter = self.MORSE_CODE[letter.upper()]\n\n            for dash_dot in morse_code_letter:\n\n                if dash_dot == '.':\n                    self.dot()\n\n                elif dash_dot == '-':\n                    self.dash()\n\n                elif dash_dot == ' ':\n                    self.word_spacing()\n\n            self.letter_spacing()\n\n    def dot(self):\n        self.led.blink(self.dot_duration,self.dot_duration,1,False)\n\n    def dash(self):\n        self.led.blink(self.dash_duration,self.dot_duration,1,False)\n\n    def letter_spacing(self):\n        sleep(self.dot_duration)\n\n    def word_spacing(self):\n        sleep(self.word_spacing_duration-self.dot_duration)\n\nif __name__ == \"__main__\":\n\n    morse_code_generator = MorseCodeGenerator()\n    morse_code_generator.transmit_message('SOS')    \n```", "```py\ndef dot(self):\n       self.led.blink(self.dot_duration, self.dot_duration,1,False)\n```", "```py\nfrom MorseCodeGenerator import MorseCodeGenerator\n\nclass CurrentWeather:\n\n    weather_data={\n        'Toronto':['13','partly sunny','8 NW'],\n        'Montreal':['16','mostly sunny','22 W'],\n        'Vancouver':['18','thunder showers','10 NE'],\n        'New York':['17','mostly cloudy','5 SE'],\n        'Los Angeles':['28','sunny','4 SW'],\n        'London':['12','mostly cloudy','8 NW'],\n        'Mumbai':['33','humid and foggy','2 S']\n    }\n\n    def __init__(self, city):\n        self.city = city \n\n    def getTemperature(self):\n        return self.weather_data[self.city][0]\n\n    def getWeatherConditions(self):\n        return self.weather_data[self.city][1]\n\n    def getWindSpeed(self):\n        return self.weather_data[self.city][2]\n\n    def getCity(self):\n        return self.city\n\nif __name__ == \"__main__\":\n\n    current_weather = CurrentWeather('Toronto')\n    morse_code_generator = MorseCodeGenerator()\n    morse_code_generator.transmit_message(current_weather.\n    getWeatherConditions())\n\n```"]