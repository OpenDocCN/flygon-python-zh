- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Welcome to the world of network programming with Python. Python is a full-featured
    object-oriented programming language with a standard library that includes everything
    needed to rapidly build powerful network applications. In addition, it has a multitude
    of third-party libraries and packages that extend Python to every sphere of network
    programming. Combined with the fun of using Python, with this book, we hope to
    get you started on your journey so that you master these tools and produce some
    great networking code.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到使用Python进行网络编程的世界。Python是一种功能齐全的面向对象的编程语言，具有一个标准库，其中包括了快速构建强大网络应用所需的一切。此外，它还有大量的第三方库和包，将Python扩展到网络编程的各个领域。结合使用Python的乐趣，我们希望通过这本书让您开始您的旅程，以便掌握这些工具并产生一些出色的网络代码。
- en: In this book, we are squarely targeting Python 3\. Although Python 3 is still
    establishing itself as the successor to Python 2, version 3 is the future of the
    language, and we want to demonstrate that it is ready for network programming
    prime time. It offers many improvements over the previous version, many of which
    improve the network programming experience, with enhanced standard library modules
    and new additions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们专注于Python 3。尽管Python 3仍在确立自己作为Python 2的继任者，但第3版是该语言的未来，我们希望证明它已经准备好用于网络编程。它相对于以前的版本有许多改进，其中许多改进都提高了网络编程体验，包括增强的标准库模块和新的添加。
- en: We hope you enjoy this introduction to network programming with Python.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望您喜欢这本关于使用Python进行网络编程的介绍。
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](ch01.html "Chapter 1. Network Programming and Python"), *Network
    Programming and Python*, introduces core networking concepts for readers that
    are new to networking, and also covers how network programming is approached in
    Python.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，网络编程和Python，介绍了对网络编程新手来说的核心网络概念，并介绍了Python中的网络编程方法。
- en: '[Chapter 2](ch02.html "Chapter 2. HTTP and Working with the Web"), *HTTP and
    Working with the Web*, introduces you to the HTTP protocol and covers how we can
    retrieve and manipulate web content using Python as an HTTP client. We also take
    a look at the standard library `urllib` and third-party `Requests` modules.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，HTTP和网络工作，向您介绍了HTTP协议，并介绍了如何使用Python作为HTTP客户端检索和操作Web内容。我们还研究了标准库`urllib`和第三方`Requests`模块。
- en: '[Chapter 3](ch03.html "Chapter 3. APIs in Action"), *APIs in Action*, introduces
    you to working with web APIs using HTTP. We also cover the XML and JSON data formats,
    and walk you through developing applications using the Amazon Web Services Simple
    Storage Service (S3) and Twitter APIs.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，API的实际应用，向您介绍了使用HTTP使用Web API。我们还介绍了XML和JSON数据格式，并指导您使用Amazon Web Services
    Simple Storage Service（S3）和Twitter API开发应用程序。
- en: '[Chapter 4](ch04.html "Chapter 4. Engaging with E-mails"), *Engaging with E-mails*,
    covers the principle protocols used in sending and receiving e-mails, such as
    SMTP, POP3, and IMAP, and how to work with them in Python 3.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，与电子邮件互动，涵盖了发送和接收电子邮件时使用的主要协议，如SMTP、POP3和IMAP，以及如何在Python 3中使用它们。
- en: '[Chapter 5](ch05.html "Chapter 5. Interacting with Remote Systems"), *Interacting
    with Remote Systems*, guides you through the ways of using Python to connect to
    servers and performing common administrative tasks, including the execution of
    shell commands through SSH, file transfers with FTP and SMB, authentication with
    LDAP, and to monitor systems with SNMP.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，与远程系统交互，指导您如何使用Python连接服务器并执行常见的管理任务，包括通过SSH执行shell命令，使用FTP和SMB进行文件传输，使用LDAP进行身份验证以及使用SNMP监视系统。
- en: '[Chapter 6](ch06.html "Chapter 6. IP and DNS"), *IP and DNS*, discusses the
    details of the Internet Protocol (IP), ways of working with IP in Python, and
    how to use DNS to resolve hostnames.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，IP和DNS，讨论了Internet Protocol（IP）的细节，以及在Python中处理IP的方法，以及如何使用DNS解析主机名。
- en: '[Chapter 7](ch07.html "Chapter 7. Programming with Sockets"), *Programming
    with Sockets*, covers using TCP and UDP sockets from Python for writing low-level
    network applications. We also cover HTTPS and TLS for secure data transport.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，使用套接字编程，涵盖了使用Python编写TCP和UDP套接字以编写低级网络应用程序。我们还介绍了用于安全数据传输的HTTPS和TLS。
- en: '[Chapter 8](ch08.html "Chapter 8. Client and Server Applications"), *Client
    and* *Server Applications*, looks at writing client and server programs for socket-based
    communication. By writing an echo application and a chat application we look at
    developing basic protocols, framing network data, and compare the multithreading
    and event-based server architectures.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，客户端和服务器应用程序，介绍了为基于套接字的通信编写客户端和服务器程序。通过编写一个回显应用程序和一个聊天应用程序，我们研究了开发基本协议、构建网络数据的方法，并比较了多线程和基于事件的服务器架构。
- en: '[Chapter 9](ch09.html "Chapter 9. Applications for the Web"), *Applications
    for the Web*, introduces you to writing web applications in Python. We cover the
    main approaches, methods of hosting Python web applications, and develop an example
    application in the Flask microframework.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，Web应用程序，向您介绍了如何在Python中编写Web应用程序。我们涵盖了主要方法，Python Web应用程序的托管方法，并在Flask微框架中开发了一个示例应用程序。
- en: '[Appendix](apa.html "Appendix A. Working with Wireshark"), *Working with Wireshark*,
    covers packet sniffers, the installation of Wireshark, and how to capture and
    filter packets using the Wireshark application.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 附录，使用Wireshark，涵盖了数据包嗅探器、Wireshark的安装以及如何使用Wireshark应用程序捕获和过滤数据包。
- en: What you need for this book
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需内容
- en: This book is aimed at Python 3\. While many of the examples will work in Python
    2, you'll get the best experience working through this book with a recent version
    of Python 3\. At the time of writing, the latest version is 3.4.3, and the examples
    were tested against this.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本书针对Python 3。虽然许多示例可以在Python 2中运行，但使用最新版本的Python 3来完成本书的学习会获得最佳体验。在撰写本文时，最新版本是3.4.3，并且示例已针对此版本进行了测试。
- en: 'Though Python 3.4 is the preferred version, all the examples should run on
    Python 3.1 or later, except for the following:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Python 3.4是首选版本，所有示例都应该在Python 3.1或更高版本上运行，除了以下情况：
- en: The `asyncio` example in [Chapter 8](ch08.html "Chapter 8. Client and Server
    Applications"), *Client and Server Applications*, as the `asyncio` module was
    only included in Version 3.4
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。客户端和服务器应用")中的`asyncio`示例，*客户端和服务器应用*，因为`asyncio`模块只包含在3.4版本中'
- en: The Flask example in [Chapter 9](ch09.html "Chapter 9. Applications for the
    Web"), *Applications for the Web*, which requires Python 3.3 or later
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。网络应用")中的Flask示例，*网络应用*，需要Python 3.3或更高版本'
- en: We're also targeting the Linux operating system, and the assumption is made
    that you are working on a Linux OS. The examples have been tested on Windows though,
    and we'll make a note of where there may be differences in the requirements or
    outcomes.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还针对Linux操作系统，并假设您正在使用Linux操作系统。尽管示例已在Windows上进行了测试，但我们会注意到在需求或结果方面可能存在差异的地方。
- en: Virtual environments
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 虚拟环境
- en: It is highly recommended that you use Python virtual environments, or "**venvs**",
    when you work with this book, and in fact, when doing any work with Python. A
    venv is an isolated copy of the Python executable and associated files, which
    provides a separate environment for installing Python modules, independent from
    the system Python installation. You can have as many venvs as you need, which
    means that you can have multiple module configurations set up, and you can switch
    between them easily.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 强烈建议您在使用本书时使用Python虚拟环境，或者“venvs”，实际上，在使用Python进行任何工作时都应该使用。venv是Python可执行文件和相关文件的隔离副本，为安装Python模块提供了一个独立的环境，独立于系统Python安装。您可以拥有尽可能多的venv，这意味着您可以设置多个模块配置，并且可以轻松地在它们之间切换。
- en: From version 3.3, Python includes a `venv` module, which provides this functionality.
    The documentation and examples are available at [https://docs.python.org/3/using/scripts.html](https://docs.python.org/3/using/scripts.html).
    There is also a standalone tool available for earlier versions, which can be found
    at [https://virtualenv.pypa.io/en/latest/](https://virtualenv.pypa.io/en/latest/).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 从3.3版本开始，Python包括一个`venv`模块，提供了这个功能。文档和示例可以在[https://docs.python.org/3/using/scripts.html](https://docs.python.org/3/using/scripts.html)找到。还有一个独立的工具可用于早期版本，可以在[https://virtualenv.pypa.io/en/latest/](https://virtualenv.pypa.io/en/latest/)找到。
- en: Installing Python 3
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Python 3
- en: Most major Linux distributions come preinstalled with Python 2\. When installing
    Python 3 on such a system, it is important to note that we're not replacing the
    installation of Python 2\. Many distributions use Python 2 for core system operations,
    and these will be tuned for the major version of the system Python. Replacing
    the system Python can have severe consequences for the running of the OS. Instead,
    when we install Python 3, it is installed side by side with Python 2\. After installing
    Python 3, it is invoked using the `python3.x` executable, where `x` is replaced
    with the corresponding installed minor version. Most packages also provide a `symlink`
    to this executable called `python3`, which can be run instead.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数主要的Linux发行版都预装了Python 2。在这样的系统上安装Python 3时，重要的是要注意我们并没有替换Python 2的安装。许多发行版使用Python
    2进行核心系统操作，并且这些操作将针对系统Python的主要版本进行调整。替换系统Python可能会对操作系统的运行产生严重后果。相反，当我们安装Python
    3时，它会与Python 2并存。安装Python 3后，可以使用`python3.x`可执行文件来调用它，其中的`x`会被相应安装的次要版本替换。大多数软件包还提供了指向这个可执行文件的`symlink`，名为`python3`，可以代替运行。
- en: Packages to install Python 3.4 are available for most recent distributions,
    we'll go through the major ones here. If packages are not available, there are
    still some options that you can use to install a working Python 3.4 environment.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数最新发行版都提供了安装Python 3.4的软件包，我们将在这里介绍主要的发行版。如果软件包不可用，仍然有一些选项可以用来安装一个可用的Python
    3.4环境。
- en: Ubuntu and Debian
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Ubuntu和Debian
- en: Ubuntu 15.04 and 14.04 come with Python 3.4 already installed; so if you're
    running these versions, you're already good to go. Note that there is a bug in
    14.04, which means pip must be installed manually in any venvs created using the
    bundled `venv` module. You can find information on working around this at [http://askubuntu.com/questions/488529/pyvenv-3-4-error-returned-non-zero-exit-status-1](http://askubuntu.com/questions/488529/pyvenv-3-4-error-returned-non-zero-exit-status-1).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu 15.04和14.04已经预装了Python 3.4；所以如果您正在运行这些版本，您已经准备就绪。请注意，14.04中存在一个错误，这意味着必须手动安装pip在使用捆绑的`venv`模块创建的任何venv中。您可以在[http://askubuntu.com/questions/488529/pyvenv-3-4-error-returned-non-zero-exit-status-1](http://askubuntu.com/questions/488529/pyvenv-3-4-error-returned-non-zero-exit-status-1)找到解决此问题的信息。
- en: For earlier versions of Ubuntu, Felix Krull maintains a repository of up-to-date
    Python installations for Ubuntu. The complete details can be found at [https://launchpad.net/~fkrull/+archive/ubuntu/deadsnakes](https://launchpad.net/~fkrull/+archive/ubuntu/deadsnakes).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu的早期版本，Felix Krull维护了一个最新的Ubuntu Python安装的存储库。完整的细节可以在[https://launchpad.net/~fkrull/+archive/ubuntu/deadsnakes](https://launchpad.net/~fkrull/+archive/ubuntu/deadsnakes)找到。
- en: On Debian, Jessie has a Python 3.4 package (`python3.4`), which can be installed
    directly with `apt-get`. Wheezy has a package for 3.2 (`python3.2`), and Squeeze
    has `python3.1`, which can be installed similarly. In order to get working Python
    3.4 installations on these latter two, it's easiest to use Felix Krull's repositories
    for Ubuntu.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian上，Jessie有一个Python 3.4包（`python3.4`），可以直接用`apt-get`安装。Wheezy有一个3.2的包（`python3.2`），Squeeze有`python3.1`，可以类似地安装。为了在后两者上获得可用的Python
    3.4安装，最简单的方法是使用Felix Krull的Ubuntu存储库。
- en: RHEL, CentOS, Scientific Linux
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: RHEL、CentOS、Scientific Linux
- en: These distributions don't provide up-to-date Python 3 packages, so we need to
    use a third-party repository. For Red Hat Enterprise Linux, CentOS, and Scientific
    Linux, Python 3 can be obtained from the community supported Software Collections
    (SCL) repository. Instructions on using this repository can be found at [https://www.softwarecollections.org/en/scls/rhscl/python33/](https://www.softwarecollections.org/en/scls/rhscl/python33/).
    At the time of writing, Python 3.3 is the latest available version.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这些发行版不提供最新的Python 3软件包，因此我们需要使用第三方存储库。对于Red Hat Enterprise Linux、CentOS和Scientific
    Linux，可以从社区支持的软件集合（SCL）存储库获取Python 3。有关使用此存储库的说明可以在[https://www.softwarecollections.org/en/scls/rhscl/python33/](https://www.softwarecollections.org/en/scls/rhscl/python33/)找到。撰写时，Python
    3.3是最新可用版本。
- en: Python 3.4 is available from another repository, the IUS Community repository,
    sponsored by Rackspace. Instructions on the installation can be found at [https://iuscommunity.org/pages/IUSClientUsageGuide.html](https://iuscommunity.org/pages/IUSClientUsageGuide.html).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Python 3.4可从另一个存储库IUS社区存储库中获得，由Rackspace赞助。安装说明可以在[https://iuscommunity.org/pages/IUSClientUsageGuide.html](https://iuscommunity.org/pages/IUSClientUsageGuide.html)找到。
- en: Fedora
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Fedora
- en: 'Fedora 21 and 22 provide Python 3.4 with the `python3` package:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: Fedora 21和22提供带有`python3`软件包的Python 3.4：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: For earlier versions of Fedora, use the repositories listed in the preceding
    Red Hat section.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于早期版本的Fedora，请使用前面列出的存储库。
- en: Alternative installation methods
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 备用安装方法
- en: If you're working on a system, which isn't one of the systems mentioned earlier,
    and you can't find packages for your system to install an up-to-date Python 3,
    there are still other ways of getting it installed. We'll discuss two methods,
    `Pythonz` and `JuJu`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用的系统不是前面提到的系统之一，并且找不到适用于您的系统安装最新的Python 3的软件包，仍然有其他安装方法。我们将讨论两种方法，`Pythonz`和`JuJu`。
- en: Pythonz
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Pythonz
- en: Pythonz is a program that manages the compilation of Python interpreters from
    source code. It downloads and compiles Python from source and installs the compiled
    Python interpreters in your home directory. These binaries can then be used to
    create venvs. The only limitation with this installation method is that you need
    a build environment (that is, a C compiler and supporting packages) installed
    on your system, and dependencies to compile Python. If this doesn't come with
    your distribution, you will need root access to install this initially. The complete
    instructions can be found at [https://github.com/saghul/pythonz](https://github.com/saghul/pythonz).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Pythonz是一个管理从源代码编译Python解释器的程序。它从源代码下载并编译Python，并在您的主目录中安装编译的Python解释器。然后可以使用这些二进制文件创建虚拟环境。这种安装方法的唯一限制是您需要在系统上安装构建环境（即C编译器和支持软件包），以及编译Python的依赖项。如果这不包含在您的发行版中，您将需要root访问权限来最初安装这些。完整的说明可以在[https://github.com/saghul/pythonz](https://github.com/saghul/pythonz)找到。
- en: JuJu
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: JuJu
- en: JuJu can be used as a last resort, it allows a working Python 3.4 installation
    on any system without needing root access. It works by creating a tiny Arch Linux
    installation in a folder, in your home folder and provides tools that allow us
    to switch to this installation and run commands in it. Using this, we can install
    Arch's Python 3.4 package, and you can run Python programs using this. The Arch
    environment even shares your home folder with your system, so sharing files between
    environments is easy. The JuJu home page is available at [https://github.com/fsquillace/juju](https://github.com/fsquillace/juju).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: JuJu可以作为最后的手段使用，它允许在任何系统上安装工作的Python 3.4，而无需root访问权限。它通过在您的主目录中的文件夹中创建一个微型Arch
    Linux安装，并提供工具，允许我们切换到此安装并在其中运行命令。使用此方法，我们可以安装Arch的Python 3.4软件包，并且可以使用此软件包运行Python程序。Arch环境甚至与您的系统共享主目录，因此在环境之间共享文件很容易。JuJu主页位于[https://github.com/fsquillace/juju](https://github.com/fsquillace/juju)。
- en: 'JuJu should work on any distribution. To install it we need to do this:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: JuJu应该适用于任何发行版。要安装它，我们需要这样做：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'This downloads and extracts the JuJu image to `~/.juju`. You''ll need to replace
    the `x86_64` with `x86` if you''re running on a 32-bit system. Next, set up `PATH`
    to pick up the JuJu commands:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这将下载并提取JuJu映像到`~/.juju`。如果您在32位系统上运行，需要将`x86_64`替换为`x86`。接下来，设置`PATH`以获取JuJu命令：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'It''s a good idea to add this to your .`bashrc`, so you don''t need to run
    it every time you log in. Next, we install Python in the `JuJu` environment, we
    only need to do this once:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 将此添加到您的`.bashrc`是个好主意，这样您就不需要每次登录时都运行它。接下来，我们在`JuJu`环境中安装Python，我们只需要这样做一次：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'These commands first activate the `JuJu` environment as root, then use the
    `pacman` Arch Linux package manager to update the system and install Python 3.4\.
    The final `exit` command exits the `JuJu` environment. Finally, we can access
    the `JuJu` environment as a regular user:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这些命令首先以root身份激活`JuJu`环境，然后使用`pacman` Arch Linux软件包管理器更新系统并安装Python 3.4。最后的`exit`命令退出`JuJu`环境。最后，我们可以以普通用户的身份访问`JuJu`环境：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We can then start using the installed Python 3:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以开始使用安装的Python 3：
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Windows
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Windows
- en: Compared to some of the older Linux distributions, installing Python 3.4 on
    Windows is relatively easy; just download the Python 3.4 installer from [http://www.python.org](http://www.python.org)
    and run it. The only hitch is that it requires administrator privileges to do
    so, so if you're on a locked down machine, things are trickier. The best solution
    at the moment is WinPython, which is available at [http://winpython.github.io](http://winpython.github.io).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 与一些较旧的Linux发行版相比，在Windows上安装Python 3.4相对容易；只需从[http://www.python.org](http://www.python.org)下载Python
    3.4安装程序并运行即可。唯一的问题是它需要管理员权限才能这样做，因此如果您在受限制的计算机上，事情就会更加棘手。目前最好的解决方案是WinPython，可以在[http://winpython.github.io](http://winpython.github.io)找到。
- en: Other requirements
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他要求
- en: We assume that you have a working Internet connection. Several chapters use
    Internet resources extensively, and there is no real way to emulate these offline.
    Having a second computer is also useful to explore some networking concepts, and
    for trying out network applications across a real network.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设您有一个正常工作的互联网连接。几章使用互联网资源广泛，而且没有真正的方法来离线模拟这些资源。拥有第二台计算机也对探索一些网络概念以及在真实网络中尝试网络应用程序非常有用。
- en: We also use the Wireshark packet sniffer in several chapters. This will require
    a machine where you have root access (or administrator access in Windows). Wireshark
    installers and installation instructions are available at [https://www.wireshark.org](https://www.wireshark.org).
    An introduction to using Wireshark can be found in the [Appendix](apa.html "Appendix A. Working
    with Wireshark"), *Working with Wireshark*.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还在几章中使用Wireshark数据包嗅探器。这将需要一台具有root访问权限（或Windows中的管理员访问权限）的机器。Wireshark安装程序和安装说明可在[https://www.wireshark.org](https://www.wireshark.org)找到。有关使用Wireshark的介绍可以在[附录](apa.html
    "附录 A. 使用Wireshark")中找到，*使用Wireshark*。
- en: Who this book is for
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书是为谁写的
- en: If you're a Python developer, or system administrator with Python experience,
    and you're looking forward to take your first step in network programming, then
    this book is for you. Whether you're working with networks for the first time
    or looking to enhance your existing networking and Python skills, you will find
    this book very useful.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是Python开发人员，或者具有Python经验的系统管理员，并且希望迈出网络编程的第一步，那么这本书适合您。无论您是第一次使用网络还是希望增强现有的网络和Python技能，您都会发现这本书非常有用。
- en: Conventions
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您会发现一些文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "IP
    addresses have been assigned to your computer by running the `ip addr` or `ipconfig
    /all` command on Windows."'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“通过在Windows上运行`ip
    addr`或`ipconfig /all`命令为您的计算机分配了IP地址。”
- en: 'A block of code is set as follows:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are highlighted:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目会被突出显示：
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都是这样写的：
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "We can see there''s a list of interfaces below the **Start** button."'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会在文本中出现，如：“我们可以看到**开始**按钮下面有一个接口列表。”'
- en: Note
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的框中。
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这种方式出现。
- en: We follow PEP 8 as closely as we can, but we also follow the principle that
    practicality beats purity, and do deviate in a few areas. Imports are often performed
    on a single line to save space, and we may not strictly adhere to wrapping conventions
    do to the nature of printed media; we aim for "readability counts".
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们尽量遵循PEP 8，但我们也遵循实用性胜过纯粹的原则，并在一些领域偏离。导入通常在一行上执行以节省空间，而且我们可能不严格遵守换行约定，因为这是印刷媒体的特性；我们的目标是“可读性至关重要”。
- en: We have also chosen to focus on the procedural programming style rather than
    use object-oriented examples. The reason for this is that it is generally easier
    for someone familiar with object oriented programming to rework procedural examples
    into an object oriented format than it is for someone unfamiliar with OOP to do
    the reverse.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还选择专注于过程式编程风格，而不是使用面向对象的示例。这样做的原因是，熟悉面向对象编程的人通常更容易将过程式示例重新制作为面向对象的格式，而对于不熟悉面向对象编程的人来说，反过来做则更困难。
