["```py\n$ pip3 install requests $ pip3 install beautifulsoup4\n```", "```py\nimport requests from bs4 import BeautifulSoup page_result = requests.get('https://www.imdb.com/news/top?ref_=nv_nw_tp') parse_obj = BeautifulSoup(page_result.content, 'html.parser') print(parse_obj)\n```", "```py\nstudent@ubuntu:~/work$ python3 parse_web_page.py Output: <!DOCTYPE html> <html  > <head> <meta charset=\"utf-8\"/> <meta content=\"IE=edge\" http-equiv=\"X-UA-Compatible\"/> <meta content=\"app-id=342792525, app-argument=imdb:///?src=mdot\" name=\"apple-itunes-app\"/> <script type=\"text/javascript\">var IMDbTimer={starttime: new Date().getTime(),pt:'java'};</script> <script>\n if (typeof uet == 'function') { uet(\"bb\", \"LoadTitle\", {wb: 1}); } </script> <script>(function(t){ (t.events = t.events || {})[\"csm_head_pre_title\"] = new Date().getTime(); })(IMDbTimer);</script> <title>Top News - IMDb</title> <script>(function(t){ (t.events = t.events || {})[\"csm_head_post_title\"] = new Date().getTime(); })(IMDbTimer);</script> <script>\n if (typeof uet == 'function') { uet(\"be\", \"LoadTitle\", {wb: 1}); } </script> <script>\n if (typeof uex == 'function') { uex(\"ld\", \"LoadTitle\", {wb: 1}); } </script> <link href=\"https://www.imdb.com/news/top\" rel=\"canonical\"/> <meta content=\"http://www.imdb.com/news/top\" property=\"og:url\"> <script>\n if (typeof uet == 'function') { uet(\"bb\", \"LoadIcons\", {wb: 1}); }\n```", "```py\nimport requests from bs4 import BeautifulSoup page_result = requests.get('https://www.imdb.com/news/top?ref_=nv_nw_tp') parse_obj = BeautifulSoup(page_result.content, 'html.parser') top_news = parse_obj.find(class_='news-article__content') print(top_news)\n```", "```py\nstudent@ubuntu:~/work$ python3 extract_from_class.py Output : <div class=\"news-article__content\"> <a href=\"/name/nm4793987/\">Issa Rae</a> and <a href=\"/name/nm0000368/\">Laura Dern</a> are teaming up to star in a limited series called \u201cThe Dolls\u201d currently in development at <a href=\"/company/co0700043/\">HBO</a>.<br/><br/>Inspired by true events, the series recounts the aftermath of Christmas Eve riots in two small Arkansas towns in 1983, riots which erupted over Cabbage Patch Dolls. The series explores class, race, privilege and what it takes to be a \u201cgood mother.\u201d<br/><br/>Rae will serve as a writer and executive producer on the series in addition to starring, with Dern also executive producing. <a href=\"/name/nm3308450/\">Laura Kittrell</a> and <a href=\"/name/nm4276354/\">Amy Aniobi</a> will also serve as writers and co-executive producers. <a href=\"/name/nm0501536/\">Jayme Lemons</a> of Dern\u2019s <a href=\"/company/co0641481/\">Jaywalker Pictures</a> and <a href=\"/name/nm3973260/\">Deniese Davis</a> of <a href=\"/company/co0363033/\">Issa Rae Productions</a> will also executive produce.<br/><br/>Both Rae and Dern currently star in HBO shows, with Dern appearing in the acclaimed drama \u201c<a href=\"/title/tt3920596/\">Big Little Lies</a>\u201d and Rae starring in and having created the hit comedy \u201c<a href=\"/title/tt5024912/\">Insecure</a>.\u201d Dern also recently starred in the film \u201c<a href=\"/title/tt4015500/\">The Tale</a>,\n </div>\n```", "```py\nimport requests from bs4 import BeautifulSoup page_result = requests.get('https://www.imdb.com/news/top?ref_=nv_nw_tp') parse_obj = BeautifulSoup(page_result.content, 'html.parser') top_news = parse_obj.find(class_='news-article__content') top_news_a_content = top_news.find_all('a') print(top_news_a_content)\n```", "```py\nstudent@ubuntu:~/work$ python3 extract_from_tag.py Output: [<a href=\"/name/nm4793987/\">Issa Rae</a>, <a href=\"/name/nm0000368/\">Laura Dern</a>, <a href=\"/company/co0700043/\">HBO</a>, <a href=\"/name/nm3308450/\">Laura Kittrell</a>, <a href=\"/name/nm4276354/\">Amy Aniobi</a>, <a href=\"/name/nm0501536/\">Jayme Lemons</a>, <a href=\"/company/co0641481/\">Jaywalker Pictures</a>, <a href=\"/name/nm3973260/\">Deniese Davis</a>, <a href=\"/company/co0363033/\">Issa Rae Productions</a>, <a href=\"/title/tt3920596/\">Big Little Lies</a>, <a href=\"/title/tt5024912/\">Insecure</a>, <a href=\"/title/tt4015500/\">The Tale</a>]\n```", "```py\nimport requests from bs4 import BeautifulSoup page_result = requests.get('https://en.wikipedia.org/wiki/Portal:History') parse_obj = BeautifulSoup(page_result.content, 'html.parser') h_obj = parse_obj.find(class_='hlist noprint')\nh_obj_a_content = h_obj.find_all('a') print(h_obj) print(h_obj_a_content)\n```", "```py\nstudent@ubuntu:~/work$ python3 extract_from_wikipedia.py\nOutput:\n<div class=\"hlist noprint\" id=\"portals-browsebar\" style=\"text-align: center;\">\n<dl><dt><a href=\"/wiki/Portal:Contents/Portals\" title=\"Portal:Contents/Portals\">Portal topics</a></dt>\n<dd><a href=\"/wiki/Portal:Contents/Portals#Human_activities\" title=\"Portal:Contents/Portals\">Activities</a></dd>\n<dd><a href=\"/wiki/Portal:Contents/Portals#Culture_and_the_arts\" title=\"Portal:Contents/Portals\">Culture</a></dd>\n<dd><a href=\"/wiki/Portal:Contents/Portals#Geography_and_places\" title=\"Portal:Contents/Portals\">Geography</a></dd>\n<dd><a href=\"/wiki/Portal:Contents/Portals#Health_and_fitness\" title=\"Portal:Contents/Portals\">Health</a></dd>\n<dd><a href=\"/wiki/Portal:Contents/Portals#History_and_events\" title=\"Portal:Contents/Portals\">History</a></dd>\n<dd><a href=\"/wiki/Portal:Contents/Portals#Mathematics_and_logic\" title=\"Portal:Contents/Portals\">Mathematics</a></dd>\n<dd><a href=\"/wiki/Portal:Contents/Portals#Natural_and_physical_sciences\" title=\"Portal:Contents/Portals\">Nature</a></dd>\n<dd><a href=\"/wiki/Portal:Contents/Portals#People_and_self\" title=\"Portal:Contents/Portals\">People</a></dd>\nIn the preceding example, we extracted the content from Wikipedia. In this example also, we extracted the content from class as well as tag.\n....\n```"]