["```py\n<sometag>This is some content</sometag>\n```", "```py\nText can be <b>bold<b> <br>\nText can be <em>emphasized</em> <br>\nText can be <u>underlined</u> <hr>\n```", "```py\n<ol>\n  <li> Item one</li>\n  <li> Item two</li>\n  <li> Item three</li>\n</ol>\n```", "```py\n<b><i>This is right</i></b>\n<b><i>This is wrong!</b></i>\n```", "```py\n<img src=\"my_image.png\" width=\"100px\" height=\"20px\">\n```", "```py\nb {\n    color: red;\n    font-size: 16pt;\n}\n```", "```py\na:hovered {\n   color: green;\n   font-size: 16pt;\n}\n```", "```py\n        main = qtw.QTextBrowser()\n        self.setCentralWidget(main)\n        with open('fight_fighter2.html', 'r') as fh:\n            main.insertHtml(fh.read())\n```", "```py\n<qt>\n  <body>\n    <h1>Fight Fighter 2</h1>\n    <hr>\n```", "```py\n    <p>Everything you love about fight-fighter, but better!</p>\n```", "```py\n    <h2>About</h2>\n```", "```py\n  <p>Fight fighter 2 is the <i>amazing</i> sequel to <u>Fight Fighter</u>, an <s>intense</s> ultra-intense multiplayer action game from <b>FightSoft Software, LLC</b>.</p>\n```", "```py\n    <p>Fight Fighter 2's new Ultra-Action<sup>TM</sup> technology delivers low-latency combat like never before.   Best of all, at only $1.99<sub>USD</sub>, you <big>Huge Action</big> for a <small>tiny</small> price.</p>\n```", "```py\n    <p>Download it today from\n    <a href='http://www.example.com'>Example.com</a>!</p>\n```", "```py\n      main.setOpenExternalLinks(True)\n```", "```py\n    <p><a href='#Features'>Read about the features</a></p>\n\n    <br><br><br><br><br><br>\n\n    <a name='Features'></a>\n    <h2>Features</h2>\n    <p>Fight Fighter 2 is so amazing in so many ways:</p>\n```", "```py\n    <ul type=square>\n      <li>More players at once!  Have up to 72 players.</li>\n      <li>More teams!  Play with up to 16 teams!</li>\n      <li>Easier installation!  Simply:<ol>\n        <li>Copy the executable to your system.</li>\n        <li>Run it!</li>\n      </ol></li>\n      <li>Sound and music! &gt;16 Million colors on some systems!</li>\n    </ul>\n```", "```py\n    <table border=2>\n      <thead>\n        <tr bgcolor='grey'>\n        <th>System</th><th>Graphics</th><th>Sound</th></tr>\n      </thead>\n```", "```py\n      <tr><td>Windows</td><td>DirectX 3D</td><td>24 bit PCM</td></tr>\n      <tr><td>FreeDOS</td><td>256 color</td><td>8 bit Adlib PCM</td></tr>\n      <tr><td>Commodore 64</td><td>256 color</td><td>SID audio</td></tr>\n      <tr><td>TRS80</td>\n        <td rowspan=2>Monochrome</td>\n        <td rowspan=2>Beeps</td>\n      </tr>\n      <tr><td>Timex Sinclair</td></tr>\n      <tr>\n        <td>BBC Micro</td>\n        <td colspan=2 bgcolor='red'>No support</td>\n      </tr>\n    </table>\n```", "```py\n    <h2>Special!</h2>\n\n    <p>\n      <font face='Impact' size=32 color='green'>Buy Now!</font>\n      and receive <tt>20%</tt> off the regular price plus a\n      <font face=Impact size=16 color='red'>Free sticker!</font>\n    </p>\n```", "```py\n    <div style='font-size: 16pt; font-weight: bold; color: navy;\n                background-color: orange; padding: 20px;\n                text-align: center;'>\n                Don't miss this exciting offer!\n    </div>\n```", "```py\n        main.document().setDefaultStyleSheet(\n            'body {color: #333; font-size: 14px;} '\n            'h2 {background: #CCF; color: #443;} '\n            'h1 {background: #001133; color: white;} '\n        )\n```", "```py\n        main.setStyleSheet('background-color: #EEF;')\n```", "```py\n    <div>\n      <img src=logo.png width=400 height=100 />\n    </div>\n```", "```py\nclass InvoiceForm(qtw.QWidget):\n\n    submitted = qtc.pyqtSignal(dict)\n\n    def __init__(self):\n        super().__init__()\n        self.setLayout(qtw.QFormLayout())\n        self.inputs = dict()\n        self.inputs['Customer Name'] = qtw.QLineEdit()\n        self.inputs['Customer Address'] = qtw.QPlainTextEdit()\n        self.inputs['Invoice Date'] = qtw.QDateEdit(\n            date=qtc.QDate.currentDate(), calendarPopup=True)\n        self.inputs['Days until Due'] = qtw.QSpinBox(\n            minimum=0, maximum=60, value=30)\n        for label, widget in self.inputs.items():\n            self.layout().addRow(label, widget)\n```", "```py\n        self.line_items = qtw.QTableWidget(\n            rowCount=10, columnCount=3)\n        self.line_items.setHorizontalHeaderLabels(\n            ['Job', 'Rate', 'Hours'])\n        self.line_items.horizontalHeader().setSectionResizeMode(\n            qtw.QHeaderView.Stretch)\n        self.layout().addRow(self.line_items)\n        for row in range(self.line_items.rowCount()):\n            for col in range(self.line_items.columnCount()):\n                if col > 0:\n                    w = qtw.QSpinBox(minimum=0)\n                    self.line_items.setCellWidget(row, col, w)\n```", "```py\n        submit = qtw.QPushButton('Create Invoice', clicked=self.on_submit)\n        self.layout().addRow(submit)\n```", "```py\n   def on_submit(self):\n        data = {\n            'c_name': self.inputs['Customer Name'].text(),\n            'c_addr': self.inputs['Customer Address'].toPlainText(),\n            'i_date': self.inputs['Invoice Date'].date().toString(),\n            'i_due': self.inputs['Invoice Date'].date().addDays(\n                self.inputs['Days until Due'].value()).toString(),\n            'i_terms': '{} days'.format(\n                self.inputs['Days until Due'].value())\n        }\n```", "```py\n       data['line_items'] = list()\n        for row in range(self.line_items.rowCount()):\n            if not self.line_items.item(row, 0):\n                continue\n            job = self.line_items.item(row, 0).text()\n            rate = self.line_items.cellWidget(row, 1).value()\n            hours = self.line_items.cellWidget(row, 2).value()\n            total = rate * hours\n            row_data = [job, rate, hours, total]\n            if any(row_data):\n                data['line_items'].append(row_data)\n```", "```py\n        data['total_due'] = sum(x[3] for x in data['line_items'])\n        self.submitted.emit(data)\n```", "```py\n        main = qtw.QWidget()\n        main.setLayout(qtw.QHBoxLayout())\n        self.setCentralWidget(main)\n\n        form = InvoiceForm()\n        main.layout().addWidget(form)\n\n        self.preview = InvoiceView()\n        main.layout().addWidget(self.preview)\n\n        form.submitted.connect(self.preview.build_invoice)\n```", "```py\nclass InvoiceView(qtw.QTextEdit):\n\n    dpi = 72\n    doc_width = 8.5 * dpi\n    doc_height = 11 * dpi\n\n    def __init__(self):\n        super().__init__(readOnly=True)\n        self.setFixedSize(qtc.QSize(self.doc_width, self.doc_height))\n```", "```py\n    def build_invoice(self, data):\n        document = qtg.QTextDocument()\n        self.setDocument(document)\n        document.setPageSize(qtc.QSizeF(self.doc_width, self.doc_height))\n```", "```py\n        cursor = qtg.QTextCursor(document)\n```", "```py\n        cursor.insertText(\"Invoice, woohoo!\")\n```", "```py\n        root = document.rootFrame()\n```", "```py\n        cursor.setPosition(root.lastPosition())\n```", "```py\n        logo_frame_fmt = qtg.QTextFrameFormat()\n        logo_frame_fmt.setBorder(2)\n        logo_frame_fmt.setPadding(10)\n        logo_frame = cursor.insertFrame(logo_frame_fmt)\n```", "```py\n        cursor.setPosition(root.lastPosition())\n        cust_addr_frame_fmt = qtg.QTextFrameFormat()\n        cust_addr_frame_fmt.setWidth(self.doc_width * .3)\n        cust_addr_frame_fmt.setPosition(qtg.QTextFrameFormat.FloatRight)\n        cust_addr_frame = cursor.insertFrame(cust_addr_frame_fmt)\n```", "```py\n        cursor.setPosition(root.lastPosition())\n        terms_frame_fmt = qtg.QTextFrameFormat()\n        terms_frame_fmt.setWidth(self.doc_width * .5)\n        terms_frame_fmt.setPosition(qtg.QTextFrameFormat.FloatLeft)\n        terms_frame = cursor.insertFrame(terms_frame_fmt)\n```", "```py\n        cursor.setPosition(root.lastPosition())\n        line_items_frame_fmt = qtg.QTextFrameFormat()\n        line_items_frame_fmt.setMargin(25)\n        line_items_frame = cursor.insertFrame(line_items_frame_fmt)\n```", "```py\n        std_format = qtg.QTextCharFormat()\n\n        logo_format = qtg.QTextCharFormat()\n        logo_format.setFont(\n            qtg.QFont('Impact', 24, qtg.QFont.DemiBold))\n        logo_format.setUnderlineStyle(\n            qtg.QTextCharFormat.SingleUnderline)\n        logo_format.setVerticalAlignment(\n            qtg.QTextCharFormat.AlignMiddle)\n\n        label_format = qtg.QTextCharFormat()\n        label_format.setFont(qtg.QFont('Sans', 12, qtg.QFont.Bold))\n```", "```py\n        cursor.setPosition(logo_frame.firstPosition())\n```", "```py\n        cursor.insertImage('nc_logo.png')\n```", "```py\n        logo_image_fmt = qtg.QTextImageFormat()\n        logo_image_fmt.setName('nc_logo.png')\n        logo_image_fmt.setHeight(48)\n        cursor.insertImage(logo_image_fmt, qtg.QTextFrameFormat.FloatLeft)\n```", "```py\n        cursor.insertText('   ')\n        cursor.insertText('Ninja Coders, LLC', logo_format)\n        cursor.insertBlock()\n        cursor.insertText('123 N Wizard St, Yonkers, NY 10701', std_format)\n```", "```py\n        cursor.setPosition(cust_addr_frame.lastPosition())\n```", "```py\n        address_format = qtg.QTextBlockFormat()\n        address_format.setAlignment(qtc.Qt.AlignRight)\n        address_format.setRightMargin(25)\n        address_format.setLineHeight(\n            150, qtg.QTextBlockFormat.ProportionalHeight)\n```", "```py\n        cursor.insertBlock(address_format)\n        cursor.insertText('Customer:', label_format)\n        cursor.insertBlock(address_format)\n        cursor.insertText(data['c_name'], std_format)\n        cursor.insertBlock(address_format)\n        cursor.insertText(data['c_addr'])\n```", "```py\n        cursor.setPosition(terms_frame.lastPosition())\n        cursor.insertText('Terms:', label_format)\n        cursor.insertList(qtg.QTextListFormat.ListDisc)\n```", "```py\n        term_items = (\n            f'<b>Invoice dated:</b> {data[\"i_date\"]}',\n            f'<b>Invoice terms:</b> {data[\"i_terms\"]}',\n            f'<b>Invoice due:</b> {data[\"i_due\"]}',\n        )\n```", "```py\n        for i, item in enumerate(term_items):\n            if i > 0:\n                cursor.insertBlock()\n            cursor.insertHtml(item)\n```", "```py\n        table_format = qtg.QTextTableFormat()\n        table_format.setHeaderRowCount(1)\n        table_format.setWidth(\n            qtg.QTextLength(qtg.QTextLength.PercentageLength, 100))\n```", "```py\n        headings = ('Job', 'Rate', 'Hours', 'Cost')\n        num_rows = len(data['line_items']) + 1\n        num_cols = len(headings)\n\n        cursor.setPosition(line_items_frame.lastPosition())\n        table = cursor.insertTable(num_rows, num_cols, table_format)\n```", "```py\n        for heading in headings:\n            cursor.insertText(heading, label_format)\n            cursor.movePosition(qtg.QTextCursor.NextCell)\n```", "```py\n        for row in data['line_items']:\n            for col, value in enumerate(row):\n                text = f'${value}' if col in (1, 3) else f'{value}'\n                cursor.insertText(text, std_format)\n                cursor.movePosition(qtg.QTextCursor.NextCell)\n```", "```py\n        table.appendRows(1)\n```", "```py\n        cursor = table.cellAt(num_rows, 0).lastCursorPosition()\n        cursor.insertText('Total', label_format)\n        cursor = table.cellAt(num_rows, 3).lastCursorPosition()\n        cursor.insertText(f\"${data['total_due']}\", label_format)\n```", "```py\n    def set_page_size(self, qrect):\n        self.doc_width = qrect.width()\n        self.doc_height = qrect.height()\n        self.setFixedSize(qtc.QSize(self.doc_width, self.doc_height))\n        self.document().setPageSize(\n            qtc.QSizeF(self.doc_width, self.doc_height))\n```", "```py\n        print_tb = self.addToolBar('Printing')\n        print_tb.addAction('Configure Printer', self.printer_config)\n        print_tb.addAction('Print Preview', self.print_preview)\n        print_tb.addAction('Print dialog', self.print_dialog)\n        print_tb.addAction('Export PDF', self.export_pdf)\n```", "```py\n        self.printer = qtps.QPrinter()\n        self.printer.setOrientation(qtps.QPrinter.Portrait)\n        self.printer.setPageSize(qtg.QPageSize(qtg.QPageSize.Letter))\n```", "```py\n    def printer_config(self):\n        dialog = qtps.QPageSetupDialog(self.printer, self)\n        dialog.exec()\n```", "```py\n    def _update_preview_size(self):\n        self.preview.set_page_size(\n            self.printer.pageRect(qtps.QPrinter.Point))\n```", "```py\n    def _print_document(self):\n        self.preview.document().print(self.printer)\n```", "```py\n    def print_dialog(self):\n        self._print_document()\n        dialog = qtps.QPrintDialog(self.printer, self)\n        dialog.exec()\n        self._update_preview_size()\n```", "```py\n    def print_preview(self):\n        dialog = qtps.QPrintPreviewDialog(self.printer, self)\n        dialog.paintRequested.connect(self._print_document)\n        dialog.exec()\n        self._update_preview_size()\n```", "```py\n    def export_pdf(self):\n        filename, _ = qtw.QFileDialog.getSaveFileName(\n            self, \"Save to PDF\", qtc.QDir.homePath(), \"PDF Files (*.pdf)\")\n        if filename:\n            self.printer.setOutputFileName(filename)\n            self.printer.setOutputFormat(qtps.QPrinter.PdfFormat)\n            self._print_document()\n```", "```py\n<table>\n<thead background=#EFE><th>Job</th><th>Status</th></thead>\n<tr><td>Backup</td>\n<font text-color='green'>Success!</font></td></tr>\n<tr><td>Cleanup<td><font text-style='bold'>Fail!</font></td></tr>\n</table>\n```", "```py\n<p>There is nothing <i>wrong</i> with your television <b>set</p></b>\n<table><row><data>french fries</data>\n<data>$1.99</data></row></table>\n<font family='Tahoma' color='#235499'>Can you feel the <strikethrough>love</strikethrough>code tonight?</font>\n<label>Username</label><input type='text' name='username'></input>\n<img source='://mypix.png'>My picture</img>\n```", "```py\n   <ul>\n     <li><a href='Section1'>Section 1</a></li>\n     <li><a href='Section2'>Section 2</a></li>\n   </ul>\n   <div id=Section1>\n     <p>This is section 1</p>\n   </div>\n   <div id=Section2>\n     <p>This is section 2</p>\n   </div>\n```", "```py\n   document = qtg.QTextDocument()\n   cursor = qtg.QTextCursor(document)\n   top_frame = cursor.insertFrame(qtg.QTextFrameFormat())\n   bottom_frame = cursor.insertFrame(qtg.QTextFrameFormat())\n\n   cursor.insertText('This is the title')\n   cursor.movePosition(qtg.QTextCursor.NextBlock)\n   cursor.insertList(qtg.QTextListFormat())\n   for item in ('thing 1', 'thing 2', 'thing 3'):\n       cursor.insertText(item)\n```", "```py\n   class MyPrinter(qtps.QPrinter):\n\n       page_size_changed = qtc.pyqtSignal(qtg.QPageSize)\n\n       def setPageSize(self, size):\n           super().setPageSize(size)\n           self.page_size_changed.emit(size)\n```"]