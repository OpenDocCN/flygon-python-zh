["```py\nimport sqlite3\n```", "```py\nconn = sqlite3.connect('ECommerce.db')\n```", "```py\nconn = sqlite3.connect(':memory:')\n```", "```py\nconn.close()\n```", "```py\ncur = conn.cursor()\n```", "```py\n# Get a cursor object\ncur = conn.cursor() cur.execute('''CREATE TABLE Users(id INTEGER PRIMARY KEY, EmailAddress TEXT, Password TEXT)''') conn.commit()\n```", "```py\n# Get a cursor object\ncur = conn.cursor() cur.execute('''DROP TABLE Users''') conn.commit()\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom sqlite3 import Error\nfrom demoDatabase import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonCreateDB.clicked.connect(self.\n        createDatabase)\n        self.show()\n    def createDatabase(self):\n        try:\n            conn = sqlite3.connect(self.ui.lineEditDBName.\n            text()+\".db\")\n            self.ui.labelResponse.setText(\"Database is created\")\n        except Error as e:\n            self.ui.labelResponse.setText(\"Some error has \n            occurred\")\n        finally:\n            conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom sqlite3 import Error\nfrom demoCreateTable import *\ntabledefinition=\"\"\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonCreateTable.clicked.connect( \n        self.createTable)\n        self.ui.pushButtonAddColumn.clicked.connect(self.\n        addColumns)\n        self.show()\n    def addColumns(self):\n        global tabledefinition\n        if tabledefinition==\"\":\n            tabledefinition=\"CREATE TABLE IF NOT EXISTS \"+   \n            self.ui.lineEditTableName.text()+\" (\"+ \n            self.ui.lineEditColumnName.text()+\"  \"+                                                                                                                      \n            self.ui.comboBoxDataType.itemText(self.ui.\n            comboBoxDataType.currentIndex())\n        else:\n            tabledefinition+=\",\"+self.ui.lineEditColumnName\n            .text()+\" \"+ self.ui.comboBoxDataType.itemText\n            (self.ui.comboBoxDataType.currentIndex())\n            self.ui.lineEditColumnName.setText(\"\")\n            self.ui.lineEditColumnName.setFocus()\n    def createTable(self):\n        global tabledefinition\n        try:\n            conn = sqlite3.connect(self.ui.lineEditDBName.\n            text()+\".db\")\n            self.ui.labelResponse.setText(\"Database is    \n            connected\")\n            c = conn.cursor()\n            tabledefinition+=\");\"\n            c.execute(tabledefinition)\n            self.ui.labelResponse.setText(\"Table is successfully  \n            created\")\n        except Error as e:\n            self.ui.labelResponse.setText(\"Error in creating \n            table\")\n        finally:\n            conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom sqlite3 import Error\nfrom demoInsertRowsInTable import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonInsertRow.clicked.connect(self.\n        InsertRows)\n        self.show()\n    def InsertRows(self):\n        sqlStatement=\"INSERT INTO \"+  \n        self.ui.lineEditTableName.text() +\"   \n        VALUES('\"+self.ui.lineEditEmailAddress.text()+\"', \n        '\"+self.ui.lineEditPassword.text()+\"')\"\n        try:\n            conn = sqlite3.connect(self.ui.lineEditDBName.\n            text()+ \".db\")\n        with conn:\n            cur = conn.cursor()\n            cur.execute(sqlStatement)\n            self.ui.labelResponse.setText(\"Row successfully \n            inserted\")\n        except Error as e:\n            self.ui.labelResponse.setText(\"Error in inserting  \n            row\")\n        finally:\n            conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication,QTableWidgetItem\nfrom sqlite3 import Error\nfrom demoDisplayRowsOfTable import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonDisplayRows.clicked. \n            connect(self.DisplayRows)\n        self.show()\n\n    def DisplayRows(self):\n        sqlStatement=\"SELECT * FROM \"+ \n            self.ui.lineEditTableName.text()\n        try:\n            conn = sqlite3.connect(self.ui.lineEditDBName.\n            text()+ \".db\")\n            cur = conn.cursor()\n            cur.execute(sqlStatement)\n            rows = cur.fetchall()\n            rowNo=0\n        for tuple in rows:\n            self.ui.labelResponse.setText(\"\")\n            colNo=0\n        for columns in tuple:\n            oneColumn=QTableWidgetItem(columns)\n            self.ui.tableWidget.setItem(rowNo, colNo, oneColumn)\n            colNo+=1\n            rowNo+=1\n        except Error as e:\n            self.ui.tableWidget.clear()\n            self.ui.labelResponse.setText(\"Error in accessing  \n            table\")\n        finally:\n            conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication,QTableWidgetItem\nfrom sqlite3 import Error\nfrom demoShowRecords import *\nrowNo=1\nsqlStatement=\"SELECT EmailAddress, Password FROM Users\"\nconn = sqlite3.connect(\"ECommerce.db\")\ncur = conn.cursor()\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        cur.execute(sqlStatement)\n        self.ui.pushButtonFirst.clicked.connect(self.\n        ShowFirstRow)\n        self.ui.pushButtonPrevious.clicked.connect(self.\n        ShowPreviousRow)\n        self.ui.pushButtonNext.clicked.connect(self.ShowNextRow)\n        self.ui.pushButtonLast.clicked.connect(self.ShowLastRow)\n        self.show()\n    def ShowFirstRow(self):\n        try:\n            cur.execute(sqlStatement)\n            row=cur.fetchone()\n        if row:\n            self.ui.lineEditEmailAddress.setText(row[0])\n            self.ui.lineEditPassword.setText(row[1])\n        except Error as e:\n            self.ui.labelResponse.setText(\"Error in accessing  \n            table\")\n    def ShowPreviousRow(self):\n        global rowNo\n        rowNo -= 1\n        sqlStatement=\"SELECT EmailAddress, Password FROM Users  \n        where rowid=\"+str(rowNo)\n        cur.execute(sqlStatement)\n        row=cur.fetchone()\n        if row: \n            self.ui.labelResponse.setText(\"\")\n            self.ui.lineEditEmailAddress.setText(row[0])\n            self.ui.lineEditPassword.setText(row[1])\n        else:\n            rowNo += 1\n            self.ui.labelResponse.setText(\"This is the first  \n            row\")\n        def ShowNextRow(self):\n            global rowNo\n            rowNo += 1\n            sqlStatement=\"SELECT EmailAddress, Password FROM  \n            Users where rowid=\"+str(rowNo)\n            cur.execute(sqlStatement)\n            row=cur.fetchone()\n            if row:\n                self.ui.labelResponse.setText(\"\")\n                self.ui.lineEditEmailAddress.setText(row[0])\n                self.ui.lineEditPassword.setText(row[1])\n            else:\n                rowNo -= 1\n                self.ui.labelResponse.setText(\"This is the last  \n                row\")\n    def ShowLastRow(self):\n        cur.execute(sqlStatement)\n        for row in cur.fetchall():\n            self.ui.lineEditEmailAddress.setText(row[0])\n            self.ui.lineEditPassword.setText(row[1])\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom sqlite3 import Error\nfrom demoSearchRows import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonSearch.clicked.connect(self.\n        SearchRows)\n        self.show()\n    def SearchRows(self):\n        sqlStatement=\"SELECT Password FROM  \n        \"+self.ui.lineEditTableName.text()+\" where EmailAddress  \n        like'\"+self.ui.lineEditEmailAddress.text()+\"'\"\n    try:\n        conn = sqlite3.connect(self.ui.lineEditDBName.text()+\n        \".db\")\n        cur = conn.cursor()\n        cur.execute(sqlStatement)\n        row = cur.fetchone()\n    if row==None:\n        self.ui.labelResponse.setText(\"Sorry, No User found with  \n        this email address\")\n        self.ui.lineEditPassword.setText(\"\")\n```", "```py\n    else:\n        self.ui.labelResponse.setText(\"Email Address Found,  \n        Password of this User is :\")\n        self.ui.lineEditPassword.setText(row[0])\n    except Error as e:\n        self.ui.labelResponse.setText(\"Error in accessing row\")\n    finally:\n        conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom sqlite3 import Error\nfrom demoSignInForm import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonSearch.clicked.connect(self.\n        SearchRows)\n        self.show()\n    def SearchRows(self):\n        sqlStatement=\"SELECT EmailAddress, Password FROM Users   \n        where EmailAddress like'\"+self.ui.lineEditEmailAddress.\n        text()+\"'and Password like '\"+ self.ui.lineEditPassword.\n        text()+\"'\"\n        try:\n            conn = sqlite3.connect(\"ECommerce.db\")\n            cur = conn.cursor()\n            cur.execute(sqlStatement)\n            row = cur.fetchone()\n        if row==None:\n            self.ui.labelResponse.setText(\"Sorry, Incorrect  \n            email address or password \")\n        else:\n            self.ui.labelResponse.setText(\"You are welcome \")\n        except Error as e:\n            self.ui.labelResponse.setText(\"Error in accessing \n            row\")\n        finally:\n            conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom sqlite3 import Error\nfrom demoChangePassword import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonChangePassword.clicked.connect(self.\n        ChangePassword)\n        self.show()\n    def ChangePassword(self):\n        selectStatement=\"SELECT EmailAddress, Password FROM   \n        Users where EmailAddress like '\"+self.ui.\n        lineEditEmailAddress.text()+\"'and Password like '\"+         \n        self.ui.lineEditOldPassword.text()+\"'\"\n        try:\n            conn = sqlite3.connect(\"ECommerce.db\")\n            cur = conn.cursor()\n            cur.execute(selectStatement)\n            row = cur.fetchone()\n        if row==None:\n            self.ui.labelResponse.setText(\"Sorry, Incorrect  \n            email address or password\")\n        else:\n        if self.ui.lineEditNewPassword.text()==  \n          self.ui.lineEditRePassword.text():\n            updateStatement=\"UPDATE Users set Password = '\" +             \n            self.ui.lineEditNewPassword.text()+\"' WHERE   \n            EmailAddress like'\"+self.ui.lineEditEmailAddress.\n            text()+\"'\"\n        with conn:\n            cur.execute(updateStatement)\n            self.ui.labelResponse.setText(\"Password successfully \n            changed\")\n        else:\n            self.ui.labelResponse.setText(\"The two passwords \n            don't match\")\n        except Error as e:\n            self.ui.labelResponse.setText(\"Error in accessing \n            row\")\n        finally:\n            conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sqlite3, sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom sqlite3 import Error\nfrom demoDeleteUser import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonDelete.clicked.connect(self.\n        DeleteUser)\n        self.ui.pushButtonYes.clicked.connect(self.\n        ConfirmDelete)\n        self.ui.labelSure.hide()\n        self.ui.pushButtonYes.hide()\n        self.ui.pushButtonNo.hide()\n        self.show()\n    def DeleteUser(self):\n        selectStatement=\"SELECT * FROM Users where EmailAddress  \n        like'\"+self.ui.lineEditEmailAddress.text()+\"' \n        and Password like '\"+ self.ui.lineEditPassword.\n        text()+\"'\"\n        try:\n            conn = sqlite3.connect(\"ECommerce.db\")\n            cur = conn.cursor()\n            cur.execute(selectStatement)\n            row = cur.fetchone()\n        if row==None:\n            self.ui.labelSure.hide()\n            self.ui.pushButtonYes.hide()\n            self.ui.pushButtonNo.hide()\n            self.ui.labelResponse.setText(\"Sorry, Incorrect \n            email address or password \")\n        else:\n            self.ui.labelSure.show()\n            self.ui.pushButtonYes.show()\n            self.ui.pushButtonNo.show()\n            self.ui.labelResponse.setText(\"\")\n        except Error as e:\n            self.ui.labelResponse.setText(\"Error in accessing \n            user account\")\n        finally:\n            conn.close()\n    def ConfirmDelete(self):\n        deleteStatement=\"DELETE FROM Users where EmailAddress    \n        like '\"+self.ui.lineEditEmailAddress.text()+\"' \n        and Password like '\"+ self.ui.lineEditPassword.\n        text()+\"'\"\n        try:\n            conn = sqlite3.connect(\"ECommerce.db\")\n            cur = conn.cursor()\n        with conn:\n            cur.execute(deleteStatement)\n            self.ui.labelResponse.setText(\"User successfully \n            deleted\")\n        except Error as e:\n            self.ui.labelResponse.setText(\"Error in deleting \n            user account\")\n        finally:\n            conn.close()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```"]