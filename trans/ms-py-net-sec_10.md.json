["```py\n$ pip install nessrest\n```", "```py\nfrom nessrest import ness6rest\n```", "```py\nscanner = ness6rest.Scanner(url=\"https://server:8834\", login=\"username\", password=\"password\")\n```", "```py\nscanner = ness6rest.Scanner(url=\"https://server:8834\", login=\"username\", password=\"password\",insecure=True)\n```", "```py\nscan.scan_add(targets=\"192.168.100.2\")\nscan.scan_run()\n```", "```py\nserveraddr_nexpose = \"192.168.56.101\"\nport_server_nexpose = \"3780\"\nuser_nexpose = \"user\"\npassword_nexpose = \"password\"\npynexposeHttps = pynexposeHttps.NeXposeServer(serveraddr_nexpose, port_server_nexpose, user_nexpose, password_nexpose)\n```", "```py\nfrom bs4 import BeautifulSoup\n\nclass NexposeFrameWork:\n\n    def __init__(self, pynexposeHttps):\n        self.pynexposeHttps = pynexposeHttps\n\n def siteListing(self):\n        print \"\\nSites\"\n        print \"--------------------------\"\n        bsoupSiteListing = BeautifulSoup(self.pynexposeHttps.site_listing(),'lxml')\n        for site in bsoupSiteListing.findAll('sitesummary'):\n            attrs = dict(site.attrs)\n                print(\"Description: \" + attrs['description'])\n                print(\"riskscore: \" + attrs['riskscore'])\n                print(\"Id: \" + attrs['id'])\n                print(\"riskfactor: \" + attrs['riskfactor'])\n                print(\"name: \" + attrs['name'])\n                print(\"\\n\")\n\n```", "```py\n def vulnerabilityListing(self):\n        print(\"\\nVulnerabilities\")\n        print(\"--------------------------\")\n        bsoupVulnerabilityListing =        BeautifulSoup(self.pynexposeHttps.vulnerability_listing(),'lxml')\n         for vulnerability in bsoupVulnerabilityListing.findAll('vulnerabilitysummary'):\n            attrs = dict(vulnerability.attrs)\n            print(\"Id: \" + attrs['id'])\n            print(\"Severity: \" + attrs['severity'])\n            print(\"Title: \" + attrs['title'])\n            bsoupVulnerabilityDetails = BeautifulSoup(self.pynexposeHttps.vulnerability_details(attrs['id']),'lxml')\n            for vulnerability_description in bsoupVulnerabilityDetails.findAll('description'):\n                print(\"Description: \" + vulnerability_description.text)\n                print(\"\\n\")\n```", "```py\nif __name__ == \"__main__\":\n    serveraddr_nexpose = \"192.168.56.101\"\n    port_server_nexpose = \"3780\"\n    user_nexpose = \"user\"\n    password_nexpose = \"password\"\n    pynexposeHttps = pynexposeHttps.NeXposeServer(serveraddr_nexpose,port_server_nexpose, user_nexpose, password_nexpose)\n\n    nexposeFrameWork = NexposeFrameWork(pynexposeHttps)\n    nexposeFrameWork.siteListing()\n    nexposeFrameWork.vulnerabilityListing()\n```", "```py\nnexposeFrameWork = NexposeFrameWork(pynexposeHttps)\nnexposeFrameWork.siteListing()\nnexposeFrameWork.vulnerabilityListing()\npynexposeHttps.logout()\n```", "```py\npynexposeHttps.site_listing()\npynexposeHttps.vulnerability_listing()\npynexposeHttps.vulnerability_details()\n```", "```py\ndef site_listing(self):\n    response = self.call(\"SiteListing\")\n    return etree.tostring(response)\n\ndef vulnerability_listing(self):\n    response = self.call(\"VulnerabilityListing\")\n    return etree.tostring(response)\n\ndef vulnerability_details(self, vulnid):\n    response = self.call(\"VulnerabilityDetails\", {\"vuln-id\" : vulnid})\n    return etree.tostring(response)\n```"]