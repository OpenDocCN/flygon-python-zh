- en: Why Not Automate Your Marketing Campaign?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么不自动化您的营销活动呢？
- en: 'In this chapter, we will cover the following recipes, which are related to
    a marketing campaign:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍与营销活动相关的以下配方：
- en: Detecting the opportunities
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测机会
- en: Creating personalized coupon codes
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建个性化优惠券代码
- en: Sending a notification to the customer on their preferred channel
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过用户的首选渠道向客户发送通知
- en: Preparing sales information
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备销售信息
- en: Generating a sales report
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成销售报告
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In this chapter, we will create a whole marketing campaign, going through each
    of the automatic steps we'll take. We will leverage all the concepts and recipes
    throughout the book in a single project that will require different steps.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将创建一个完整的营销活动，逐步进行每个自动步骤。我们将在一个项目中利用本书中的所有概念和配方，这将需要不同的步骤。
- en: 'Let''s take an example. For our project, our company  wishes to set up up a
    marketing campaign to improve engagement and sales. A very laudable effort. To
    do so, we can divide the action into several steps:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们举个例子。对于我们的项目，我们的公司希望设置一个营销活动来提高参与度和销售额。这是一个非常值得赞扬的努力。为此，我们可以将行动分为几个步骤：
- en: We want to detect the best moment to launch the campaign, so we will be notified
    from different sources about keywords that will help us make an informed decision
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们希望检测启动活动的最佳时机，因此我们将从不同来源收到关键词的通知，这将帮助我们做出明智的决定
- en: The campaign will include the generation of individual codes to be sent to potential
    customers
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 该活动将包括生成个人代码以发送给潜在客户
- en: Parts of these codes will be sent directly to users over their preferred channel,
    text message or email
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这些代码的部分将直接通过用户的首选渠道发送给他们，即短信或电子邮件
- en: To monitor the result of the campaign, the sales information will be compiled
    and a sales report will be generated
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了监控活动的结果，将编制销售信息并生成销售报告
- en: This chapter will go through each of these steps and present a combined solution
    based on modules and techniques that have been introduced in the book.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将逐步介绍这些步骤，并提出基于本书介绍的模块和技术的综合解决方案。
- en: While these examples have been created with real-life requirements in mind,
    take into account that your specific environment will always surprise you. Don't
    be afraid to experiment, tweak, and improve your system as you learn more about
    it. Iterating is the way to create great systems.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这些示例是根据现实生活中的需求创建的，但请注意，您的特定环境总会让您感到意外。不要害怕尝试、调整和改进您的系统，随着对系统的了解越来越多，迭代是创建出色系统的方法。
- en: Let's get to it!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Detecting the opportunities
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测机会
- en: 'In this recipe, we present a marketing campaign that is divided into several
    steps:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们提出了一个分为几个步骤的营销活动：
- en: Detect the best moment to launch the campaign
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测启动活动的最佳时机
- en: Generate individual codes to be sent to potential customers
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成个人代码以发送给潜在客户
- en: Send the codes directly to users over their preferred channel, text message
    or email
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过用户的首选渠道直接发送代码，即短信或电子邮件
- en: Collate the results of the campaign and generate a sales report with analysis
    of the results
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 整理活动的结果，并生成带有结果分析的销售报告
- en: This recipe shows step 1 of the campaign.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方展示了活动的第一步。
- en: Our first stage is to detect the best time to launch a campaign. To do so, we
    will monitor a list of news sites, searching for news containing one of our defined
    keywords. Any article that matches these keywords will be added to a report that
    will be sent in an email.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一阶段是检测启动活动的最佳时间。为此，我们将监视一系列新闻网站，搜索包含我们定义关键词之一的新闻。任何与这些关键词匹配的文章都将被添加到一份报告中，并通过电子邮件发送。
- en: Getting ready
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'In this recipe, we will use several external modules previously presented in
    the book, `delorean`, `requests`, and `BeautifulSoup`. We need to add them to
    our virtual environment if not already there:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将使用本书中之前介绍的几个外部模块，`delorean`、`requests`和`BeautifulSoup`。如果尚未添加到我们的虚拟环境中，我们需要将它们添加进去：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You need to make a list of RSS feeds, from which we will put our data.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要列出一些RSS源，我们将从中获取数据。
- en: 'In our example, we use the following feeds, which are all technology feeds
    in well-known news sites:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们使用以下源，这些源都是知名新闻网站上的技术源：
- en: '[http://feeds.reuters.com/reuters/technologyNews](http://feeds.reuters.com/reuters/technologyNews)'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://feeds.reuters.com/reuters/technologyNews](http://feeds.reuters.com/reuters/technologyNews)'
- en: '[http://rss.nytimes.com/services/xml/rss/nyt/Technology.xml](http://rss.nytimes.com/services/xml/rss/nyt/Technology.xml)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://rss.nytimes.com/services/xml/rss/nyt/Technology.xml](http://rss.nytimes.com/services/xml/rss/nyt/Technology.xml)'
- en: '[http://feeds.bbci.co.uk/news/science_and_environment/rss.xml](http://feeds.bbci.co.uk/news/science_and_environment/rss.xml)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://feeds.bbci.co.uk/news/science_and_environment/rss.xml](http://feeds.bbci.co.uk/news/science_and_environment/rss.xml)'
- en: Download the `search_keywords.py` script, which will perform the actions, from
    GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/search_keywords.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/search_keywords.py).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下载`search_keywords.py`脚本，该脚本将从GitHub执行操作，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/search_keywords.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/search_keywords.py)。
- en: You also need to download the email templates, which can be found at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_styling.html](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_styling.html)
    and [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_template.md](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_template.md).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要下载电子邮件模板，可以在[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_styling.html](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_styling.html)和[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_template.md](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/email_template.md)找到。
- en: There is a config template in [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini)中有一个配置模板。
- en: You need a valid username and password for an email service. Check the *Sending
    an individual email* recipe in [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml), *Dealing
    with Communication Channels*.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个有效的用户名和密码来使用电子邮件服务。在[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)的*发送单独的电子邮件*示例中检查。
- en: How to do it...
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Create a `config-opportunity.ini` file, which should be in the following format.
    Remember to fill it with your details:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`config-opportunity.ini`文件，格式如下。记得填写你的详细信息：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: You can use the template from  GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini)
    to search for the keyword `cpu`and some test feeds. Remember to fill in the `EMAIL`
    fields with your own account details.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用GitHub上的模板[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-opportunity.ini)来搜索关键词`cpu`和一些测试源。记得用你自己的账户信息填写`EMAIL`字段。
- en: 'Call the script to produce the email and report:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用脚本生成电子邮件和报告：
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Check the `to` email, and you should receive a report with the articles found.
    It should be something similar to this:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`to`电子邮件，你应该收到一份包含找到的文章的报告。它应该类似于这样：
- en: '![](assets/83e66ce4-be5b-46e2-96f3-5a4c5390865c.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/83e66ce4-be5b-46e2-96f3-5a4c5390865c.png)'
- en: How it works...
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: After creating the proper configuration for the script in step 1, web scraping
    and sending an email with the results is done in step 2 by calling `search_keywords.py`.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在步骤1中创建脚本的适当配置后，通过调用`search_keywords.py`在步骤2中完成网页抓取和发送电子邮件的结果。
- en: 'Let''s take a look at the `search_keywords.py` script. The code is structured
    into the following parts:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下`search_keywords.py`脚本。代码分为以下几部分：
- en: The `IMPORTS` section makes available all the Python modules to be used later.
    It also defines `EmailConfig namedtuple` to help with handling the email parameters.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IMPORTS`部分使所有Python模块可供以后使用。它还定义了`EmailConfig namedtuple`来帮助处理电子邮件参数。'
- en: '`READ TEMPLATES` retrieves the email templates and stores them for later use
    in the `EMAIL_TEMPLATE` and `EMAIL_STYLING` constants.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`READ TEMPLATES`检索电子邮件模板并将它们存储以供以后在`EMAIL_TEMPLATE`和`EMAIL_STYLING`常量中使用。'
- en: The `__main__` block starts the process by, getting the configuration parameters,
    parsing the config file, and then calling the main function.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__main__`块通过获取配置参数、解析配置文件，然后调用主函数来启动过程。'
- en: The `main` function combines the other functions. First, it retrieves the articles,
    and then it obtains the body and sends the email.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`main`函数组合了其他函数。首先，它检索文章，然后获取正文并发送电子邮件。'
- en: '`get_articles` walks through all the feeds, discards any article that is over
    a week old, retrieves each of them, and searches for a match on the keywords.
    All the matched articles are returned, including information about the link and
    a summary.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_articles`遍历所有的源，丢弃任何超过一周的文章，检索每一篇文章，并搜索关键词的匹配。返回所有匹配的文章，包括链接和摘要的信息。'
- en: '`compose_email_body` uses the email templates to compile the email body. Notice
    that the template is in Markdown and it gets parsed into HTML, to give the same
    information in plain-text and in HTML.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`compose_email_body`使用电子邮件模板编写电子邮件正文。注意模板是Markdown格式，它被解析为HTML，以便在纯文本和HTML中提供相同的信息。'
- en: '`send_email` gets the body information, as well as required info such as the
    username/password, and finally sends the email.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`send_email`获取正文信息，以及用户名/密码等必要信息，最后发送电子邮件。'
- en: There's more...
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: One of the main challenges in retrieving information from different sources
    is to parse the text in all cases. Some of the feeds may return information in
    different formats.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从不同来源检索信息的主要挑战之一是在所有情况下解析文本。一些源可能以不同的格式返回信息。
- en: For instance, in our example you can see that the Reuters feed summary includes
    HTML information that gets rendered in the resulting email. If you have that kind
    of problem, you may need to process the returned data further, until it becomes
    consistent. This may be highly dependent on the expected quality of the resulting
    report.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我们的示例中，你可以看到路透社的摘要包含HTML信息，这些信息在最终的电子邮件中被渲染。如果你遇到这种问题，你可能需要进一步处理返回的数据，直到它变得一致。这可能高度依赖于预期的报告质量。
- en: When developing automatic tasks, especially when dealing with multiple input
    sources, expect to spend a lot of time cleaning the input in a way that's consistent.
    But, on the other hand, find a balance and keep in mind the final recipient. If
    the email is to be received, for example, by yourself or an understanding teammate,
    you can be a little bit more permissive than in the case of an important client.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发自动任务时，特别是处理多个输入源时，预计会花费大量时间以一致的方式清理输入。但另一方面，要找到平衡，并牢记最终的接收者。例如，如果邮件是要由你自己或一个理解的队友接收，你可以比对待重要客户的情况更宽容一些。
- en: Another possibility is to increase the complexity of the match. In this recipe,
    the check is done with a simple `in`, but remember that all the techniques in
    [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let Us Begin Our Automation
    Journey, * including all the regular expression capabilities, are available for
    you to use.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种可能性是增加匹配的复杂性。在这个示例中，检查是用简单的`in`完成的，但请记住，[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)中的所有技术，包括所有正则表达式功能，都可以供您使用。
- en: This script is automatable through a cron job as described in [Chapter 2](6b1d9f13-f2de-41f1-a87b-6896ceb7b280.xhtml),
    *Automating Tasks Made Easy*. Try to run it every week!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本可以通过定时作业自动化，如《第2章》中所述，《自动化任务变得容易》。尝试每周运行一次！
- en: See also
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Adding command line arguments* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let
    Us Begin Our Automation Journey*
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第1章》的“添加命令行参数”中，《让我们开始我们的自动化之旅》
- en: The Introducing regular expressions recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let
    Us Begin Our Automation Journey*
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第1章》的“介绍正则表达式”中，《让我们开始我们的自动化之旅》
- en: The *Preparing a task* recipe in [Chapter 2](6b1d9f13-f2de-41f1-a87b-6896ceb7b280.xhtml), *Automating
    Tasks Made Easy*
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第2章》的“准备任务”中，《自动化任务变得容易》
- en: The *Setting up a cron job* in [Chapter 2](6b1d9f13-f2de-41f1-a87b-6896ceb7b280.xhtml), *Automating
    Tasks Made Easy*
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第2章》的“设置定时作业”中，《自动化任务变得容易》
- en: The *Parsing HTML* in [Chapter 3](d640524b-3aa3-406e-a6d4-842bc61c4658.xhtml), *Building
    Your First Web Scraping Application*
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第3章》的“解析HTML”中，《第一个网络爬虫应用程序》
- en: The *Crawling the web* recipe in [Chapter 3](d640524b-3aa3-406e-a6d4-842bc61c4658.xhtml), *Building
    Your First Web Scraping Application*
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第3章》的“爬取网络”中，《第一个网络爬虫应用程序》
- en: The Subscribing to feeds recipe in  [Chapter 3](d640524b-3aa3-406e-a6d4-842bc61c4658.xhtml), *Building
    Your First Web Scraping Application*
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第3章》的“构建您的第一个网络爬虫应用程序”中，订阅提要的食谱
- en: The Sending an individual email recipe in [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml), *Dealing
    with Communication Channels*
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《第8章》的“发送个人电子邮件”中，《处理通信渠道》
- en: Creating personalized coupon codes
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建个性化优惠券代码
- en: 'In this chapter, we are presenting a marketing campaign divided into steps:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将一个营销活动分为几个步骤：
- en: Detect the best moment to launch the campaign
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测最佳时机启动活动
- en: Generate individual codes to be sent to potential customers
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成要发送给潜在客户的个人代码
- en: Send the codes directly to users over their preferred channel, text message
    or email
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过用户首选的渠道，即短信或电子邮件，直接发送代码给用户
- en: Collect the results of the campaign
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集活动的结果
- en: Generate a sales report with analysis of the results
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成带有结果分析的销售报告
- en: This recipe shows step 2 of the campaign.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱展示了活动的第2步。
- en: 'After an opportunity is detected, we decide to generate a campaign for all
    customers. To direct promotions and avoid duplication, we will generate a million
    unique coupons, divided into three batches:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在发现机会后，我们决定为所有客户生成一项活动。为了直接促销并避免重复，我们将生成100万个独特的优惠券，分为三批：
- en: Half of the codes will be printed and distributed in a marketing action
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一半的代码将被打印并在营销活动中分发
- en: 300,000 codes will be reserved to be used later if the campaign hits some goals
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 30万代码将被保留，以备将来在活动达到一些目标时使用
- en: The remainder 200,000 will be directed to customers through SMS and emails,
    as we will see later
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其余的20万将通过短信和电子邮件直接发送给客户，我们稍后会看到
- en: 'These coupons can be redeemed in the online system. Our task will be to generate
    the proper codes, which should meet the following requirements:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这些优惠券可以在在线系统中兑换。我们的任务是生成符合以下要求的正确代码：
- en: The codes need to be unique
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码需要是唯一的
- en: The codes need to be printable and easy to read, as some customers will be dictating
    them over the phone
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码需要可打印且易于阅读，因为一些客户将通过电话口述它们
- en: There should be a quick way of discarding codes before checking them (avoiding
    spam attacks)
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在检查代码之前应该有一种快速丢弃代码的方法（避免垃圾邮件攻击）
- en: The codes should be presented in a CSV format for printing
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码应以CSV格式呈现以供打印
- en: Getting ready
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: Download the `create_personalised_coupons.py` script, which will generate the
    coupons in CSV files, from GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py).
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 从GitHub上下载`create_personalised_coupons.py`脚本，该脚本将在CSV文件中生成优惠券，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py)。
- en: How to do it...
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Call the `create_personalised_coupons.py` script. It will take a minute or
    two to run, depending on your computer speed. It will display the generated codes
    onscreen:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`create_personalised_coupons.py`脚本。根据您的计算机速度，运行时间可能需要一两分钟。它将在屏幕上显示生成的代码：
- en: '[PRE3]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Check it created three CSV files with the codes `codes_batch_1.csv`, `codes_batch_2.csv`,
    and `codes_batch_3.csv`, each with the proper number of codes:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查它是否创建了三个CSV文件，其中包含代码`codes_batch_1.csv`，`codes_batch_2.csv`和`codes_batch_3.csv`，每个文件都包含正确数量的代码：
- en: '[PRE4]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Check that each of the batch files contains unique codes. Your codes will be
    unique and different from the ones displayed here:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查每个批次文件是否包含唯一代码。您的代码将是唯一的，并且与此处显示的代码不同：
- en: '[PRE5]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works...
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Step 1 calls the script that generates all the codes, and step 2 checks that
    the results are correct. Step 3 shows the format in which the codes are stored.
    Let's analyze the `create_personalised_coupons.py` script.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤1调用生成所有代码的脚本，步骤2检查结果是否正确。步骤3显示代码存储的格式。让我们分析`create_personalised_coupons.py`脚本。
- en: 'In summary, it has the following structure:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 总之，它具有以下结构：
- en: '[PRE6]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The different functions work together to create a code. `random_code ` generates
    a combination of random letters and numbers, taken from `CHARACTERS`.  This string
    contains all the valid characters to choose from.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的功能一起工作来创建代码。`random_code`生成一组随机字母和数字的组合，取自`CHARACTERS`。该字符串包含所有可供选择的有效字符。
- en: The selection of characters is defined as symbols that are easy to print and
    not mistake for each other. For example, it will be difficult to distinguish between
    a letter O and the number 0, or the number 1 and the letter I, depending on the
    font. This may depend on the specifics, so check printing tests if necessary to
    tailor the characters. But avoid using all letter and numbers, as it may cause
    confusion. Increase the length of the codes if necessary.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 字符的选择被定义为易于打印且不易混淆的符号。例如，很难区分字母O和数字0，或数字1和字母I，这取决于字体。这可能取决于具体情况，因此如有必要，请进行打印测试以定制字符。但是避免使用所有字母和数字，因为这可能会引起混淆。如有必要，增加代码的长度。
- en: The `checksum` function generates, based on two codes, an extra digit that is
    derived from the two codes. This process is called **hashing**, and it's a well
    known process in computing, especially for cryptography.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`checksum`函数基于两个代码生成一个额外的数字，这个过程称为**哈希**，在计算中是一个众所周知的过程，尤其是在密码学中。'
- en: The basic function of hashing is to produce an output from an input that is
    smaller and is not reversible, meaning it's very difficult to guess unless the
    input is known. Hashing has a lot of common applications in computing, normally
    under the hood. For example, Python dictionaries make extensive use of hashing.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希的基本功能是从一个输入产生一个较小且不可逆的输出，这意味着很难猜测，除非已知输入。哈希在计算中有很多常见的应用，通常在底层使用。例如，Python字典广泛使用哈希。
- en: 'In our recipe, we''ll use SHA256, a well known fast hashing algorithm included
    in the Python `hashlib` module:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们将使用SHA256，这是一个众所周知的快速哈希算法，包含在Python的`hashlib`模块中：
- en: '[PRE7]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Both codes are added as input, and the resulting two hex digits of the hash
    are applied over `CHARACTERS` to obtain one of the available characters. The digits
    get transformed into a number (as they are in base 16) and we apply the `modulo`
    operator to be sure to obtain one of the available characters.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 两个代码作为输入添加，然后将哈希的两个十六进制数字应用于`CHARACTERS`，以获得其中一个可用字符。这些数字被转换为数字（因为它们是十六进制的），然后我们应用`模`运算符来确保获得其中一个可用字符。
- en: The objective of this checksum is to be able to quickly check whether a code
    looks like it is correct and discard possible spam. We can produce the operation
    again over a code to see whether the checksum is the same. Note that this is not
    a cryptographic hash, as no secret is required at any point of the operation.
    Given this specific use case, this (low) level of security is probably fine for
    our purposes.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这个校验和的目的是能够快速检查代码是否正确，并且丢弃可能的垃圾邮件。我们可以再次对代码执行操作，以查看校验和是否相同。请注意，这不是加密哈希，因为在操作的任何时候都不需要秘密。鉴于这个特定的用例，这种（低）安全级别对我们的目的来说可能是可以接受的。
- en: Cryptography is a much bigger theme and ensuring that security is strong can
    be difficult. The main strategy in cryptography involving hashing is probably
    to store just the hash to avoid storing passwords in a readable format. You can
    read a quick intro to that here: [https://crackstation.net/hashing-security.htm](https://crackstation.net/hashing-security.htm).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 密码学是一个更大的主题，确保安全性强可能会很困难。密码学中涉及哈希的主要策略可能是仅存储哈希以避免以可读格式存储密码。您可以在这里阅读有关此的快速介绍：[https://crackstation.net/hashing-security.htm](https://crackstation.net/hashing-security.htm)。
- en: The `generate_code` function then produces a random code, composed of four digits,
    then five digits, and then two digits of the checksum, divided by dashes. The
    first digit is generated with the first nine digits in order (four then five),
    and the second reversing them (five then four).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_code`函数然后生成一个随机代码，由四位数字、五位数字和两位校验和组成，用破折号分隔。第一个数字使用前九个数字按顺序生成（四位然后五位），第二个数字将其反转（五位然后四位）。'
- en: The `check_code` function reverses the process and returns `True` if the code
    is correct, and `False` otherwise.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`check_code`函数将反转过程，并在代码正确时返回`True`，否则返回`False`。'
- en: With the basic elements in place, the script starts by defining the required
    batches—500,000, 300,000, and 200,000.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 有了基本元素之后，脚本开始定义所需的批次——500,000、300,000和200,000。
- en: All the codes are generated in the same pool, called `codes`. This is to avoid
    duplicates between pools. Note that, due to the randomness of the process, we
    can't rule out the possibility of generating a duplicated code, though this is
    small. We allow to retry up to three times to avoid generating a duplicate code.
    The codes are added to a set accumulator to guarantee their uniqueness and to
    speed up checking whether a code is already there.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 所有的代码都是在同一个池中生成的，称为`codes`。这是为了避免在池之间产生重复。请注意，由于过程的随机性，我们无法排除生成重复代码的可能性，尽管这很小。我们允许最多重试三次，以避免生成重复代码。代码被添加到一个集合累加器中，以确保它们的唯一性，并加快检查代码是否已经存在的速度。
- en: '`sets` are another of the places where Python uses hashing under the hood,
    so it hashes the element to be added and compares it with the hashes of the elements
    already there. This makes checking in sets very quick.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`sets`是Python在底层使用哈希的另一个地方，因此它将要添加的元素进行哈希处理，并将其与已经存在的元素的哈希进行比较。这使得在集合中进行检查非常快速。'
- en: To be sure that the process is correct, each code is verified and printed to
    display progress while generating the code and allow inspecting that everything
    is working as expected.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确保过程是正确的，每个代码都经过验证并打印出来，以显示生成代码的进度，并允许检查一切是否按预期工作。
- en: 'Finally, the codes are divided into the proper number of batches and each one
    is saved in an individual `.csv` file. The codes are removed removed one by one
    from `codes` using `.pop()` until the `batch` has the proper size:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，代码被分成适当数量的批次，每个批次保存在单独的`.csv`文件中。 代码使用`.pop()`从`codes`中逐个删除，直到`batch`达到适当大小为止：
- en: '[PRE8]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Note how the previous line creates a batch of the proper size of rows with a
    single element. Each row is still a list, as it should be for a CSV file.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前一行创建了一个包含单个元素的适当大小行的批次。每一行仍然是一个列表，因为对于CSV文件来说应该是这样。
- en: Then, a file is created and, using a `csv.writer`, the codes are stored as rows.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，创建一个文件，并使用`csv.writer`将代码存储为行。
- en: As a final test, the remaining `codes` are verified to be empty.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后的测试，验证剩余的`codes`是否为空。
- en: There's more...
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In this recipe, a direct approach has been used in the flow. This is in opposition
    to the principles presented in the *Preparing a task to run* recipe in [Chapter
    2](6b1d9f13-f2de-41f1-a87b-6896ceb7b280.xhtml), *Automating Tasks Made Easy*.
    Notice that, compared with the tasks presented there, this script is aimed to
    be run a single time to produce the codes, and that's it. It also uses defined
    constants, such as `BATCHES`, for configuration.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，流程采用了直接的方法。这与第2章中*准备运行任务*食谱中介绍的原则相反，*简化任务变得更容易*。请注意，与那里介绍的任务相比，此脚本旨在运行一次以生成代码，然后结束。它还使用了定义的常量，例如`BATCHES`，用于配置。
- en: Given that it is a unique task, designed to be run once, spending time structuring
    it into a reusable component is probably not the best use of our time.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于这是一个独特的任务，设计为仅运行一次，花时间将其构建成可重用的组件可能不是我们时间的最佳利用方式。
- en: Over-engineering is definitively possible, and choosing between a pragmatic
    design and a more future-facing approach may not be easy. Be realistic about maintenance
    costs and try to find your own balance.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 过度设计肯定是可能的，而在实用设计和更具未来导向性的方法之间做出选择可能并不容易。要对维护成本保持现实，并努力找到自己的平衡。
- en: In the same way, the design in this recipe on the checksum is aimed to give
    a minimum way to check whether a code is totally made up or looks legit. Given
    that codes will be checked against a system, this seems like a sensible approach,
    but be aware of your particular use case.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，这个食谱中的校验和设计旨在提供一种最小的方式来检查代码是否完全虚构或看起来合法。鉴于代码将被检查系统，这似乎是一个明智的方法，但要注意您特定的用例。
- en: Our code space is of `22 characters ** 9 digits = 1,207,269,217,792 possible
    codes`, meaning the probability of guessing one of the million generated is very
    small. Is also not very likely to produce the same code twice, but nevertheless,
    we protected our code against that with up to three retries.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的代码空间是`22个字符** 9个数字= 1,207,269,217,792个可能的代码`，这意味着猜测其中一个百万个生成的代码的概率非常小。也不太可能产生相同的代码两次，但尽管如此，我们通过最多三次重试来保护我们的代码。
- en: These kinds of checks, as well as checking that each code verifies and that
    we end up with no remaining codes, are very useful when developing this kind of
    script. It ensures that we are going in the right direction and things are going
    according to plan. Just be aware that `asserts` may not be executed in some conditions.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 这些检查以及检查每个代码的验证以及最终没有剩余代码的检查在开发这种脚本时非常有用。这确保了我们朝着正确的方向前进，事情按计划进行。只是要注意，在某些情况下`asserts`可能不会被执行。
- en: As described in the Python documentation, `assert` commands are ignored if the
    Python code is optimized (run with the `-O` command). See the documentation here [https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement](https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement).
    This is normally not done, but can be confusing if that's the case. Avoid depending
    heavily on `asserts`.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如Python文档所述，如果使用`-O`命令运行Python代码，则`assert`命令将被忽略。请参阅此处的文档[https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement](https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement)。通常情况下不会这样做，但如果是这种情况可能会令人困惑。避免过度依赖`asserts`。
- en: Learning the basics of cryptography is not as difficult as you may assume. There
    are a small number of basic schema that are well known and easily learned. A good
    introduction article is this one, [https://thebestvpn.com/cryptography/](https://thebestvpn.com/cryptography/).
    Python also has a good number of cryptographic functions integrated; see the documentation
    at [https://docs.python.org/3/library/crypto.html](https://docs.python.org/3/library/crypto.html).
    The best approach is to find a good book and know that, while it's a difficult
    subject to truly master, it is definitely approachable.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 学习加密的基础并不像你可能认为的那么困难。有一些基本模式是众所周知且易于学习的。一个很好的介绍文章是这篇[https://thebestvpn.com/cryptography/](https://thebestvpn.com/cryptography/)。Python也集成了大量的加密函数；请参阅文档[https://docs.python.org/3/library/crypto.html](https://docs.python.org/3/library/crypto.html)。最好的方法是找一本好书，知道虽然这是一个难以真正掌握的主题，但绝对是可以掌握的。
- en: See also
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Introducing regular expressions* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml),
    *Let Us Begin Our Automation Journey *
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1章中的*介绍正则表达式*食谱，*让我们开始自动化之旅*
- en: The *Reading CSV files* recipe in [Chapter 4](e8536572-46e4-41ec-87b8-7f775fd61e63.xhtml), *Searching
    and Reading Local Files*
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第4章中的*读取CSV文件*食谱，*搜索和阅读本地文件*
- en: Sending a notification to the customer on their preferred channel
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向客户发送他们首选渠道的通知
- en: 'In this chapter, we are presenting a marketing campaign divided into several
    steps:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了一个分为几个步骤的营销活动：
- en: Detect the best moment to launch the campaign
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测最佳推出活动的时机
- en: Generate individual codes to be sent to potential customers
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成要发送给潜在客户的个别代码
- en: Send the codes directly to users over their preferred channel, text message
    or email
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直接将代码发送给用户，通过他们首选的渠道，短信或电子邮件
- en: Collect the results of the campaign
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集活动的结果
- en: Generate a sales report with analysis of the results
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成带有结果分析的销售报告
- en: This recipe shows step 3 of the campaign.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个食谱展示了活动的第3步。
- en: Once our codes are created for direct marketing, we need to distribute them
    to our customers.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的代码为直接营销创建好，我们需要将它们分发给我们的客户。
- en: For this recipe, from an input from a CSV file with the information of all customers
    and their preferred contact methods, we will fill the file with the codes generated
    previously, and then send a notification through the proper method that will include
    the promotional code.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，从包含所有客户及其首选联系方式信息的CSV文件中，我们将使用先前生成的代码填充文件，然后通过适当的方法发送通知，其中包括促销代码。
- en: Getting ready
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'In this recipe, we will use several modules already presented—`delorean`, `requests`,
    and `twilio`. We need to add them to our virtual environment if not already there:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将使用已经介绍过的几个模块——`delorean`、`requests`和`twilio`。如果尚未添加到我们的虚拟环境中，我们需要将它们添加进去：
- en: '[PRE9]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We need to define a `config-channel.ini` file with our credentials for the services
    to use, Mailgun and Twilio. A template of this file can be found in GitHub here: [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-channel.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-channel.ini).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要定义一个`config-channel.ini`文件，其中包含我们用于Mailgun和Twilio的服务的凭据。可以在GitHub上找到此文件的模板：[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-channel.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/config-channel.ini)。
- en: For information on how to obtain the credentials, refer to the *Sending notifications
    via emails* and *Producing SMS* recipes [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml), *Dealing
    with Communication Channels*
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何获取凭据的信息，请参阅*通过电子邮件发送通知*和*生成短信*的示例[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)，*处理通信渠道*
- en: 'The file has the following format:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 文件的格式如下：
- en: '[PRE10]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'For a description of all the contacts to target, we need to generate a CSV
    file, `notifications.csv`, in the following format:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 为了描述所有目标联系人，我们需要生成一个CSV文件`notifications.csv`，格式如下：
- en: '| Name | Contact Method | Target | Status | Code | Timestamp |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| Name | Contact Method | Target | Status | Code | Timestamp |'
- en: '| John Smith | PHONE | +1-555-12345678 | `NOT-SENT` |  |  |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| John Smith | PHONE | +1-555-12345678 | `NOT-SENT` |  |  |'
- en: '| Paul Smith | EMAIL | `paul.smith@test.com` | `NOT-SENT` |  |  |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| Paul Smith | EMAIL | `paul.smith@test.com` | `NOT-SENT` |  |  |'
- en: '| … |  |  |  |  |  |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| … |  |  |  |  |  |'
- en: Note that the `Code` column is empty, and all statuses should be `NOT-SENT`
    or empty.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意`Code`列为空，所有状态应为`NOT-SENT`或空。
- en: If you are using a test account in Twilio and Mailgun, be aware of its limitations.
    For example, Twilio only allows you to send messages to authenticated phone numbers.
    You can create a small CSV with only two or three contacts to test the script.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用Twilio和Mailgun的测试帐户，请注意其限制。例如，Twilio只允许您向经过身份验证的电话号码发送消息。您可以创建一个只包含两三个联系人的小型CSV文件来测试脚本。
- en: The coupon codes to be used should be ready in a CSV file. You can generate
    several batches with the `create_personalised_coupons.py` script, available in
    GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 应该准备好在CSV文件中使用的优惠券代码。您可以使用GitHub上的`create_personalised_coupons.py`脚本生成多个批次，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/create_personalised_coupons.py)。
- en: Download the script to be used, `send_notifications.py`, from GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/send_notifications.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/send_notifications.py).
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 从GitHub上下载要使用的脚本`send_notifications.py`，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/send_notifications.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/send_notifications.py)。
- en: How to do it...
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Run `send_notifications.py` to see its options and usage:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`send_notifications.py`以查看其选项和用法：
- en: '[PRE11]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Add the codes to the `notifications.csv` file:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将代码添加到`notifications.csv`文件中：
- en: '[PRE12]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Finally, send the notifications:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，发送通知：
- en: '[PRE13]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Check the emails and phones to verify the messages were received.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查电子邮件和电话，以验证消息是否已收到。
- en: How it works...
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Step 1 shows the use of the script. The general idea is to call it several times,
    the first to fill it with codes, and the second to send the messages. If there's
    an error, the script can be executed again, and only messages not previously sent
    will be retried.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 第1步展示了脚本的使用。总体思路是多次调用它，第一次用于填充代码，第二次用于发送消息。如果出现错误，可以再次执行脚本，只会重试之前未发送的消息。
- en: The `notifications.csv` file gets the codes that will be injected in step 2\.
    The codes are finally sent in step 3.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`notifications.csv`文件获取将在第2步中注入的代码。这些代码最终将在第3步中发送。'
- en: 'Let''s analyze the code of `send_notifications.py`. Only the most relevant
    bits are shown here:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分析`send_notifications.py`的代码。这里只显示了最相关的部分：
- en: '[PRE14]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The main function goes through the file line by line and analyzes what to do
    in each case. If the entry is `SENT`, it skips it. If it has no code, it tries
    to fill it. If it tries to send it, it will attach the timestamp to record when
    it was sent or tried to be sent.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 主要函数逐行遍历文件，并分析每种情况下要执行的操作。如果条目为`SENT`，则跳过。如果没有代码，则尝试填充。如果尝试发送，则会附加时间戳以记录发送或尝试发送的时间。
- en: For each entry, the whole file is saved again in a file called `save_file`.
    Notice how the file cursor is positioned at the start of the file, the file is
    written, and then flushed to disk. This makes the file overwritten on each entry
    operation, without having to close and open the file again.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个条目，整个文件都会被保存在名为`save_file`的文件中。注意文件光标定位在文件开头，然后写入文件，并刷新到磁盘。这样可以在每次条目操作时覆盖文件，而无需关闭和重新打开文件。
- en: Why write the whole file for each entry? This is to allow you to retry. If one
    of the entries produces an unexpected error or a timeout, or even if there's a
    general failure, all the progress and previous codes will be marked as `SENT`
    already, and not sent a second time. This means the operation can be retried needed.
    For a huge number of entries, this is a good way of ensuring that a problem in
    the middle of the process doesn't make us resend messages to our customers.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么要为每个条目写入整个文件？这是为了让您可以重试。如果其中一个条目产生意外错误或超时，甚至出现一般性故障，所有进度和先前的代码都将被标记为已发送，并且不会再次发送。这意味着可以根据需要重试操作。对于大量条目，这是确保在过程中出现问题不会导致我们重新发送消息给客户的好方法。
- en: For each code to be sent, the `send_notification` function decides to call either `send_phone_notification`
    or `send_email_notification`. It appends the current time in both cases.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 对于要发送的每个代码，`send_notification` 函数决定调用 `send_phone_notification` 或 `send_email_notification`。在两种情况下都附加当前时间。
- en: Both `send` functions return an error if they can't send the message. This allows
    you to mark it in the resulting `notifications.csv` and retry it later.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果无法发送消息，两个 `send` 函数都会返回错误。这允许您在生成的 `notifications.csv` 中标记它，并稍后重试。
- en: The `notifications.csv` file can also be changed manually. For example, imagine
    there's a typo in an email and that's the reason for the error. It can be changed
    and retried.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`notifications.csv` 文件也可以手动更改。例如，假设电子邮件中有拼写错误，这就是错误的原因。可以更改并重试。'
- en: '`send_email_notification` sends the message based on the Mailgun interface.
    For more information, refer to the *Sending notifications via emails* recipe in
    [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml), *Dealing with Communication
    Channels*. Note that the email sent here is text only.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`send_email_notification` 根据 Mailgun 接口发送消息。有关更多信息，请参阅[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)中的*通过电子邮件发送通知*配方，*处理通信渠道*。请注意这里发送的电子邮件仅为文本。'
- en: '`send_phone_notification` sends the message based on the Twilio interface. For
    more information, refer to the *Producing SMS* recipe in [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml),
    *Dealing with Communication Channels*.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`send_phone_notification` 根据 Twilio 接口发送消息。有关更多信息，请参阅[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)中的*生成短信*配方，*处理通信渠道*。'
- en: There's more...
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The format of the timestamp has been deliberately written in ISO format, as
    it is a parsable format. This means that we can get back a proper object in an
    easy way, like this:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 时间戳的格式故意以 ISO 格式编写，因为它是可解析的格式。这意味着我们可以轻松地以这种方式获取一个正确的对象，就像这样：
- en: '[PRE15]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This allows you to easily parse the timestamp back and forth.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这使您可以轻松地解析时间戳。
- en: ISO 8601 time format is well supported in most programming languages and very
    precisely defines the time, as it includes the time zone. It is an excellent choice
    for recording times, if you can use it.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: ISO 8601 时间格式在大多数编程语言中都得到很好的支持，并且非常精确地定义了时间，因为它包括时区。如果可以使用它，这是记录时间的绝佳选择。
- en: 'The strategy used in `send_notification` to route the notifications is an interesting
    one:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '`send_notification` 中用于路由通知的策略非常有趣：'
- en: '[PRE16]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The `METHOD` dictionary assigns each of the possible `Contact Method` to a function
    that has the same definition, accepting both an entry and a config.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`METHOD` 字典将每个可能的 `Contact Method` 分配给具有相同定义的函数，接受条目和配置。'
- en: Then, based on the specific method, the function is retrieved from the dictionary
    and called. Note the `method` variable contains the correct function to call.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，根据特定的方法，从字典中检索并调用函数。请注意 `method` 变量包含要调用的正确函数。
- en: This acts in a similar way to the `switch` operation that is available in other
    programming languages. It is also possible to achieve this through `if…else` blocks.
    For simple cases like this code, the dictionary method makes the code very readable.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 这类似于其他编程语言中可用的 `switch` 操作。也可以通过 `if...else` 块来实现。对于这种简单的代码，字典方法使代码非常易读。
- en: The `invalid_method` function is used as a default. If the `Contact Method`
    is not one of the available ones (`PHONE` or `EMAIL`), a `KeyError` will be raised,
    captured, and the result will be defined as `INVALID METHOD`.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '`invalid_method` 函数被用作默认值。如果 `Contact Method` 不是可用的方法之一（`PHONE` 或 `EMAIL`），将引发
    `KeyError`，捕获并将结果定义为 `INVALID METHOD`。'
- en: See also
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Sending notifications via emails* recipe in [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml), *Dealing
    with Communication Channels *
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)中的*通过电子邮件发送通知*配方，*处理通信渠道*'
- en: The *Producing SMS* recipe in [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml), *Dealing
    with Communication Channels *
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)中的*生成短信*配方，*处理通信渠道*'
- en: Preparing sales information
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备销售信息
- en: 'In this chapter, we are presenting a marketing campaign divided into several
    steps:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们介绍了一个分为几个步骤的营销活动：
- en: Detect the best moment to launch the campaign
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测启动广告活动的最佳时机
- en: Generate individual codes to be sent to potential customers
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成要发送给潜在客户的个人代码
- en: Send the codes directly to users over their preferred channel, text message
    or email
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直接通过用户首选的渠道，短信或电子邮件，发送代码
- en: Collect the results of the campaign
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集广告活动的结果
- en: Generate a sales report with analysis of the results
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成带有结果分析的销售报告
- en: This recipe shows step 4 of the campaign.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方展示了广告活动的第4步。
- en: After sending the information to users, we need to collect the sales log from
    the shops to monitor how it is going and how big the campaign's impact is.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 向用户发送信息后，我们需要收集商店的销售日志，以监控情况和广告活动的影响有多大。
- en: The sales logs are reported as individual files from each of the associated
    shops, so in this recipe we'll see how to aggregate all the info into a spreadsheet
    to be able to treat the information as a whole.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 销售日志作为与各个关联商店的单独文件报告，因此在这个配方中，我们将看到如何将所有信息汇总到一个电子表格中，以便将信息作为一个整体处理。
- en: Getting ready
  id: totrans-203
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 做好准备
- en: 'For this recipe, we need to install the following modules:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们需要安装以下模块：
- en: '[PRE17]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We can obtain a test structure and test logs for this recipe from GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales](https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales).
    Please download the full `sales` directory, which contains a lot of test logs. To
    display the structure, we'll use the `tree` command ([http://mama.indstate.edu/users/ice/tree/](http://mama.indstate.edu/users/ice/tree/)),
    which is installed by default in Linux and can be installed using `brew` in macOs
    ([https://brew.sh/](https://brew.sh/)). You can use a graphical tool to inspect
    the directory as well.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以从GitHub上获取这个配方的测试结构和测试日志：[https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales](https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales)。请下载包含大量测试日志的完整`sales`目录。为了显示结构，我们将使用`tree`命令（[http://mama.indstate.edu/users/ice/tree/](http://mama.indstate.edu/users/ice/tree/)），它在Linux中默认安装，并且可以在macOs中使用`brew`安装（[https://brew.sh/](https://brew.sh/)）。您也可以使用图形工具来检查目录。
- en: We'll also need the `sale_log.py` module and the `parse_sales_log.py` script,
    available in GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py).
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还需要`sale_log.py`模块和`parse_sales_log.py`脚本，可以在GitHub上找到：[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py)。
- en: How to do it...
  id: totrans-208
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Check the structure of the `sales` directory. Each subdirectory represents
    a shop that has submitted its sales logs for the period:'
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`sales`目录的结构。每个子目录代表一个商店提交了其销售日志的期间：
- en: '[PRE18]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Check  the log files:'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查日志文件：
- en: '[PRE19]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Call the `parse_sales_log.py` script to generate the repository:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用`parse_sales_log.py`脚本生成存储库：
- en: '[PRE20]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Check the generated Excel result, `report.xlsx`:'
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查生成的Excel结果，`report.xlsx`：
- en: '![](assets/f0a6152c-2b86-4262-9f0f-cf5283ba2602.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f0a6152c-2b86-4262-9f0f-cf5283ba2602.png)'
- en: How it works...
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Steps 1 and 2 show how the data is structured. Step 3 calls `parse_sales_log.py `
    to read all the log files and parse them, and then stores them in an Excel spreadsheet.
    The contents of the spreadsheet are displayed in step 4.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤1和2展示了数据的结构。步骤3调用`parse_sales_log.py`来读取所有日志文件并解析它们，然后将它们存储在Excel电子表格中。电子表格的内容在步骤4中显示。
- en: 'Let''s see how `parse_sales_log.py` is structured:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`parse_sales_log.py`的结构：
- en: '[PRE21]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The command line arguments are explained in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml),
    *Let Us Begin Our Automation Journey*. Note that the imports include `SaleLog`.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行参数在[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)中有解释，*让我们开始自动化之旅*。请注意，导入包括`SaleLog`。
- en: The main function walks through the whole directory and grabs all the files
    through `os.walk`. You can get more information about `os.walk` in [Chapter 2](6b1d9f13-f2de-41f1-a87b-6896ceb7b280.xhtml),
    *Automating Tasks Made Easy*. Each file is then passed to `get_logs_from_file`
    to parse its logs and add them to the global `logs` list.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 主要函数遍历整个目录并通过`os.walk`获取所有文件。您可以在[第2章](6b1d9f13-f2de-41f1-a87b-6896ceb7b280.xhtml)中获取有关`os.walk`的更多信息，*简化任务自动化*。然后将每个文件传递给`get_logs_from_file`来解析其日志并将它们添加到全局`logs`列表中。
- en: Note that the specific shop is stored in the last subdirectory, so it is extracted
    with `os.path.basename`.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，特定商店存储在最后一个子目录中，因此可以使用`os.path.basename`来提取它。
- en: Once the list of logs has been completed, a new Excel sheet is created using
    the `openpyxl` module. The `SaleLog` module has a `.row_header` method to add
    the first row, and then all the logs are converted to row format using `.row`.
    Finally, the file is saved.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 完成日志列表后，使用`openpyxl`模块创建一个新的Excel表。`SaleLog`模块有一个`.row_header`方法来添加第一行，然后所有日志都被转换为行格式使用`.row`。最后，文件被保存。
- en: 'To parse the logs, we make a module called `sale_log.py`. This abstracts parsing
    and dealing with a row. Most of it is straightforward and it structures each of
    the different parameters properly, but the parse method requires a bit of attention:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解析日志，我们创建一个名为`sale_log.py`的模块。这个模块抽象了解析和处理一行的过程。大部分都很简单，并且正确地结构化了每个不同的参数，但是解析方法需要一点注意：
- en: '[PRE22]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '`sale_log.py` is a *classmethod*, meaning that it can be used by calling `SaleLog.parse`,
    and it returns a new element of the class.'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '`sale_log.py`是一个*classmethod*，意味着可以通过调用`SaleLog.parse`来使用它，并返回类的新元素。'
- en: Classmethodsare called with a first argument that stores the class, instead
    of the object normally stored in `self`. The convention is to use `cls` to represent
    it. Calling `cls(...) ` at the end is equivalent to `SaleFormat(...)`, so it calls
    the `__init__` method.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: Classmethods被调用时，第一个参数存储类，而不是通常存储在`self`中的对象。约定是使用`cls`来表示它。在最后调用`cls(...)`等同于`SaleFormat(...)`，因此它调用`__init__`方法。
- en: The method uses the `parse` module to retrieve the values from the template.
    Note how two elements, `timestamp` and `price`, have custom parsing. The `delorean` module helps
    us with parsing the date, and the price is better described as a `Decimal` to
    keep the proper resolution. The custom filters are applied in the `formats` argument.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法使用`parse`模块从模板中检索值。请注意，`timestamp`和`price`这两个元素具有自定义解析。`delorean`模块帮助我们解析日期，价格最好描述为`Decimal`以保持适当的分辨率。自定义过滤器应用于`formats`参数。
- en: There's more...
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The `Decimal` type is described in detail in the Python documentation here: [https://docs.python.org/3/library/decimal.html](https://docs.python.org/3/library/decimal.html).
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`Decimal`类型在Python文档中有详细描述：[https://docs.python.org/3/library/decimal.html](https://docs.python.org/3/library/decimal.html)。'
- en: The full `openpyxl` can be found here:[ https://openpyxl.readthedocs.io/en/stable/](https://openpyxl.readthedocs.io/en/stable/).
    Also, check [Chapter 6](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml), *Fun with
    Spreadsheets*, for more examples on how to use the module.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的`openpyxl`可以在这里找到：[https://openpyxl.readthedocs.io/en/stable/](https://openpyxl.readthedocs.io/en/stable/)。还要检查[第6章](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml)，*电子表格的乐趣*，以获取有关如何使用该模块的更多示例。
- en: The full `parse` documentation can be found here: [https://github.com/r1chardj0n3s/parse](https://github.com/r1chardj0n3s/parse).
    [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let Us Begin Our Automation
    Journey*, also describes this module in greater detail.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的`parse`文档可以在这里找到：[https://github.com/r1chardj0n3s/parse](https://github.com/r1chardj0n3s/parse)。[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)中也更详细地描述了这个模块。
- en: See also
  id: totrans-234
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Using a third-party tool—parse* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let
    Us Begin Our Automation Journey  *
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)中的*使用第三方工具—parse*配方，*让我们开始自动化之旅*'
- en: The *Crawling and searching directories* recipe in [Chapter 4](e8536572-46e4-41ec-87b8-7f775fd61e63.xhtml), *Searching
    and Reading Local Files*
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](e8536572-46e4-41ec-87b8-7f775fd61e63.xhtml)中的*爬取和搜索目录*配方，*搜索和读取本地文件*'
- en: The *Reading text files* recipe in [Chapter 4](e8536572-46e4-41ec-87b8-7f775fd61e63.xhtml), *Searching
    and Reading Local Files*
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](e8536572-46e4-41ec-87b8-7f775fd61e63.xhtml)中的*读取文本文件*配方，*搜索和读取本地文件*'
- en: The *Updating an Excel spreadsheet* recipe in [Chapter 6](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml), *Fun
    with Spreadsheets*
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第6章](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml)中的*更新Excel电子表格*配方，*电子表格的乐趣*'
- en: Generating a sales report
  id: totrans-239
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成销售报告
- en: 'In this chapter, we are presenting a marketing campaign divided in several
    steps:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们提出了一个分为几个步骤的营销活动：
- en: Detect the best moment to launch the campaign
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检测最佳推出活动的时机
- en: Generate individual codes to be sent to potential customers
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成个人代码以发送给潜在客户
- en: Send the codes directly to users over their preferred channel, text message
    or email
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 直接将代码通过用户首选的渠道，短信或电子邮件发送给用户
- en: Collect the results of the campaign
  id: totrans-244
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 收集活动的结果
- en: Generate a sales report with analysis of the results
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成带有结果分析的销售报告
- en: This recipe shows step 5 of the campaign.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方展示了活动的第5步。
- en: As the final step, all the information about each of the sales is aggregated
    and displayed in a sales report.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 作为最后一步，所有销售的信息都被汇总并显示在销售报告中。
- en: In this recipe, we'll see how to leverage reading from spreadsheets, creating
    PDFs, and producing graphs to generate a comprehensive report automatically in
    order to analyze the performance of our campaign.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将看到如何利用从电子表格中读取、创建PDF和生成图表，以便自动生成全面的报告，以分析我们活动的表现。
- en: Getting Ready
  id: totrans-249
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'In this recipe, we''ll require the following modules in our virtual environment:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将在虚拟环境中需要以下模块：
- en: '[PRE23]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: We'll need the `sale_log.py` module available in GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/sale_log.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/sale_log.py).
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在GitHub上的`sale_log.py`模块，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/sale_log.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/sale_log.py)。
- en: The input spreadsheet is generated in the previous recipe, preparing sales information.
    Check there for more information.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 输入电子表格是在前一个配方中生成的，准备销售信息。在那里查找更多信息。
- en: You can download the script to generate the input spreadsheet, `parse_sales_log.py`,
    from GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py).
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub上下载用于生成输入电子表格的脚本`parse_sales_log.py`，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/parse_sales_log.py)。
- en: Download the raw log files from GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales](https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales).
    Please download the full `sales` directory.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 从GitHub上下载原始日志文件，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales](https://github.com/PacktPublishing/Python-Automation-Cookbook/tree/master/Chapter09/sales)。请下载完整的`sales`目录。
- en: Download the `generate_sales_report.py` script from GitHub at [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/generate_sales_report.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/generate_sales_report.py).
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 从GitHub上下载`generate_sales_report.py`脚本，网址为[https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/generate_sales_report.py](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter09/generate_sales_report.py)。
- en: How to do it...
  id: totrans-257
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Check the input file and the use of `generate_sales_report.py`:'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查输入文件和使用`generate_sales_report.py`：
- en: '[PRE24]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Call the `generate_sales_report.py` script with the input file and an output
    file:'
  id: totrans-260
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用输入文件和输出文件调用`generate_sales_report.py`脚本：
- en: '[PRE25]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Check the `output.pdf` output file. It will contain three pages, the first
    a brief summary and the second and third graphs with the sales by day and by shop:'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查`output.pdf`输出文件。它将包含三页，第一页是简要摘要，第二页和第三页是按天和按商店的销售图表：
- en: '![](assets/d1492287-b767-48b3-b522-fa5c294f4eb2.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d1492287-b767-48b3-b522-fa5c294f4eb2.png)'
- en: 'The second page shows a graph of sales by day:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 第二页显示了每天的销售图表：
- en: '![](assets/28b396ae-1c0d-4831-b27d-843ca484f302.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/28b396ae-1c0d-4831-b27d-843ca484f302.png)'
- en: 'The third page divides the sales by shop:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 第三页按商店划分销售额：
- en: '![](assets/b3cbce7b-0a65-40b0-adff-515c6d66bee8.png)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b3cbce7b-0a65-40b0-adff-515c6d66bee8.png)'
- en: How it works
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的
- en: 'Step 1 shows how to use the script and step 2 calls it on the input file. Let''s
    take a look at the basic structure of the `generate_sales_report.py` script:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 第1步显示如何使用脚本，第2步在输入文件上调用它。让我们来看一下`generate_sales_report.py`脚本的基本结构：
- en: '[PRE26]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: There are two key elements—the aggregation of the logs in different ways (by
    shop and by day) and the generation of a summary in each case. The summary is
    generated with `generate_summary`, which, from a list of logs, generates a dictionary
    with its aggregated information. The aggregation of the logs is done in different
    styles in the `aggregate_by` functions.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个关键元素——以不同方式（按商店和按天）聚合日志以及在每种情况下生成摘要。摘要是通过`generate_summary`生成的，它从日志列表中生成一个带有聚合信息的字典。日志的聚合是在`aggregate_by`函数中以不同的样式完成的。
- en: '`generate_summary` produces a dictionary with the aggregated information, including
    start and end time, total income of all logs, total units, average discount, and
    a breakdown of the same data by product.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`generate_summary`生成一个包含聚合信息的字典，包括开始和结束时间，所有日志的总收入，总单位，平均折扣，以及相同数据按产品进行的详细分解。'
- en: The script is better understood by starting at the end. The main functions join
    all the different operations. Read each of the logs and transform them into native `SaleLog`
    objects.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 通过从末尾开始理解脚本会更好。主要函数将所有不同的操作组合在一起。读取每个日志并将其转换为本地的`SaleLog`对象。
- en: 'Then, it generates each of the pages into an intermediate PDF file:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，它将每个页面生成为一个中间的PDF文件：
- en: A brief, generated by `create_summary_brief` over a general summary of all the
    data.
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create_summary_brief`生成一个关于所有数据的总摘要。'
- en: The logs are `aggregate_by_day`. A summary is created and a graph is produced.
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志被`aggregate_by_day`。创建一个摘要并生成一个图表。
- en: The logs are `aggregate_by_shop`. A summary is created and a graph is produced.
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日志被`aggregate_by_shop`。创建一个摘要并生成一个图表。
- en: All the intermediate PDF pages are joined, using `PyPDF2`, into a single file.
    Finally, the intermediate pages are deleted.
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`PyPDF2`将所有中间PDF页面合并成一个文件。最后，删除中间页面。
- en: Both `aggregate_by_day` and `aggregate_by_shop` return a list with a summary
    of each of the elements. In `aggregate_by_day`, we detect when a day ends by using
    `.end_of_day` to differentiate one day from another.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '`aggregate_by_day`和`aggregate_by_shop`都返回一个包含每个元素摘要的列表。在`aggregate_by_day`中，我们使用`.end_of_day`来检测一天何时结束，以区分一天和另一天。'
- en: 'The `graph` function does the following:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '`graph`函数执行以下操作：'
- en: Prepares all the data that is going to be displayed. That includes the number
    of units per tag (day or shop), and the total income per tag.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备要显示的所有数据。这包括每个标签（日期或商店）的单位数量，以及每个标签的总收入。
- en: Creates a top graph with the total income, split by product into stacked bars.
    To be able to do this, at the same time the total income is calculated, the baseline
    (the position where the next stack is located) is calculated.
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个顶部图表，显示按产品分割的总收入，以堆叠条形图的形式。为了能够做到这一点，同时计算总收入时，还计算了基线（下一个堆叠位置的位置）。
- en: It divides the bottom part of the graph into as many graphs as there are products,
    and displays the number of units sold on each one, per tag (day or shop).
  id: totrans-283
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它将图表的底部部分分成与产品数量相同的图表，并显示每个标签（日期或商店）上销售的单位数量。
- en: For a better display, the graph is defined to be the size of an A4 sheet. It
    also allows us, using `skip_labels`, to print one of each *X* label on the second
    graph on the *X* axis to avoid overlapping. This is useful when displaying the
    days, and it's set to show only one label per week.
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地显示，图表被定义为A4纸的大小。它还允许我们使用`skip_labels`在第二个图表的X轴上打印每个*X*标签中的一个，以避免重叠。这在显示日期时很有用，并且设置为每周只显示一个标签。
- en: The resulting graph is saved to a file.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的图表被保存到文件中。
- en: '`create_summary_brief` uses the `fpdf` module to save a text PDF page with
    the total summary information.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_summary_brief`使用`fpdf`模块保存一个包含总摘要信息的文本PDF页面。'
- en: The template and information in `create_summary_brief` has been left deliberately
    simple to avoid complicating this recipe, but it can be complicated with better
    descriptive text and formatting. Refer to [Chapter 5](d628b5e8-8d78-4884-905c-18b393bfcb47.xhtml), *Generating Fantastic
    Reports*, for more details on how to use `fpdf`*.*
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '`create_summary_brief`中的模板和信息被故意保持简单，以避免使这个配方复杂化，但可以通过更好的描述性文本和格式进行复杂化。有关如何使用`fpdf`的更多详细信息，请参阅[第5章](d628b5e8-8d78-4884-905c-18b393bfcb47.xhtml)，“生成精彩报告”。'
- en: As shown before, the `main` function groups all the PDF pages and joins them
    into a single document, removing the intermediate pages later.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所示，`main`函数将所有PDF页面分组并合并成一个单一文档，然后删除中间页面。
- en: There's more...
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The reports included in this recipe could be expanded. For example, the average
    discount could be calculated in each of the pages and displayed as a line:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方中包含的报告可以扩展。例如，可以在每个页面中计算平均折扣，并显示为一条线：
- en: '[PRE27]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Be careful not to put too much information in a single graph, though. It may
    reduce the readability. In this case, another graph is probably a better way of
    displaying it.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 但要小心，不要在一个图表中放入太多信息。这可能会降低可读性。在这种情况下，另一个图表可能是更好的显示方式。
- en: Be careful to print the legend before creating the second axis, or it will display
    only the information on the second axis.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建第二个轴之前小心打印图例，否则它将只显示第二个轴上的信息。
- en: The size and orientation of the graphs can determine whether to use more labels
    or fewer, so they are clear and readable. This is demonstrated in the use of `skip_labels`
    to avoid clutter. Keep an eye on the resulting graphics and try to adapt to possible
    problems in that area by changing sizes or limiting labels in some cases.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 图表的大小和方向可以决定是否使用更多或更少的标签，以便清晰可读。这在使用`skip_labels`避免混乱时得到了证明。请注意生成的图形，并尝试通过更改大小或在某些情况下限制标签来适应该领域可能出现的问题。
- en: For example, a possible limit is to have no more than three products, as printing
    four graphs in the second row in our graphs will probably make the text illegible.
    Feel free to experiment and check the limits of the code.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，可能的限制是最多只能有三种产品，因为在我们的图表中打印第二行的四个图表可能会使文本难以辨认。请随意尝试并检查代码的限制。
- en: The complete `matplotlib` documentation can be found at [https://matplotlib.org/](https://matplotlib.org/).
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的`matplotlib`文档可以在[https://matplotlib.org/](https://matplotlib.org/)找到。
- en: The `delorean` documentation can be found here: [https://delorean.readthedocs.io/en/latest/](https://delorean.readthedocs.io/en/latest/).
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`delorean`文档可以在这里找到：[https://delorean.readthedocs.io/en/latest/](https://delorean.readthedocs.io/en/latest/)'
- en: All the documentation for `openpyxl` is available at [https://openpyxl.readthedocs.io/en/stable/](https://openpyxl.readthedocs.io/en/stable/).
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '`openpyxl`的所有文档都可以在[https://openpyxl.readthedocs.io/en/stable/](https://openpyxl.readthedocs.io/en/stable/)找到。 '
- en: The full documentation for the PDF manipulation modules can be found for PyPDF2
    at [https://pythonhosted.org/PyPDF2/](https://pythonhosted.org/PyPDF2/) and  for
    `pyfdf` at [https://pyfpdf.readthedocs.io/en/latest/](https://pyfpdf.readthedocs.io/en/latest/).
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: PyPDF2的PDF操作模块的完整文档可以在[https://pythonhosted.org/PyPDF2/](https://pythonhosted.org/PyPDF2/)找到，`pyfdf`的文档可以在[https://pyfpdf.readthedocs.io/en/latest/](https://pyfpdf.readthedocs.io/en/latest/)找到。
- en: This recipe makes use of different concepts and techniques that are available
    in [Chapter 5](d628b5e8-8d78-4884-905c-18b393bfcb47.xhtml), *Generating Fantastic
    Reports*, for PDF creation and manipulation, [Chapter 6](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml),
    *Fun with Spreadsheets*, for spreadsheet reading, and [Chapter 7](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml),
    *Developing Stunning Graphs*, for graph creation. Check them out to know more.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱利用了[第5章](d628b5e8-8d78-4884-905c-18b393bfcb47.xhtml)中提供的不同概念和技术，用于PDF创建和操作，《第6章](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml)中的*与电子表格玩耍*，用于电子表格阅读，以及[第7章](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml)中的*开发令人惊叹的图表*，用于图表创建。查看它们以了解更多信息。
- en: See also
  id: totrans-301
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Aggregating PDF* reports recipe in [Chapter 5](d628b5e8-8d78-4884-905c-18b393bfcb47.xhtml), *Generating
    Fantastic Reports*
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第5章](d628b5e8-8d78-4884-905c-18b393bfcb47.xhtml)中的*聚合PDF*报告食谱
- en: The *Reading an Excel* spreadsheet recipe in [Chapter 6](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml), *Fun
    with Spreadsheets*
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第6章](404a9dc7-22f8-463c-9f95-b480dc17518d.xhtml)中的*读取Excel*电子表格食谱
- en: The *Drawing stacked bars* recipe in [Chapter 7](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml),
    *Developing Stunning Graphs*
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第7章](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml)中的*绘制堆叠条形图*食谱
- en: The *Displaying multiple lines* recipe in [Chapter 7](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml), *Developing
    Stunning Graphs*
  id: totrans-305
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《开发令人惊叹的图表》第7章中的*显示多行*食谱
- en: The *Adding legends and annotations* recipe in [Chapter 7](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml), *Developing
    Stunning Graphs*
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《开发令人惊叹的图表》第7章中的*添加图例和注释*食谱
- en: The *Combining graphs* recipe in [Chapter 7](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml), *Developing
    Stunning Graphs*
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《开发令人惊叹的图表》第7章中的*组合图表*食谱
- en: The *Saving charts* recipe in [Chapter 7](2f949287-3e2a-4aaa-b59c-e2662522f2c5.xhtml), *Developing
    Stunning Graphs*
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在《开发令人惊叹的图表》第7章中的*保存图表*食谱
