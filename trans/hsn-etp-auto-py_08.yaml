- en: Preparing a Lab Environment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备实验室环境
- en: 'In this chapter, we will set a lab up by using two popular Linux distributions:
    CentOS and Ubuntu. CentOS is a community-driven Linux operating system that targets
    enterprise servers, and it''s known for its compatibility with **Red Hat Enterprise
    Linux** (**RHEL**). Ubuntu is another Linux distribution that is based on the
    famous Debian operating system; it''s currently developed by Canonical Ltd., which
    provides it with commercial support.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用两个流行的Linux发行版CentOS和Ubuntu来设置实验室。CentOS是一个以社区驱动的Linux操作系统，面向企业服务器，并以其与**Red
    Hat Enterprise Linux**（**RHEL**）的兼容性而闻名。Ubuntu是另一个基于著名的Debian操作系统的Linux发行版；目前由Canonical
    Ltd.开发，并为其提供商业支持。
- en: We will also learn how to install both Linux distributions with a free and open
    software called **Cobbler,** which will automatically boot the server with a Linux
    image and customize it using the `kickstart` for CentOS and Anaconda for Debian-based
    system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将学习如何使用名为**Cobbler**的免费开源软件安装这两个Linux发行版，它将使用`kickstart`为CentOS自动引导服务器并使用Anaconda为基于Debian的系统进行自定义。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Getting the Linux operating system
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取Linux操作系统
- en: Creating an automation machine on a hypervisor
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在hypervisor上创建一个自动化机器
- en: Getting started with Cobbler
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始使用Cobbler
- en: Getting the Linux operating system
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取Linux操作系统
- en: In the next sections, we are going to create two Linux machines, CentOS and
    Ubuntu, on different hypervisors. The machines will serve as the automation server
    in our environment.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的章节中，我们将在不同的hypervisors上创建两台Linux机器，CentOS和Ubuntu。这些机器将作为我们环境中的自动化服务器。
- en: Downloading CentOS
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载CentOS
- en: 'CentOS binaries can be downloaded through multiple methods. You can download
    them directly from multiple FTP servers around the world, or you can download
    them as torrents, from people who seed them. Also, CentOS is available in two
    flavors:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS二进制文件可以通过多种方法下载。您可以直接从世界各地的多个FTP服务器下载它们，也可以从种子人员那里以种子方式下载它们。此外，CentOS有两种版本：
- en: 'Minimal ISO: Provides the basic server, with essential packages'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Minimal ISO：提供基本服务器和必要软件包
- en: 'Everything ISO: Provides the server and all available packages from the main
    repositories'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Everything ISO：提供服务器和主要存储库中的所有可用软件包
- en: 'First, head to the CentOS project link ([https://www.centos.org/](https://www.centos.org/))
    and click on the Get CentOS Now button, as shown in the following screenshot:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，前往CentOS项目链接（[https://www.centos.org/](https://www.centos.org/)）并单击获取CentOS现在按钮，如下截图所示：
- en: '![](../images/00126.jpeg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00126.jpeg)'
- en: Then, choose the minimal ISO image, and download it from any available download
    site.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，选择最小的ISO镜像，并从任何可用的下载站点下载它。
- en: CentOS is available for multiple cloud providers, such as Google, Amazon, Azure,
    and Oracle Cloud. You can find all of the cloud images at [https://cloud.centos.org/centos/7/images/](https://cloud.centos.org/centos/7/images/).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: CentOS可用于多个云提供商，如Google、Amazon、Azure和Oracle Cloud。您可以在[https://cloud.centos.org/centos/7/images/](https://cloud.centos.org/centos/7/images/)找到所有云镜像。
- en: Downloading Ubuntu
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载Ubuntu
- en: 'Ubuntu is widely known for providing a good desktop experience to end users.
    Canonical (the Ubuntu developers) work with many server vendors to certify Ubuntu
    on different hardware. Canonical also provide a server version for Ubuntu, which
    offers as many features as in 16.04, such as:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Ubuntu以为为向最终用户提供良好的桌面体验而广为人知。Canonical（Ubuntu开发者）与许多服务器供应商合作，以在不同的硬件上认证Ubuntu。Canonical还为Ubuntu提供了一个服务器版本，其中包括16.04中的许多功能，例如：
- en: Support from Canonical until 2021
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Canonical将在2021年之前提供支持
- en: Ability to run on all major architectures—x86, x86-64, ARM v7, ARM64, POWER8,
    and IBM s390x (LinuxONE)
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 能够在所有主要架构上运行-x86、x86-64、ARM v7、ARM64、POWER8和IBM s390x（LinuxONE）
- en: Support for ZFS, a next generation volume management filesystem ideal for servers
    and containers
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ZFS支持，这是一种适用于服务器和容器的下一代卷管理文件系统
- en: LXD Linux container hypervisor enhancements, including QoS and resource controls
    (CPU, memory, block I/O, and storage quota)
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LXD Linux容器hypervisor增强，包括QoS和资源控制（CPU、内存、块I/O和存储配额）
- en: Installation snaps, for simple application installation and release management.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装snaps，用于简单的应用程序安装和发布管理。
- en: First production release of DPDK—line speed kernel networking
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: DPDK的首个生产版本-线速内核网络
- en: Linux 4.4 kernel and `systemd` service manager
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux 4.4内核和`systemd`服务管理器
- en: Certification as a guest on AWS, Microsoft Azure, Joyent, IBM, Google Cloud
    Platform, and Rackspace
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 作为AWS、Microsoft Azure、Joyent、IBM、Google Cloud Platform和Rackspace上的客户进行认证
- en: Updates for Tomcat (v8), PostgreSQL (v9.5), Docker v (1.10), Puppet (v3.8.5),
    QEMU (v2.5), Libvirt (v1.3.1), LXC (v2.0), MySQL (v5.6), and more
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tomcat（v8）、PostgreSQL（v9.5）、Docker v（1.10）、Puppet（v3.8.5）、QEMU（v2.5）、Libvirt（v1.3.1）、LXC（v2.0）、MySQL（v5.6）等的更新
- en: 'You can download the Ubuntu LTS by browsing to [https://www.ubuntu.com/download/server](https://www.ubuntu.com/download/server) and
    choosing Ubuntu 16.04 LTS:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过浏览至[https://www.ubuntu.com/download/server](https://www.ubuntu.com/download/server)并选择Ubuntu
    16.04 LTS来下载Ubuntu LTS：
- en: '![](../images/00127.jpeg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00127.jpeg)'
- en: Creating an automation machine on a hypervisor
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在hypervisor上创建一个自动化机器
- en: After downloading the ISO files, we will create a Linux machine over VMware
    ESXi and KVM hypervisors.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 下载ISO文件后，我们将在VMware ESXi和KVM hypervisors上创建一个Linux机器。
- en: Creating a Linux machine over VMware ESXi
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在VMware ESXi上创建一个Linux机器
- en: 'We will use the VMware vSphere client to create a virtual machine. Log in to
    one of the available ESXi servers using root credentials. First, you will need
    to upload either the Ubuntu or CentOS ISO to the VMware data store. Then, follow
    these steps to create the machine:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用VMware vSphere客户端创建一个虚拟机。使用root凭据登录到可用的ESXi服务器之一。首先，您需要将Ubuntu或CentOS ISO上传到VMware数据存储中。然后，按照以下步骤创建机器：
- en: 'Right-click on the server name and choose New Virtual Machine:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击服务器名称，然后选择新的虚拟机：
- en: '![](../images/00128.jpeg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00128.jpeg)'
- en: 'Choose a Custom installation, so that you will have more options during the
    installation:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择自定义安装，这样您在安装过程中将有更多选项：
- en: '![](../images/00129.gif)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00129.gif)'
- en: 'Provide a name for the VM: AutomationServer.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为VM提供一个名称：AutomationServer。
- en: 'Choose the machine version: 8.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择机器版本：8。
- en: Choose the data store on which the machine will be created.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要创建机器的数据存储。
- en: 'Choose the guest operating system: either Ubuntu Linux (64-bit) or Red Hat
    version 6/7:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择客户操作系统：Ubuntu Linux（64位）或Red Hat版本6/7：
- en: '![](../images/00130.gif)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00130.gif)'
- en: The VM specification shouldn't have less than 2 vCPU and 4 GB RAM, in order
    to have efficient performance. Select them in the CPU and Memory tabs respectively.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: VM规格不应少于2个vCPU和4GB RAM，以便获得高效的性能。分别在CPU和内存选项卡中选择它们。
- en: 'In the Network tab, select two interfaces with E1000 adapters. One of these
    interfaces will connect to the internet, and the second interface will manage
    the clients:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“网络”选项卡中，选择两个带有E1000适配器的接口。其中一个接口将连接到互联网，第二个接口将管理客户端：
- en: '![](../images/00131.gif)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00131.gif)'
- en: Choose the default SCSI controller for the system. In my case, it will be LSI
    logical parallel.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择系统的默认SCSI控制器。在我的情况下，它将是LSI逻辑并行。
- en: Select a Create a new virtual disk and provide 20 GB as the disk size for the
    VM.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择创建一个新的虚拟磁盘，并为VM提供20GB的磁盘大小。
- en: 'Now the virtual machine is ready, and you can start the Linux OS installation.
    Associate the uploaded image to the CD/DVD drive, and make sure that the Connect
    at power on option is selected:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在虚拟机已准备就绪，您可以开始Linux操作系统的安装。将上传的镜像关联到CD/DVD驱动器，并确保选择“开机时连接”选项：
- en: '![](../images/00132.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00132.jpeg)'
- en: 'Once it starts running, you will be asked to choose a language:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦它开始运行，您将被要求选择一种语言：
- en: '![](../images/00133.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00133.jpeg)'
- en: Complete the CentOS/Ubuntu installation steps as usual.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 按照通常的步骤完成CentOS/Ubuntu安装。
- en: Creating a Linux machine over KVM
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在KVM上创建Linux机器
- en: 'We will use the `virt-manager` utility, available in KVM, to launch the desktop
    administration for KVM. We will then create a new VM:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用KVM中提供的`virt-manager`实用程序启动KVM的桌面管理。然后我们将创建一个新的VM：
- en: 'Here, we will choose the installation method as Local install media (ISO image
    or CDROM):'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们将选择本地安装媒体（ISO镜像或CDROM）作为安装方法：
- en: '![](../images/00134.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00134.jpeg)'
- en: 'Then, we will click on Browse and choose the previously downloaded image (CentOS
    or Ubuntu). You will notice that the KVM successfully detects the OS type and
    version:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将点击浏览并选择先前下载的镜像（CentOS或Ubuntu）。您将注意到KVM成功检测到操作系统类型和版本：
- en: '![](../images/00135.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00135.jpeg)'
- en: 'Then, we will choose the machine specifications in terms of CPUs, memory, and
    storage:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将根据CPU、内存和存储选择机器规格：
- en: '![](../images/00136.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00136.jpeg)'
- en: 'Choose the appropriate storage space for your machine:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为您的机器选择适当的存储空间：
- en: '![](../images/00137.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00137.jpeg)'
- en: 'The final step is to choose a name, and then click on the Customize Configuration
    before install option, in order to add an additional network interface to the
    automation server. Then, click on Finish:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是选择一个名称，然后点击“在安装前自定义配置”选项，以添加一个额外的网络接口到自动化服务器。然后，点击“完成”：
- en: '![](../images/00138.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00138.jpeg)'
- en: 'Another window is open, which contains all of the specs for the machine. Click
    on Add Hardware, then choose the Network:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 打开另一个窗口，其中包含机器的所有规格。点击“添加硬件”，然后选择“网络”：
- en: '![](../images/00139.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00139.jpeg)'
- en: 'We will add another network interface to communicate with the clients. The
    first network interface is using NAT to connect to the internet through the physical
    wireless NIC:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将添加另一个网络接口以与客户端通信。第一个网络接口使用NAT通过物理无线网卡连接到互联网：
- en: '![](../images/00140.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00140.jpeg)'
- en: 'Finally, click on Begin Installation on the main window so that the KVM will
    start allocating the hard disk and attaching the ISO image to the virtual machine:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在主窗口上点击“开始安装”，KVM将开始分配硬盘并将ISO镜像附加到虚拟机上：
- en: '![](../images/00141.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00141.jpeg)'
- en: 'Once it has finished, you will see the following screen:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成，您将看到以下屏幕：
- en: '![](../images/00142.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00142.jpeg)'
- en: Complete the CentOS/Ubuntu installation steps as usual.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 按照通常的步骤完成CentOS/Ubuntu安装。
- en: Getting started with Cobbler
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用Cobbler
- en: Cobbler is a piece of open source software, used for unattended network-based
    installation. It leverages multiple tools, such as DHCP, FTP, PXE, and other open
    source tools (we will explain them later), so that you will have a one-stop shop
    for automating the OS installation. The target machine (bare metal or a virtual
    machine) has to support booting from a network on its **network interface card**
    (**NIC**). This function enables the machine to send a DHCP request that hits
    the Cobbler server, which will take care of the rest.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Cobbler是一款用于无人值守网络安装的开源软件。它利用多个工具，如DHCP、FTP、PXE和其他开源工具（稍后我们将解释它们），以便您可以一站式自动安装操作系统。目标机器（裸机或虚拟机）必须支持从其**网络接口卡**（NIC）引导。此功能使机器能够发送一个DHCP请求，该请求会命中Cobbler服务器，后者将处理其余事宜。
- en: You can read more about the project on its GitHub page ([https://github.com/cobbler/cobbler](https://github.com/cobbler/cobbler)).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在其GitHub页面上阅读有关该项目的更多信息（[https://github.com/cobbler/cobbler](https://github.com/cobbler/cobbler)）。
- en: Understanding how Cobbler works
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 了解Cobbler的工作原理
- en: Cobbler depends on multiple tools to provide the **Preboot eXecution Environment** (**PXE**)
    functionality to clients. First, it depends on the DHCP service that receives
    the DHCP broadcast message from the client upon powering on; then, it replies
    with an IP address, a subnet mask, the next server (TFTP), and finally, the `pxeLinux.0`,
    which is the loader filename that the client is requesting when it initially sends
    the DHCP message to the server.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: Cobbler依赖于多个工具来为客户端提供**预引导执行环境**（PXE）功能。首先，它依赖于接收客户端开机时的DHCP广播消息的DHCP服务；然后，它会回复一个IP地址、子网掩码、下一个服务器（TFTP），最后是`pxeLinux.0`，这是客户端最初向服务器发送DHCP消息时请求的加载程序文件名。
- en: The second tool is the TFTP server that hosts `pxeLinux.0` and different distribution
    images.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个工具是TFTP服务器，它托管`pxeLinux.0`和不同的发行版镜像。
- en: The third tool is the template rendering utility. Cobbler uses `cheetah`, which
    is an open source template engine developed in Python and has its own DSL (domain
    specific language) format. We will use it to generate the `kickstart` files.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个工具是模板渲染实用程序。Cobbler使用`cheetah`，这是一个由Python开发的开源模板引擎，并且有自己的DSL（特定领域语言）格式。我们将使用它来生成`kickstart`文件。
- en: Kickstart files are used to automate the installation of Red Hat based distributions,
    like CentOS, Red Hat, and Fedora. It also has limited support for rendering the `Anaconda`
    files used for installing Debian-based systems.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Kickstart文件用于自动安装基于Red Hat的发行版，如CentOS、Red Hat和Fedora。它还有限的支持用于安装基于Debian系统的`Anaconda`文件的渲染。
- en: 'There are also additional tools. `reposync` is used to mirror an online repository
    from the internet to a local directory inside of Cobbler, making it available
    to the client. `ipmitools` remotely manages powering different server hardware
    on and off:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 还有其他附加工具。`reposync`用于将在线存储库从互联网镜像到Cobbler内的本地目录，使其对客户端可用。`ipmitools`用于远程管理不同服务器硬件的开关机：
- en: '![](../images/00143.jpeg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00143.jpeg)'
- en: 'In the following topology, Cobbler is hosted on the automation server installed
    previously, and will connect to a couple of servers. We will install Ubuntu and
    Red Hat on them, through Cobbler. The automation server has another interface
    that connects directly to the internet, in order to download some additional packages
    that are required by Cobbler, as we will see in the next section:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下拓扑中，Cobbler托管在先前安装的自动化服务器上，并将连接到一对服务器。我们将通过Cobbler在它们上安装Ubuntu和Red Hat。自动化服务器还有另一个接口直接连接到互联网，以便下载Cobbler所需的一些附加软件包，我们将在下一节中看到：
- en: '![](../images/00144.jpeg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00144.jpeg)'
- en: '| **Server** | **IP Address** |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '|**服务器**|**IP地址**|'
- en: '| Automation Server (with cobbler installed) | `10.10.10.130` |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '|自动化服务器（已安装cobbler）|`10.10.10.130`|'
- en: '| Server1 (CentOS Machine) | IP from range `10.10.10.5`-`10.10.10.10` |'
  id: totrans-88
  prefs: []
  type: TYPE_TB
  zh: '|服务器1（CentOS机器）| IP范围为`10.10.10.5`-`10.10.10.10`|'
- en: '| Server 2 (Ubuntu Machine) | IP from range `10.10.10.5`-`10.10.10.10` |'
  id: totrans-89
  prefs: []
  type: TYPE_TB
  zh: '|服务器2（Ubuntu机器）| IP范围为`10.10.10.5`-`10.10.10.10`|'
- en: Installing Cobbler on an automation server
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在自动化服务器上安装Cobbler
- en: We will start by installing some essential packages, such as `vim`, `tcpudump`
    , `wget`, and `net-tools`, on our automation server (either CentOS or Ubuntu).
    Then, we will install the `cobbler` package from the `epel` repository. Please
    note that these packages are not required for Cobbler, but we will use them to
    understand how Cobbler really works.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先在我们的自动化服务器（无论是CentOS还是Ubuntu）上安装一些基本软件包，如`vim`、`tcpudump`、`wget`和`net-tools`。然后，我们将从`epel`存储库安装`cobbler`软件包。请注意，这些软件包对于Cobbler并不是必需的，但我们将使用它们来了解Cobbler的真正工作原理。
- en: 'For CentOS, use the following command:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CentOS，请使用以下命令：
- en: '[PRE0]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For Ubuntu, use the following command:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu，请使用以下命令：
- en: '[PRE1]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Then, we need to disable the firewall. Cobbler doesn't play well with SELinux
    policies, and it's recommended to disable it, especially if you are unfamiliar
    with them. Also, we will disable `iptables` and `firewalld`, since we are in a
    lab, not production.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要禁用防火墙。Cobbler与SELinux策略不兼容，建议禁用它，特别是如果您对它们不熟悉。此外，我们将禁用`iptables`和`firewalld`，因为我们在实验室中，而不是在生产环境中。
- en: 'For CentOS, use the following command:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CentOS，请使用以下命令：
- en: '[PRE2]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For Ubuntu, use the following command:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Ubuntu，请使用以下命令：
- en: '[PRE3]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, reboot the automation server machine for the changes to take effect:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，重新启动自动化服务器机器以使更改生效：
- en: '[PRE4]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Now, we will install the `cobbler` package. The software is available in the `epel`
    repository (but we need to install it first) in the case of CentOS. Ubuntu doesn't
    have the software available in upstream repositories, so we will download the
    source code and compile it on the platform.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将安装`cobbler`软件包。该软件在`epel`存储库中可用（但我们需要先安装它）在CentOS的情况下。Ubuntu在上游存储库中没有该软件可用，因此我们将在该平台上下载源代码并进行编译。
- en: 'For CentOS, use the following command:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 对于CentOS，请使用以下命令：
- en: '[PRE5]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The current version of Cobbler, at the time of writing this book, is 2.8.2,
    which was released on September 16, 2017\. For Ubuntu, we will clone the latest
    package from the GIT repository and build it from the source:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 撰写本书时的Cobbler当前版本为2.8.2，发布于2017年9月16日。对于Ubuntu，我们将从GIT存储库克隆最新的软件包，并从源代码构建它：
- en: '[PRE6]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'After successfully installing Cobbler on our machine, we will need to customize
    it to change the default settings to adapt to our network environment. We will
    need to change the following:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 成功在我们的机器上安装Cobbler后，我们需要自定义它以更改默认设置以适应我们的网络环境。我们需要更改以下内容：
- en: Choose either the `bind` or `dnsmasq` module to manage DNS queries
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择`bind`或`dnsmasq`模块来管理DNS查询
- en: Choose either the `isc` or `dnsmaasq` module to serve incoming DHCP requests
    from clients
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择`isc`或`dnsmaasq`模块来为客户端提供传入的DHCP请求
- en: Configure the TFTP Cobbler IP address (it will usually be a static address in
    Linux).
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置TFTP Cobbler IP地址（在Linux中通常是静态地址）。
- en: Provide the DHCP range that serves the clients
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供为客户端提供DHCP范围
- en: Restart the services to apply the configuration
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动服务以应用配置
- en: 'Let''s take a step-by-step look at the configuration:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步查看配置：
- en: 'Choose `dnsmasq` as the DNS server:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`dnsmasq`作为DNS服务器：
- en: '[PRE7]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Choose `dnsmasq` for managing the DHCP service:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择`dnsmasq`来管理DHCP服务：
- en: '[PRE8]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Configure the Cobbler IP address as the TFTP server:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Cobbler IP地址配置为TFTP服务器：
- en: '[PRE9]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Also, enable PXE boot loop prevention by setting the `pxe_just_once` to `0`:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 还要通过将`pxe_just_once`设置为`0`来启用PXE引导循环预防：
- en: '[PRE10]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Add the client `dhcp-range` in the `dnsmasq` service template:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`dnsmasq`服务模板中添加客户端`dhcp-range`：
- en: '[PRE11]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Note the line that says `dhcp-option=66,$next_server`. This means that Cobbler
    will pass `next_server`, previously configured in the settings as the TFTP boot
    server, to any clients requesting an IP address through the DHCP service provided
    by `dnsmasq`.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 注意其中一行写着`dhcp-option=66,$next_server`。这意味着Cobbler将把之前在设置中配置为TFTP引导服务器的`next_server`传递给通过`dnsmasq`提供的DHCP服务请求IP地址的任何客户端。
- en: 'Enable and restart the services:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用并重新启动服务：
- en: '[PRE12]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Provisioning servers through Cobbler
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Cobbler提供服务器
- en: 'We are now a few steps away from having our first server up and running through
    Cobbler. Basically, we need to tell Cobbler our clients'' MAC addresses and which
    operating systems they have:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们离通过Cobbler使我们的第一台服务器运行起来只有几步之遥。基本上，我们需要告诉Cobbler我们客户端的MAC地址以及它们使用的操作系统：
- en: 'Import the Linux ISO. Cobbler will automatically analyze the image and create
    a profile for it:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导入Linux ISO。Cobbler将自动分析映像并为其创建一个配置文件：
- en: '[PRE13]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You may need to mount the Linux ISO image before importing it to a mount point,
    by using `mount -O loop /root/<image_iso>  /mnt/cobbler_images/`.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在将其导入到挂载点之前，您可能需要挂载Linux ISO映像，使用`mount -O loop /root/<image_iso>  /mnt/cobbler_images/`。
- en: 'You can run the `cobbler profile report` command to check the created profile:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以运行`cobbler profile report`命令来检查创建的配置文件：
- en: '[PRE14]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You can see that the `import` command filled many fields automatically, such
    as `Kickstart`, `RAM`, `operating system`, and the `initrd/kernel` file locations.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到`import`命令自动填充了许多字段，如`Kickstart`、`RAM`、`操作系统`和`initrd/kernel`文件位置。
- en: 'Add any additional repositories to the profile (optional):'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向配置文件添加任何额外的存储库（可选）：
- en: '[PRE15]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Now, edit the profile, and add the created repository to the list of available
    repositories:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，编辑配置文件，并将创建的存储库添加到可用存储库列表中：
- en: '[PRE16]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add a client MAC address and link it to the created profile:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加客户端MAC地址并将其链接到创建的配置文件：
- en: '[PRE17]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `--hostname` field corresponds to the local system name and configures the
    client networking using the `--ip-address`, `--subnet`, and `--gateway` options.
    This will make Cobbler generate a `kickstart` file with these options.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`--hostname`字段对应于本地系统名称，并使用`--ip-address`、`--subnet`和`--gateway`选项配置客户端网络。这将使Cobbler生成一个带有这些选项的`kickstart`文件。'
- en: If you need to customize the server and add additional packages, configure firewall,
    ntp, and configure partitions and hard disk layout then you can add these settings
    to the `kickstart` file. Cobbler provide sample file under  `/var/lib/cobbler/kickstarts/sample.ks`,
    which you can copy to another folder and provide in the `--kickstart` parameter
    in the previous command.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要自定义服务器并添加额外的软件包、配置防火墙、ntp以及配置分区和硬盘布局，那么您可以将这些设置添加到`kickstart`文件中。Cobbler在`/var/lib/cobbler/kickstarts/sample.ks`下提供了示例文件，您可以将其复制到另一个文件夹，并在上一个命令中提供`--kickstart`参数。
- en: You can integrate Ansible inside the `kickstart` file by running Ansible in
    pull mode (instead the default push mode). Ansible will download the playbook
    from an online GIT repository (such as GitHub or GitLab) and will execute it after
    that.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过在`kickstart`文件中运行Ansible来将Ansible集成到其中，使用拉模式（而不是默认的推送模式）。Ansible将从在线GIT存储库（如GitHub或GitLab）下载playbook，并在此之后执行它。
- en: 'Instruct Cobbler to generate the configuration files required to serve our
    client and to update the internal database with the new information by using the
    following commands:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下命令指示Cobbler生成为我们的客户端提供服务所需的配置文件，并使用新信息更新内部数据库：
- en: '[PRE18]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Once you have started the CentOS client, you will notice that it goes to the
    PXE process and sends a DHCP message over `PXE_Network`. Cobbler will respond
    with an IP address, a `PXELinux0` file, and the required image assigned to that
    MAC address:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您启动了CentOS客户端，您将注意到它进入PXE过程并通过`PXE_Network`发送DHCP消息。Cobbler将以MAC地址分配一个IP地址、一个`PXELinux0`文件和所需的镜像来响应：
- en: '![](../images/00145.jpeg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00145.jpeg)'
- en: 'After Cobbler finishes the CentOS installation, you will see the hostname correctly
    configured in the machine:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在Cobbler完成CentOS安装后，您将看到主机名在机器中正确配置：
- en: '![](../images/00146.jpeg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](../images/00146.jpeg)'
- en: You can go through the same steps for an Ubuntu machine.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为Ubuntu机器执行相同的步骤。
- en: Summary
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned how to prepare a lab environment by installing
    two Linux machines (CentOS and Ubuntu) over a hypervisor. We then explored automation options,
    and sped up server deployment by installing Cobbler.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您学习了如何通过在虚拟化程序上安装两台Linux机器（CentOS和Ubuntu）来准备实验室环境。然后，我们探讨了自动化选项，并通过安装Cobbler加快了服务器部署速度。
- en: In the next chapter, you will learn how to send commands from a Python script
    directly to an operating system shell and investigate the output returned.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何从Python脚本直接向操作系统shell发送命令并调查返回的输出。
