["```py\ndef f(x):\n\u00a0\u00a0\u00a0\u00a0return x ** 2\n```", "```py\nprint(f(2))\nprint(f(-3))\n```", "```py\nx = np.linspace(-10, 10, 1000)\n```", "```py\nplt.plot(x, x + 1)\nplt.show()\n```", "```py\n    import numpy as np\n    import matplotlib.pyplot as plt\n    x = np.linspace(-5, 5, 1000)\n    plt.plot(\n    \u00a0\u00a0\u00a0\u00a0x,  # evenly spaced numbers in the x-axis\n    \u00a0\u00a0\u00a0\u00a0np.ones(1000) * 2  # all 2s in the y-axis\n    )\n    plt.show()\n    ```", "```py\n    plt.plot(x, x)\n    plt.show()\n    ```", "```py\nplt.plot(x, x ** 2)\nplt.show()\n```", "```py\n    import numpy as np\n    import matplotlib.pyplot as plt\n    x = np.linspace(-5, 5, 1000)\n    plt.plot(x, x ** 3 - x, c='blue')  \n    plt.plot(x, (x + 2) ** 3 - (x + 2), c='red')  \n    plt.ylim(-5, 5)\n    plt.show()\n    ```", "```py\n    plt.plot(x, x ** 3 - x, c='blue')  # original func\n    plt.plot(x, (x - 2) ** 3 - (x - 2) + 2, c='red')  # transformed func\n    plt.ylim(-5, 5)\n    plt.show()\n    ```", "```py\n    plt.plot(x, np.sin(x), c='blue')  # original func\n    plt.plot(x, np.sin(x) * 2, c='red')  # transformed func\n    plt.ylim(-5, 5)\n    plt.show()\n    ```", "```py\nplt.plot(x, np.sin(x), c='blue')  # original func\nplt.plot(x, np.sin(x * 2), c='red')  # transformed func\nplt.ylim(-5, 5)\nplt.show()\n```", "```py\n$ pip install sympy\n$ conda install sympy\n```", "```py\nfrom sympy import Symbol\nx = Symbol('x')\n```", "```py\nfrom sympy.solvers import solve\nsolve(x ** 3 - 7 * x ** 2 + 15 * x - 9, x)\n```", "```py\nfrom math import e\nsolve(3 * e ** (x + 2) + 3 - 2 * (e ** x + 100), x)\n```", "```py\n[2.27914777845756]\n```", "```py\n    import numpy as np\n    import matplotlib.pyplot as plt\n    from sympy.solvers import solve\n    from sympy import Symbol\n    ```", "```py\n    x = Symbol('x')\n    sols = solve(8.99 * x - 6.56 * x - 1312.13, x)\n    ```", "```py\n    xs = np.linspace(0, 1000, 1000)\n    plt.plot(xs, 2.43 * xs - 1312.13)\n    plt.axhline(0, c='k')\n    plt.show()\n    ```", "```py\n    sols1 = solve(400 * x - 3936.13, x)\n    sols1\n    ```", "```py\n    xs = np.linspace(0, 10, 1000)\n    plt.plot(xs, 400 * xs - 3936.13)\n    plt.axhline(0, c='k')\n    plt.show()\n    ```", "```py\n    import numpy as np\n    from numpy.linalg import inv\n    ```", "```py\n    def solve_eq_sys(coeff_matrix, c):\n    ```", "```py\n    inv_matrix = inv(coeff_matrix)\n    ```", "```py\n    return inv_matrix.dot(c)\n    ```", "```py\n    def solve_eq_sys(coeff_matrix, c):\n    \u00a0\u00a0\u00a0\u00a0inv_matrix = inv(coeff_matrix)\n    \u00a0\u00a0\u00a0\u00a0return inv_matrix.dot(c)\n    ```", "```py\n    coeff_matrix = np.array([[1, 3, -2],\\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[3, 5, 6],\\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[2, 4, 3]])\n    c = np.array([1, 31, 19])\n    solve_eq_sys(coeff_matrix, c)\n    ```", "```py\n    array([1., 2., 3.])\n    ```", "```py\n    inv(np.array([[1, 3, -2],\\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[3, 5, 6],\\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 [2, 6, -4]]))\n    ```", "```py\n    from numpy.linalg import inv, LinAlgError\n    ```", "```py\n    def solve_eq_sys(coeff_matrix, c):\n    \u00a0\u00a0\u00a0\u00a0try:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0inv_matrix = inv(coeff_matrix)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return inv_matrix.dot(c)\n    \u00a0\u00a0\u00a0\u00a0except LinAlgError:\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return False\n    ```", "```py\n    coeff_matrix = np.array([[1, 3, -2],\\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[3, 5, 6],\\\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0[2, 6, -4]])\n    c = np.array([1, 31, 19])\n    solve_eq_sys(coeff_matrix, c)\n    ```", "```py\nx = Symbol('x')\ny = Symbol('y')\n```", "```py\nsolve([x + y - 5, x ** 2 - x + 2 * y - 8],\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x, y)\n```", "```py\nsolve([x ** 2 - 2 * x - y ** 2 + 1, x ** 2 - 2 * y - 1],\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x, y)\n```"]