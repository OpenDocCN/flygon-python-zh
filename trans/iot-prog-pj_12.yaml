- en: Enhancing Our IoT Doorbell
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 增强我们的物联网门铃
- en: In [Chapter 10](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml), *Publishing to
    Web Services*, we explored web services. We then introduced Bluetooth in [Chapter
    11](1668a45a-408f-4732-8643-623297983690.xhtml), *Creating a Doorbell Button Using
    Bluetooth*, and built a Bluetooth doorbell using the Android app Blue Dot and
    our Raspberry Pi.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第10章](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml)中，我们探索了网络服务。然后在[第11章](1668a45a-408f-4732-8643-623297983690.xhtml)中引入了蓝牙，并使用Android应用蓝点和我们的树莓派构建了蓝牙门铃。
- en: In this chapter, we will enhance our Bluetooth doorbell by adding the ability
    to send messages when someone is at the door. We will take what we've learned,
    and apply it to add text message functionality using the Twilio account we set
    up in [Chapter 10](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml), *Publishing to
    Web Services*.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过添加在有人敲门时发送短信的功能来增强我们的蓝牙门铃。我们将运用所学知识，并使用我们在[第10章](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml)中设置的Twilio账户，添加短信功能。
- en: 'The following topics will be be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Sending a text message when someone is at the door
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有人敲门时发送短信
- en: Creating a secret doorbell application with text messaging
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个带有短信功能的秘密门铃应用
- en: Project overview
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目概述
- en: 'For the two projects in this chapter, we will use the circuit from [Chapter
    11](1668a45a-408f-4732-8643-623297983690.xhtml), *Creating a Doorbell Button Using
    Bluetooth*. We will also make use of the Blue Dot app for Android devices as described
    in [Chapter 11](1668a45a-408f-4732-8643-623297983690.xhtml), *Creating a Doorbell
    Button Using Bluetooth*. The following is a diagram of the application we will
    create in this chapter:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的两个项目中，我们将使用[第11章](1668a45a-408f-4732-8643-623297983690.xhtml)中的电路，同时还将使用Android设备上的蓝点应用，如[第11章](1668a45a-408f-4732-8643-623297983690.xhtml)中所述。以下是本章中我们将创建的应用的图表：
- en: '![](assets/48881639-1b37-4934-880b-12c34b044a47.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/48881639-1b37-4934-880b-12c34b044a47.png)'
- en: We will create two versions of this application. The first version of our application
    will be a simple Bluetooth doorbell, where pressing the blue dot fires off the
    buzzer and RGB LED light show. After the alarm has been triggered, a text message
    will be sent using Twilio Cloud Services.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建这个应用的两个版本。我们的应用的第一个版本将是一个简单的蓝牙门铃，按下蓝点会触发蜂鸣器和RGB LED灯光秀。警报触发后，将使用Twilio云服务发送一条短信。
- en: An altered version of the application will use swiping gestures on the Blue
    Dot app to indicate particular visitors. Each of the four potential visitors will
    have their own unique swiping gesture with the blue dot. After the custom buzzer
    ring and RGB LED light show, a text message will be sent informing the recipient
    of who is at the door. The Twilio Cloud will be used for this as well.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序的修改版本将使用蓝点应用上的滑动手势来指示特定的访客。四位潜在的访客将各自拥有自己独特的蓝点滑动手势。在自定义蜂鸣器响铃和RGB LED灯光秀之后，将发送一条文本消息通知收件人门口有谁。Twilio云也将用于此功能。
- en: Both projects should take a morning or afternoon to complete.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个项目应该需要一个上午或一个下午的时间来完成。
- en: Getting started
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: 'The following is required to complete this project:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此项目需要以下步骤：
- en: Raspberry Pi Model 3 (2015 model or newer)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派3型（2015年或更新型号）
- en: USB power supply
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB电源适配器
- en: Computer monitor
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算机显示器
- en: USB keyboard
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB键盘
- en: USB mouse
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB鼠标
- en: Breadboard
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面包板
- en: Jumper wires
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳线线
- en: 330 Ohm resistors (3 of them)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 330欧姆电阻（3个）
- en: RGB LED
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RGB LED
- en: Active buzzer
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有源蜂鸣器
- en: Android device (phone/tablet)
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android设备（手机/平板）
- en: Sending a text message when someone is at the door
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 有人敲门时发送短信
- en: In [Chapter 10](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml), *Publishing to
    Web Services*, we created text messages using a technology called Twilio. In that
    instance, we used Twilio to send text messages when an intruder was detected.
    In [Chapter 11](1668a45a-408f-4732-8643-623297983690.xhtml), *Creating a Doorbell
    Button Using Bluetooth*, we created a Bluetooth doorbell using the Blue Dot app
    on an Android phone or tablet. The doorbell sounded a buzzer and gave a little
    light show on an RGB LED.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第10章](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml)中，我们使用了一种叫做Twilio的技术来创建文本消息。在那个例子中，我们使用Twilio在检测到入侵者时发送文本消息。在[第11章](1668a45a-408f-4732-8643-623297983690.xhtml)中，我们使用了Android手机或平板上的蓝点应用创建了一个蓝牙门铃。门铃响起蜂鸣器，并在RGB
    LED上进行了一些灯光秀。
- en: For this project, we will combine Twilio with the Bluetooth doorbell, and have
    a text message sent when someone pushes the Blue Dot doorbell (refer to [Chapter
    10](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml), *Publishing to Web Services*,
    and [Chapter 11](1668a45a-408f-4732-8643-623297983690.xhtml), *Creating a Doorbell
    Button Using Bluetooth*, to familiarize yourself with these technologies).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，我们将结合Twilio和蓝牙门铃，当有人按下蓝点门铃时，将发送一条短信（参考[第10章](6c15e05d-c6f4-48b4-9279-704320035b8a.xhtml)和[第11章](1668a45a-408f-4732-8643-623297983690.xhtml)，熟悉这些技术）。
- en: Creating a simple doorbell application with text messaging
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个带有短信功能的简单门铃应用
- en: 'To create our simple doorbell application do the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建我们的简单门铃应用，请执行以下操作：
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单 | 编程 | Thonny Python IDE中打开Thonny
- en: Click on the New icon to create a new file
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“新建”图标创建一个新文件
- en: 'Type the following:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下内容：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Save the file as `Doorbell.py` and run it
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`Doorbell.py`并运行
- en: Open up the Blue Dot app on your Android device
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Android设备上打开蓝点应用
- en: Connect to the Raspberry Pi
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到树莓派
- en: Push the big blue dot
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下大蓝点
- en: 'You should hear the ring and see the light sequence cycle twice, with a short
    delay between rings. You should get something similar to the following printed
    in the shell:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该听到铃声并看到灯光序列循环两次，两次之间有短暂的延迟。你应该在shell中得到类似以下的输出：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The first three lines indicate that the Blue Dot app has connected to our Raspberry
    Pi through our Python program. The last line indicates that a text message was
    sent. As we are using the test environment, an actual text message was not sent,
    but the Twilio service was called.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 前三行表示Blue Dot应用程序已通过我们的Python程序连接到我们的Raspberry Pi。最后一行表示已发送了一条短信。由于我们使用的是测试环境，实际上没有发送短信，但是调用了Twilio服务。
- en: Let's take a look at the code. We start by defining our class and giving it
    the name `Doorbell`. This is a good name for our class, as we have written our
    code such that everything to do with a doorbell is contained in `Doorbell.py` file.
    This file holds both the `Doorbell` class, used to alert a user, as well as the
    Blue Dot code, used to trigger the doorbell. The Blue Dot code actually sits outside
    of the `Doorbell` class definition, as we view it as part of the Blue Dot app,
    not the doorbell itself. We certainly could have designed our code such that the `Doorbell`
    class contains code to trigger the alarm; however, this separation of the alarm
    from the alarm trigger makes it easier to reuse the `Doorbell` class as an alerting
    mechanism in the future.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看代码。我们首先定义了我们的类，并给它命名为`Doorbell`。这是我们类的一个很好的名字，因为我们已经编写了我们的代码，使得一切与门铃有关的东西都包含在`Doorbell.py`文件中。这个文件包含了`Doorbell`类，用于提醒用户，以及Blue
    Dot代码，用于触发门铃。Blue Dot代码实际上位于`Doorbell`类定义之外，因为我们认为它是Blue Dot应用的一部分，而不是门铃本身。我们当然可以设计我们的代码，使得`Doorbell`类包含触发警报的代码；然而，将警报与警报触发器分开使得在将来更容易重用`Doorbell`类作为警报机制。
- en: 'Choosing class names can be tricky. However, it is very important to choose
    the correct class name, as it will make it easier to build your application with
    class names that fit the purpose they are intended for. Class names are usually
    nouns, and the methods inside the classes are verbs. Generally, it is better to
    have a class represent one thing or idea. For example, we named our class `Doorbell`,
    as we have designed it to encapsulate what a doorbell does: alert the user that
    someone is at the door. Taking that idea into account, it makes sense that the `Doorbell`
    class would contain code to light up an LED, sound a buzzer, and send a text message,
    as those three actions fall under the idea of alerting a user.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 选择类名可能有些棘手。然而，选择正确的类名非常重要，因为使用适合其预期用途的类名将更容易构建应用程序。类名通常是名词，类中的方法是动词。通常，最好让一个类代表一件事或一个想法。例如，我们将我们的类命名为`Doorbell`，因为我们已经设计它来封装门铃的功能：提醒用户有人在门口。考虑到这个想法，`Doorbell`类包含点亮LED、发出蜂鸣器声音和发送短信的代码是有意义的，因为这三个动作都属于提醒用户的想法。
- en: 'After we define our class, we create class variables that are used in our class
    as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们定义了我们的类之后，我们创建了以下用于我们类的类变量：
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The `init` and `setEnvironment` methods set the variables we use in our class.
    The `test_env` variable determines whether we use the Twilio test or live environments
    in our code. The test environment is used by default:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`init`和`setEnvironment`方法设置了我们在类中使用的变量。`test_env`变量确定我们在代码中使用Twilio测试环境还是实时环境。测试环境是默认使用的：'
- en: '[PRE3]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The `doorbell_sequence`, `sendTextMessage`, and `light_show` methods are similar
    to methods we've covered previously in this book. It is through these three methods
    that we alert a user that someone is at the door. Of note here is the return value
    sent from the `sendTextMessage` method: `return 'Doorbell text message sent -
    ' + message.sid`. By having this in the code, we are able to use the `sendTextMessage` method to
    provide a printed confirmation in our shell that a text message has been sent.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`doorbell_sequence`、`sendTextMessage`和`light_show`方法与本书先前介绍的方法类似。通过这三种方法，我们通知用户有人在门口。这里需要注意的是从`sendTextMessage`方法发送的返回值：`return
    ''Doorbell text message sent - '' + message.sid`。通过在代码中加入这一行，我们能够使用`sendTextMessage`方法在我们的shell中提供一个打印确认，即已发送了一条短信。'
- en: 'As mentioned previously, the Blue Dot portion of our code sits outside of the
    class definition:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们的代码中的Blue Dot部分位于类定义之外：
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The previous code is something we've seen before. We define the `pressed` method, where
    we instantiate a new `doorbell` object, and then call the `doorbell_sequence`
    method of `doorbell`. The `blue_dot` variable is a `BlueDot` object, where we
    are only concerned with the `when_pressed` event.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码是我们以前见过的。我们定义了`pressed`方法，在这里我们实例化了一个新的`doorbell`对象，然后调用了`doorbell`的`doorbell_sequence`方法。`blue_dot`变量是一个`BlueDot`对象，我们只关心`when_pressed`事件。
- en: 'Of note here is the line containing the `doorbell = Doorbell(2, 0.5, ''There
    is someone at the door'')` statement. In this line, we instantiate a `Doorbell`
    object, which we call `doorbell`, with `num_of_rings` equal to `2`; `ring_delay`
    (or duration) equal to `0.5`; and a message equal to `There is someone at the
    door`. We do not pass in a `test_env` environment value. Thus, the default setting
    of `True` is used to set our `doorbell` object to use the Twilio test environment,
    where no text message is sent. To change it so that a text message will be sent,
    change the statement to this:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这里需要注意的是包含`doorbell = Doorbell(2, 0.5, 'There is someone at the door')`语句的那一行。在这一行中，我们实例化了一个`Doorbell`对象，我们称之为`doorbell`，`num_of_rings`等于`2`；`ring_delay`（或持续时间）等于`0.5`；消息等于`门口有人`。我们没有传递`test_env`环境值。因此，默认设置为`True`，用于设置我们的`doorbell`对象使用Twilio测试环境，不发送短信。要更改为发送短信，将语句更改为：
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Make sure that you set up the Twilio account parameters accordingly. You should
    get a text message on your cell phone telling you that someone is at the door.
    The following is the message I received on my iPhone:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您相应地设置了Twilio帐户参数。您应该收到一条短信，告诉您有人在门口。以下是我在iPhone上收到的消息：
- en: '![](assets/1d69e13e-94fe-4952-8dc1-998cca3258f9.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1d69e13e-94fe-4952-8dc1-998cca3258f9.png)'
- en: Creating a secret doorbell application with text messaging
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个带有短信功能的秘密门铃应用程序
- en: 'Now that we have the ability to send a text message whenever someone pushes
    the big blue button on our Android device, let''s make it a bit more complicated.
    We will modify the `SecretDoorbell` class we created in [Chapter 11](1668a45a-408f-4732-8643-623297983690.xhtml), *Creating
    a Doorbell Button Using Bluetooth*, and give it the ability to send text messages
    telling us who is at the door. Like we did previously, we will put all our code
    into one file to keep it compact:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有能力在安卓设备上的大蓝色按钮被按下时发送文本消息，让我们把它变得更加复杂一些。我们将修改我们在[第11章](1668a45a-408f-4732-8643-623297983690.xhtml)中创建的`SecretDoorbell`类，*使用蓝牙创建门铃按钮*，并赋予它发送文本消息告诉我们谁在门口的能力。就像之前一样，我们将把所有的代码放在一个文件中以保持紧凑：
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单中打开Thonny | 编程 | Thonny Python IDE
- en: Click on the New icon to create a new file
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新建图标创建一个新文件
- en: 'Type the following:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入以下内容：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Save the file as `SecretDoorbell.py` and run it
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`SecretDoorbell.py`并运行它
- en: Open up the Blue Dot app on your Android device
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的安卓设备上打开蓝点应用
- en: Connect to the Raspberry Pi
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 连接到树莓派
- en: Swipe the blue dot downwards from the top position
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从顶部位置向下滑动蓝点
- en: 'You should hear the buzzer sound once for about three seconds, and see the
    RGB LED perform its light show once. Something similar to the following will be
    displayed at the bottom of the shell:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该听到蜂鸣器响一次，大约持续三秒钟，并且看到RGB LED进行一次灯光表演。在shell底部将显示类似以下内容：
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As in the previous project, we will get a message indicating that a text message
    was sent, but we will not actually receive a text message, due to being in the
    Twilio test environment
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 和之前的项目一样，我们将会收到一条文本消息已发送的消息，但实际上我们不会收到文本消息，因为我们处于Twilio测试环境中
- en: Before we get our application to send us a text message that will tell us who
    is at the door based on how they swiped, let's take a look at the code.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在让我们的应用程序根据他们的滑动给我们发送一条告诉我们门口有谁的短信之前，让我们看一下代码。
- en: 'Our `SecretDoorbell.py` file is exactly the same as our `Doorbell.py` file,
    with the exception of the following code:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的`SecretDoorbell.py`文件与我们的`Doorbell.py`文件完全相同，除了以下代码：
- en: '[PRE8]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The class, `SecretDoorbell`, is created as a subclass of `Doorbell`, thereby
    inheriting the methods from `Doorbell`. The `names` array that we created stores
    the names and ring properties associated with the names in the array. So, for
    example, the first element has the name of `Bob`, a `num_of_rings` value of `4`,
    and a `ring_delay` (duration) value of `0.5`. When this record is used in a live
    Twilio environment, you should hear the buzzer and see the RGB LED light show
    cycle four times, with a short delay between the the rings. The `init` method
    of `SecretDoorbell` collects `person_num` (or, basically, position information
    in the names array) and uses it to instantiate the `Doorbell` parent class. The
    `test_env` value is defaulted to `True`, meaning we can only turn on the live
    Twilio environment by specifically overriding this value. This keeps us from accidentally
    using up our Twilio account balance before we are ready to actually deploy the
    application.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`SecretDoorbell`类被创建为`Doorbell`的子类，从而继承了`Doorbell`的方法。我们创建的`names`数组存储了数组中的名称和与名称相关的铃声属性。例如，第一个元素的名称是`Bob`，`num_of_rings`值为`4`，`ring_delay`（持续时间）值为`0.5`。当这条记录在Twilio实时环境中使用时，您应该听到蜂鸣器响四次，并看到RGB
    LED灯光表演循环，之间有短暂的延迟。`SecretDoorbell`的`init`方法收集`person_num`（或者基本上是`names`数组中的位置信息），并用它来实例化`Doorbell`父类。`test_env`值默认为`True`，这意味着我们只能通过明确覆盖这个值来打开Twilio实时环境。这样可以防止我们在准备好部署应用程序之前意外使用完Twilio账户余额。'
- en: The Blue Dot code in our file sits outside of the `SecretDoorbell` class definition.
    We did the same in the previous project, as it allows us to keep the doorbell
    functionality separate from the doorbell trigger (the Blue Dot app on our Android
    device).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们文件中的蓝点代码位于`SecretDoorbell`类定义之外。和之前的项目一样，这样做可以让我们将门铃功能与门铃触发器（我们安卓设备上的蓝点应用）分开。
- en: In our Blue Dot code, we instantiate a `BlueDot` object that we call `blue_dot`,
    before assigning the `when_swiped` event to `swiped`. In `swiped`, we instantiate
    a `SecretDoorbell` object with the value of `0` for the `swipe.up` gesture, `1` for `swipe.down`,
    `2` for `swipe.left`, and `3` for `swipe.right`. These values correspond to the
    array positions in the names array of the `SecretDoorbell` class. We do not pass
    in a value for `test_env` when we instantiate a `SecretDoorbell` object for any
    of the gestures, thus a text message is not sent. Just as in the previous project,
    we print to the shell the successful result of running the `doorbell_sequence`
    method.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的蓝点代码中，我们实例化一个名为`blue_dot`的`BlueDot`对象，然后将`when_swiped`事件赋给`swiped`。在`swiped`中，我们实例化一个`SecretDoorbell`对象，为`swipe.up`手势赋值`0`，为`swipe.down`赋值`1`，为`swipe.left`赋值`2`，为`swipe.right`赋值`3`。这些值对应于`SecretDoorbell`类的`names`数组中的位置。我们在为任何手势实例化`SecretDoorbell`对象时不传递`test_env`的值，因此不会发送文本消息。就像之前的项目一样，我们在shell中打印`doorbell_sequence`方法运行成功的结果。
- en: 'To have a text message sent, we only have to override the default `test_env`
    value with the `False` value. We do this when we instantiate a `SecretDoorbell`
    object for our swipe gestures in the `swiped` method. Our code is designed in
    such a way that we can have a text message sent for one or many gestures. Modify
    the following `elif` statement in `swiped`:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要发送文本消息，我们只需要用`False`值覆盖默认的`test_env`值。我们在`swiped`方法中为我们的滑动手势实例化`SecretDoorbell`对象时这样做。我们的代码设计成这样的方式，我们可以为一个或多个手势发送文本消息。修改`swiped`中的以下`elif`语句：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: What we have done here, is turn on the live Twilio environment for the `swipe.down`
    gesture by overriding the `test_env` variable. The `1` value, which we instantiate
    our `SecretDoorbell` object with, corresponds to the second element in the `names`
    array in `SecretDoorbell`.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里所做的是通过覆盖`test_env`变量，为`swipe.down`手势打开了Twilio实时环境。我们为`SecretDoorbell`对象实例化时使用的`1`值对应于`SecretDoorbell`中`names`数组中的第二个元素。
- en: 'Thus, when you run the app and swipe from top to bottom on the blue dot, you should
    receive a text message from Twilio saying that Josephine is at the door, as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当你运行应用程序并在蓝点上从上向下滑动时，你应该收到来自Twilio的一条短信，内容是Josephine在门口，如下所示：
- en: '![](assets/fa0067b8-c184-4ae2-9be1-281df3a40d2f.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fa0067b8-c184-4ae2-9be1-281df3a40d2f.png)'
- en: Summary
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to add text messaging to our doorbell application.
    This creates a doorbell fit for the age of the Internet of Things. It's easy to
    see how the concept of the IoT Bluetooth doorbell could be expanded—imagine turning
    on the porch lights when someone pushes the doorbell.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何将短信功能添加到我们的门铃应用程序中。这使得门铃适应了物联网时代。很容易看出物联网蓝牙门铃的概念可以被扩展——想象一下当有人按门铃时打开门廊灯。
- en: We can also see how the Blue Dot app could be utilized in other ways as well.
    We could program a certain swiping sequence with our Blue Dot app, perhaps to
    unlock the door. Imagine not having to carry around keys!
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以看到蓝点应用程序也可以以其他方式被利用。我们可以使用蓝点应用程序编程特定的滑动序列，也许是为了解锁门。想象一下不必随身携带钥匙！
- en: This is the last chapter before we introduce our robot car. In the following
    chapters, we will take the concepts we have learned so far and apply them to a
    robot that we control through the internet.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们介绍我们的机器人车之前的最后一章。在接下来的章节中，我们将把我们迄今为止学到的概念应用到我们通过互联网控制的机器人上。
- en: Questions
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: How does the Blue Dot app connect to our Raspberry Pi?
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 蓝点应用程序如何连接到我们的树莓派？
- en: True or false? Running a message through the Twilio test environment creates
    a text message that is sent to your phone.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？通过Twilio测试环境运行消息会创建一条发送到你手机的短信。
- en: What is the name of the service we use to send text messages?
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用来发送短信的服务的名称是什么？
- en: True or false? We create our `SecretDoorbell` class as a subclass of the `Doorbell`
    class.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？我们将我们的`SecretDoorbell`类创建为`Doorbell`类的子类。
- en: What are the four Blue Dot gestures we use in our second application?
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在第二个应用程序中使用的四个蓝点手势是什么？
- en: True or false? Naming a class in a way that describes what it does makes coding
    easier.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？以描述其功能的方式命名一个类会使编码变得更容易。
- en: What is the difference between `Doorbell` and `SecretDoorbell`?
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`Doorbell`和`SecretDoorbell`之间有什么区别？'
- en: True or false? Josephine's ring pattern involves one long buzzer sound.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？Josephine的铃声模式包括一个长的蜂鸣声。
- en: True or false? You need to use an Android phone in order to receive text messages
    from our applications.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？为了从我们的应用程序接收短信，你需要使用安卓手机。
- en: How should Constance swipe the blue dot, so we know that it's her at the door?
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 康斯坦斯应该如何滑动蓝点，这样我们就知道是她在门口？
- en: Further reading
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: We touched a little on the Twilio service. However, there is still more to learn—visit [https://www.twilio.com/docs/tutorials](https://www.twilio.com/docs/tutorials)
    for more information.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍微涉及了Twilio服务。然而，还有更多需要学习的地方——访问[https://www.twilio.com/docs/tutorials](https://www.twilio.com/docs/tutorials)获取更多信息。
