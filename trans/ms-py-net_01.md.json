["```py\n$ python\nPython 2.7.12 (default, Dec 4 2017, 14:50:18)\n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> exit() \n```", "```py\n$ python3\nPython 3.5.2 (default, Nov 23 2017, 16:37:01)\n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> exit() \n```", "```py\n$ uname -a\nLinux packt-network-python 4.13.0-45-generic #50~16.04.1-Ubuntu SMP Wed May 30 11:18:27 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux \n```", "```py\nPython 3.5.2 (default, Nov 17 2016, 17:05:23)\n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for \nmore information.\n>>> print(\"hello world\")\nhello world\n>>>\n```", "```py\n# This is a comment\nprint(\"hello world\") \n```", "```py\n$ python helloworld.py\nhello world\n$\n```", "```py\n>>> a = \"networking is fun\"\n>>> b = 'DevOps is fun too'\n>>> c = \"\"\"what about coding?\n... super fun!\"\"\"\n>>>\n```", "```py\n>>> vendors = [\"Cisco\", \"Arista\", \"Juniper\"]\n>>> vendors[0]\n'Cisco'\n>>> vendors[1]\n'Arista'\n>>> vendors[2]\n'Juniper'\n```", "```py\n>>> datacenters = (\"SJC1\", \"LAX1\", \"SFO1\")\n>>> datacenters[0]\n'SJC1'\n>>> datacenters[1]\n'LAX1'\n>>> datacenters[2]\n'SFO1' \n```", "```py\n>>> a\n'networking is fun'\n>>> a[1]\n'e'\n>>> vendors\n['Cisco', 'Arista', 'Juniper']\n>>> vendors[1]\n'Arista'\n>>> datacenters\n('SJC1', 'LAX1', 'SFO1')\n>>> datacenters[1]\n'LAX1'\n>>>\n>>> a[0:2]\n'ne'\n>>> vendors[0:2]\n['Cisco', 'Arista']\n>>> datacenters[0:2]\n('SJC1', 'LAX1')\n>>>\n```", "```py\n>>> len(a)\n17\n>>> len(vendors)\n3\n>>> len(datacenters)\n3\n>>>\n>>> b = [1, 2, 3, 4, 5]\n>>> min(b)\n1\n>>> max(b)\n5\n```", "```py\n>>> a\n'networking is fun'\n>>> a.capitalize()\n'Networking is fun'\n>>> a.upper()\n'NETWORKING IS FUN'\n>>> a\n'networking is fun'\n>>> b = a.upper()\n>>> b\n'NETWORKING IS FUN'\n>>> a.split()\n['networking', 'is', 'fun']\n>>> a\n'networking is fun'\n>>> b = a.split()\n>>> b\n['networking', 'is', 'fun']\n>>>\n```", "```py\n>>> routers = ['r1', 'r2', 'r3', 'r4', 'r5']\n>>> routers.append('r6')\n>>> routers\n['r1', 'r2', 'r3', 'r4', 'r5', 'r6']\n>>> routers.insert(2, 'r100')\n>>> routers\n['r1', 'r2', 'r100', 'r3', 'r4', 'r5', 'r6']\n>>> routers.pop(1)\n'r2'\n>>> routers\n['r1', 'r100', 'r3', 'r4', 'r5', 'r6']\n```", "```py\n>>> datacenter1 = {'spines': ['r1', 'r2', 'r3', 'r4']}\n>>> datacenter1['leafs'] = ['l1', 'l2', 'l3', 'l4']\n>>> datacenter1\n{'leafs': ['l1', 'l2', 'l3', 'l4'], 'spines': ['r1',  \n'r2', 'r3', 'r4']}\n>>> datacenter1['spines']\n['r1', 'r2', 'r3', 'r4']\n>>> datacenter1['leafs']\n['l1', 'l2', 'l3', 'l4']\n```", "```py\n>>> a = \"hello\"\n>>> set(a)\n{'h', 'l', 'o', 'e'}\n>>> b = set([1, 1, 2, 2, 3, 3, 4, 4])\n>>> b\n{1, 2, 3, 4}\n>>> b.add(5)\n>>> b\n{1, 2, 3, 4, 5}\n>>> b.update(['a', 'a', 'b', 'b'])\n>>> b\n{1, 2, 3, 4, 5, 'b', 'a'}\n>>> a = set([1, 2, 3, 4, 5])\n>>> b = set([4, 5, 6, 7, 8])\n>>> a.intersection(b)\n{4, 5}\n>>> a.union(b)\n{1, 2, 3, 4, 5, 6, 7, 8}\n>>> 1 *\n{1, 2, 3}\n>>>\n```", "```py\n>>> 1 + 2\n3\n>>> 2 - 1\n1\n>>> 1 * 5\n5\n>>> 5 / 1\n5.0\n>>> 5 // 2\n2\n>>> 5 % 2\n1\n```", "```py\n>>> a = 1\n>>> b = 2\n>>> a == b\nFalse\n>>> a > b\nFalse\n>>> a < b\nTrue\n>>> a <= b\nTrue \n```", "```py\n>>> a = 'hello world'\n>>> 'h' in a\nTrue\n>>> 'z' in a\nFalse\n>>> 'h' not in a\nFalse\n>>> 'z' not in a\nTrue\n```", "```py\nif expression:\n  do something\nelif expression:\n  do something if the expression meets\nelif expression:\n  do something if the expression meets\n...\nelse:\n  statement\n```", "```py\n>>> a = 10\n>>> if a > 1:\n...   print(\"a is larger than 1\")\n... elif a < 1:\n...   print(\"a is smaller than 1\")\n... else:\n...   print(\"a is equal to 1\")\n...\na is larger than 1\n>>>\n```", "```py\nwhile expression:\n  do something\n```", "```py\n>>> a = 10\n>>> b = 1\n>>> while b < a:\n...   print(b)\n...   b += 1\n...\n1\n2\n3\n4\n5\n6\n7\n8\n9\n```", "```py\nfor i in sequence:\n  do something\n```", "```py\n>>> a = [100, 200, 300, 400]\n>>> for number in a:\n...   print(number)\n...\n100\n200\n300\n400\n```", "```py\ndef name(parameter1, parameter2):\n  statements\n  return value\n```", "```py\n>>> def subtract(a, b):\n...   c = a - b\n...   return c\n...\n>>> result = subtract(10, 5)\n>>> result\n5\n>>>\n```", "```py\n>>> class router(object):\n...   def __init__(self, name, interface_number,\nvendor):\n...     self.name = name\n...     self.interface_number = interface_number\n...     self.vendor = vendor\n...\n>>>\n```", "```py\n>>> r1 = router(\"SFO1-R1\", 64, \"Cisco\")\n>>> r1.name\n'SFO1-R1'\n>>> r1.interface_number\n64\n>>> r1.vendor\n'Cisco'\n>>>\n>>> r2 = router(\"LAX-R2\", 32, \"Juniper\")\n>>> r2.name\n'LAX-R2'\n>>> r2.interface_number\n32\n>>> r2.vendor\n'Juniper'\n>>>\n```", "```py\ndef subtract(a, b):\n  c = a - b\n  return c\n```", "```py\nPython 2.7.12 (default, Nov 19 2016, 06:48:10)\n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for  \nmore information.\n>>> import subtract\n>>> result = subtract.subtract(10, 5)\n>>> result\n5\n```", "```py\nechou@pythonicNeteng:~/Master_Python_Networking/\nChapter1$ mkdir math_stuff\nechou@pythonicNeteng:~/Master_Python_Networking/\nChapter1$ touch math_stuff/__init__.py\nechou@pythonicNeteng:~/Master_Python_Networking/\nChapter1$ tree .\n.\n\u251c\u2500\u2500 helloworld.py\n\u2514\u2500\u2500 math_stuff\n \u251c\u2500\u2500 __init__.py\n \u2514\u2500\u2500 subtract.py\n\n1 directory, 3 files\nechou@pythonicNeteng:~/Master_Python_Networking/\nChapter1$\n```", "```py\n>>> from math_stuff.subtract import subtract\n>>> result = subtract(10, 5)\n>>> result\n5\n>>>\n```"]