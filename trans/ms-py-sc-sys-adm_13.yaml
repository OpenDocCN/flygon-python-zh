- en: Building Graphical User Interfaces
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建图形用户界面
- en: In this chapter, you will study **Graphical User Interface** (**GUI**) development.
    There are various Python libraries that you can use to  make GUI. We are going
    to learn about the PyQt5 Python library for GUI creation.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习**图形用户界面**（**GUI**）开发。有各种Python库可用于创建GUI。我们将学习PyQt5 Python库用于GUI创建。
- en: 'In this chapter, you will learn the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下主题：
- en: Introduction to GUI
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GUI简介
- en: Using a library to create a GUI-based application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用库创建基于GUI的应用程序
- en: Installing and using the Apache Log Viewer app
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装和使用Apache Log Viewer应用程序
- en: Introduction to GUI
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GUI简介
- en: 'In this section, we are going to learn about GUI. Python has various frameworks
    for GUI. In this section, we are going to look at PyQt5\. PyQt5 has different
    graphics components, also known as object widgets, which can be displayed on screen
    and also interact with users. The components are listed here:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习GUI。Python有各种GUI框架。在本节中，我们将看看PyQt5。PyQt5具有不同的图形组件，也称为对象小部件，可以显示在屏幕上并与用户交互。以下是这些组件的列表：
- en: '**PyQt5 window**: The PyQt5 window will create a simple app window.'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5窗口**：PyQt5窗口将创建一个简单的应用程序窗口。'
- en: '**PyQt5 button**: The PyQt5 button is a button that causes an action whenever
    it is clicked.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5按钮**：PyQt5按钮是一个在点击时会引发动作的按钮。'
- en: '**PyQt5 textbox**: The PyQt5 textbox widget allows users to enter the text.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5文本框**：PyQt5文本框小部件允许用户输入文本。'
- en: '**PyQt5 label**: The PyQt5 label widget displays a single-line text or an image.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5标签**：PyQt5标签小部件显示单行文本或图像。'
- en: '**PyQt5 combo box**: The PyQt5 combo box widget is a combined button and a
    popup list.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5组合框**：PyQt5组合框小部件是一个组合按钮和弹出列表。'
- en: '**PyQt5 check box**: The PyQt5 check box widget is an option button that can
    be checked and unchecked.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5复选框**：PyQt5复选框小部件是一个可以选中和取消选中的选项按钮。'
- en: '**PyQt5 radio button**: The PyQt5 radio button widget is an option button that
    can be checked or unchecked. In a group of radio buttons, only one of the buttons
    can be checked at a time.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5单选按钮**：PyQt5单选按钮小部件是一个可以选中或取消选中的选项按钮。在一组单选按钮中，只能同时选中一个按钮。'
- en: '**PyQt5 message box**: The PyQt5 message box widget display a message.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5消息框**：PyQt5消息框小部件显示一条消息。'
- en: '**PyQt5 menu**: The PyQt5 menu widget gives different choices that are displayed.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5菜单**：PyQt5菜单小部件提供显示的不同选择。'
- en: '**PyQt5 table**: The PyQt5 table widget provides standard table display functionality
    for applications, which can be constructed with a number of rows and columns.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5表格**：PyQt5表格小部件为应用程序提供标准表格显示功能，可以构建具有多行和列的表格。'
- en: '**PyQt5 signals/slots**: Signals will let you react to the event that has occurred
    and slot is simply a function that gets called whenever a signal occurs.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5信号/槽**：信号将让您对发生的事件做出反应，而槽只是在信号发生时调用的函数。'
- en: '**PyQt5 layouts**: The PyQt5 layouts consist of multiple widgets.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PyQt5布局**：PyQt5布局由多个小部件组成。'
- en: 'There are several PyQt5 classes available, which are divided into different
    modules. These modules are listed here:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 有几个PyQt5类可用，分为不同的模块。这些模块在这里列出：
- en: '`QtGui`: `QtGui` contains classes for event handling, graphics, fonts, texts,
    and basic imaging.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtGui`：`QtGui`包含用于事件处理、图形、字体、文本和基本图像的类。'
- en: '`QtWidgets`: `QtWidgets` contains classes to create desktop-style user interfaces.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets`：`QtWidgets`包含用于创建桌面样式用户界面的类。'
- en: '`QtCore`: `QtCore` contains core non-GUI functionality such as time, directories,
    files, streams, URLs, data types, threads, and processes.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtCore`：`QtCore`包含核心非GUI功能，如时间、目录、文件、流、URL、数据类型、线程和进程。'
- en: '`QtBluetooth`: `QtBluetooth` contains classes for connecting with devices and
    interacting with them.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtBluetooth`：`QtBluetooth`包含用于连接设备和与其交互的类。'
- en: '`QtPositioning`: `QtPositioning` contains classes to determine the position.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtPositioning`：`QtPositioning`包含用于确定位置的类。'
- en: '`QtMultimedia`: `QtMultimedia` contains classes for APIs and multimedia content.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtMultimedia`：`QtMultimedia`包含用于API和多媒体内容的类。'
- en: '`QtNetwork`: `QtNetwork` contains classes for network programming.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtNetwork`：`QtNetwork`包含用于网络编程的类。'
- en: '`QtWebKit`: `QtWebkit` contains classes for web browser implementation.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWebKit`：`QtWebkit`包含用于Web浏览器实现的类。'
- en: '`QtXml`: `QtXml` contains classes for XML files.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtXml`：`QtXml`包含用于XML文件的类。'
- en: '`QtSql`: `QtSql` contains classes for databases.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtSql`：`QtSql`包含用于数据库的类。'
- en: The GUI is driven by the events. Now, what is an event? An event is a signal
    that indicates that something has happened in your program, for example, menu
    selection, mouse movement, or button clicks. The events are handled by functions
    and triggered when a user performs some actions on the objects. The listener will
    listen to the event and then it will invoke an event handler whenever an event
    occurs.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: GUI由事件驱动。现在，什么是事件？事件是指示程序中发生了某些事情的信号，例如菜单选择、鼠标移动或按钮点击。事件由函数处理，并在用户对对象执行某些操作时触发。监听器将监听事件，然后在事件发生时调用事件处理程序。
- en: Using a library to create a GUI-based application
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用库创建基于GUI的应用程序
- en: Now, we are actually going to use the PyQt5 library to create a simple GUI application.
    In this section, we are going to create a simple window. In that window, we will
    have one button and a label. After clicking on that button, some message will
    get printed in the label.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们实际上将使用PyQt5库创建一个简单的GUI应用程序。在本节中，我们将创建一个简单的窗口。在该窗口中，我们将有一个按钮和一个标签。单击该按钮后，标签中将打印一些消息。
- en: 'First, we will see how to create the button widget. The following line will
    create a button widget:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将看看如何创建按钮小部件。以下行将创建一个按钮小部件：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, we will see how to create a label. The following line will create a label:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看看如何创建标签。以下行将创建一个标签：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, we will see how to create the button and label and how to perform an operation
    after clicking on that button. For that, create a `print_message.py` script and
    write following code in it:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到如何创建按钮和标签，以及如何在点击按钮后执行操作。为此，创建一个`print_message.py`脚本，并在其中编写以下代码：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Run the script and you will get the output as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](assets/27a93e6c-9702-455c-870f-af942561b795.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/27a93e6c-9702-455c-870f-af942561b795.jpg)'
- en: In the preceding example, we imported the necessary PyQt5 modules. Then, we
    created the application. The `QPushButton` creates the widget and the first argument
    we entered is a text that will be printed on the button. Next, we have a `QLabel`
    widget on which we are printing a message, which will get printed when we will
    click on the button. Next, we created an `on_click()` function that will perform
    the printing operation after clicking on the button. The `on_click()` is the slot
    we created.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们导入了必要的PyQt5模块。然后，我们创建了应用程序。`QPushButton`创建了小部件，我们输入的第一个参数是将在按钮上打印的文本。接下来，我们有一个`QLabel`小部件，我们在上面打印一条消息，当我们点击按钮时将打印出来。接下来，我们创建了一个`on_click()`函数，它将在点击按钮后执行打印操作。`on_click()`是我们创建的槽。
- en: 'Now, we are going to see an example of the box layout. For that, create a `box_layout.py`
    script and write following code in it:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到一个框布局的示例。为此，创建一个`box_layout.py`脚本，并在其中编写以下代码：
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Run the script and you will get the following output:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](assets/f3f5d264-0cf2-42d2-b1fe-16f4e21de4d2.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f3f5d264-0cf2-42d2-b1fe-16f4e21de4d2.png)'
- en: In the preceding example, we created a box layout. In that we have placed two
    buttons. This script is just for explaining the box layout. `l = QVBoxLayout()`
    will create a box layout.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们创建了一个框布局。在其中，我们放置了两个按钮。这个脚本只是为了解释框布局。`l = QVBoxLayout()`将创建一个框布局。
- en: Installing and using the Apache Log Viewer app
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和使用Apache日志查看器应用程序
- en: As we already have an Apache Log Viewer app, download the Apache Log Viewer
    app from the following link: [https://www.apacheviewer.com/download/](https://www.apacheviewer.com/download/).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经有了Apache日志查看器应用程序，请从以下链接下载Apache日志查看器应用程序：[https://www.apacheviewer.com/download/](https://www.apacheviewer.com/download/)
- en: After downloading it, install the app on your computer. This app is useful for
    analyzing log files based on their connection status, IP addresses, and much more.
    Therefore, to analyze the log file we can simply browse access log file or error
    log file. After getting the file, we apply different operations on a log file
    such as applying a filter, for instance to sort the only files from `access.log` that have
    unsuccessful connections, or filtering by specific IP addresses.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 下载后，在您的计算机上安装该应用程序。该应用程序可用于根据其连接状态、IP地址等分析日志文件。因此，要分析日志文件，我们可以简单地浏览访问日志文件或错误日志文件。获得文件后，我们对日志文件应用不同的操作，例如应用筛选器，例如仅对`access.log`中的未成功连接进行排序，或者按特定IP地址进行筛选。
- en: 'The following screenshot shows Apache log viewer with the `access.log` file
    without applying a filter:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了Apache日志查看器与`access.log`文件，没有应用筛选器：
- en: '![](assets/edb4c1c2-51be-400b-96a5-ab38178f7f74.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/edb4c1c2-51be-400b-96a5-ab38178f7f74.jpg)'
- en: 'The following screenshot shows the Apache Log Viewer with the `access.log file`
    after applying a filter:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了应用筛选器后的Apache日志查看器与`access.log`文件：
- en: '![](assets/c88aab5c-c72d-4f49-ba2d-810f6982760b.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c88aab5c-c72d-4f49-ba2d-810f6982760b.png)'
- en: In the first case, we took the access log file and opened it in the Apache Logs
    Viewer. We can easily see that the access file that we opened in the Apache Logs
    Viewer contains all kinds of entries, such as authorized and unauthorized, with
    their status, IP address, request, and so on. However, in the second case we applied
    a filter on the access log file so that we can only see the log entries of unauthorized
    requests, as shown in the screenshot.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一种情况下，我们取得了访问日志文件，并在Apache日志查看器中打开了它。我们可以很容易地看到，在Apache日志查看器中打开的访问文件包含各种条目，如授权和未授权的，以及它们的状态、IP地址、请求等。然而，在第二种情况下，我们对访问日志文件应用了筛选器，以便只能看到未经授权请求的日志条目，如截图所示。
- en: Summary
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this section, we learned about GUIs. We learned about the components used
    in GUI. We learned about the PyQt5 module in Python. Using the PyQt5 module, we
    created a simple application that will print a message in a label after clicking
    on a button.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了GUI。我们学习了GUI中使用的组件。我们学习了Python中的PyQt5模块。使用PyQt5模块，我们创建了一个简单的应用程序，在点击按钮后将在标签中打印一条消息。
- en: In the next chapter, you will learn about working with Apache log files.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习如何处理Apache日志文件。
- en: Questions
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is GUI ?
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是GUI？
- en: What are the constructors and destructors in Python?
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Python中的构造函数和析构函数是什么？
- en: What is the use of `self`?
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`self`的用途是什么？'
- en: Compare Tkinter, PyQt, and wxPython.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 比较Tkinter、PyQt和wxPython。
- en: Create a Python program to copy the contents of one file into another
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个Python程序，将一个文件的内容复制到另一个文件中
- en: Create a Python program that reads a text file and counts the number of times
    a certain letter appears in the text file.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个Python程序，读取文本文件并计算文本文件中某个字母出现的次数。
- en: Further reading
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Tkinter library for GUI documentation: [https://docs.python.org/3/library/tk.html](https://docs.python.org/3/library/tk.html)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Tkinter GUI文档：[https://docs.python.org/3/library/tk.html](https://docs.python.org/3/library/tk.html)
- en: PyQt library for GUI documentation: [https://wiki.python.org/moin/PyQt](https://wiki.python.org/moin/PyQt)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyQt GUI文档：[https://wiki.python.org/moin/PyQt](https://wiki.python.org/moin/PyQt)
