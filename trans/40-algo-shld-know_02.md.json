["```py\n1: BEGIN Mapping_Phase\n2: \u03a9 = { }\n3: k = 1\n4: FOREACH Ti\u2208T\n5:     \u03c9i = RA(\u0394k,Ti)\n6:     add {\u03c9i,Ti} to \u03a9\n7:     state_changeTi [STATE 0: Idle/Unmapped] \u2192 [STATE 1: Idle/Mapped]\n8:     k=k+1\n9:     IF (k>q)\n10:       k=1\n11:    ENDIF\n12: END FOREACH\n13: END Mapping_Phase\n```", "```py\ndefine swap(x, y)\n    buffer = x\n    x = y\n    y = buffer\n```", "```py\npip install a_package\n```", "```py\npip install a_package --upgrade\n```", "```py\nconda install a_package\n```", "```py\nconda update a_package\n```", "```py\ndef getFirst(myList):\n    return myList[0]\n```", "```py\ndef getSum(myList):\n    sum = 0\n    for item in myList:\n        sum = sum + item\n    return sum\n```", "```py\ndef getSum(myList):\n    sum = 0\n    for row in myList:\n        for item in row:\n            sum += item\n    return sum\n```", "```py\ndef searchBinary(myList,item):\n    first = 0\n    last = len(myList)-1\n    foundFlag = False\n    while( first<=last and not foundFlag):\n        mid = (first + last)//2\n        if myList[mid] == item :\n            foundFlag = True\n        else:\n            if item < myList[mid]:\n                last = mid - 1\n            else:\n                first = mid + 1\n    return foundFlag\n```"]