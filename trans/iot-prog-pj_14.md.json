["```py\nfrom gpiozero import Robot\nfrom time import sleep\n\nrobot = Robot(left=(5,6), right=(22,27))\nrobot.forward(0.2)\nsleep(0.5)\nrobot.backward(0.2)\nsleep(0.5)\nrobot.stop()\n```", "```py\nimport Adafruit_PCA9685 from time import sleep pwm = Adafruit_PCA9685.PCA9685() servo_min = 150\nservo_max = 600 while True:\n    pwm.set_pwm(0, 0, servo_min)\n    sleep(5)\n    pwm.set_pwm(0, 0, servo_max)\n    sleep(5) \n```", "```py\nfrom picamera import PiCamera import time camera = PiCamera() camera.capture(\"/home/pi/image-\" + time.ctime() + \".png\")   \n```", "```py\nfrom gpiozero import Buzzer\nfrom time import sleep\n\nbuzzer = Buzzer(12)\nbuzzer.on()\nsleep(5)\nbuzzer.off()\n```", "```py\nfrom gpiozero import LEDBoard\nfrom time import sleep\n\nclass TailLights:\n\n    led_lights = LEDBoard(red=21, green=20)\n\n    def __init__(self):\n        self.led_lights.on()\n        sleep(0.25)\n        self.led_lights.off()\n        sleep(0.25)\n\n    def blink_red(self, num, duration):\n        for x in range(num):\n            self.led_lights.red.on()\n            sleep(duration)\n            self.led_lights.red.off()\n            sleep(duration)\n\n    def blink_green(self, num, duration):\n        for x in range(num):\n            self.led_lights.green.on()\n            sleep(duration)\n            self.led_lights.green.off()\n            sleep(duration)\n\n    def blink_alternating(self, num, duration):\n        for x in range(num):\n            self.led_lights.red.off()\n            self.led_lights.green.on()\n            sleep(duration)\n            self.led_lights.red.on()\n            self.led_lights.green.off()\n            sleep(duration)\n        self.led_lights.red.off()\n\n    def blink_together(self, num, duration):\n        for x in range(num):\n            self.led_lights.on()\n            sleep(duration)\n            self.led_lights.off()\n            sleep(duration)\n\n    def alarm(self, num):\n        for x in range(num):\n            self.blink_alternating(2, 0.25)\n            self.blink_together(2, 0.5)\n\nif __name__==\"__main__\":\n\n    tail_lights = TailLights()\n    tail_lights.alarm(20) \n```", "```py\nled_lights = LEDBoard(red=21, green=20)\n```", "```py\ndef blink_together(self, num, duration):\n        for x in range(num):\n            self.led_lights.on()\n            sleep(duration)\n            self.led_lights.off()\n            sleep(duration)\n```", "```py\ndef __init__(self):\n        self.led_lights.on()\n        sleep(0.25)\n        self.led_lights.off()\n        sleep(0.25)\n```", "```py\nimport TailLights\ntail_lights = TailLights.TailLights()\n```", "```py\nfrom gpiozero import Robot\nfrom time import sleep\n\nclass RobotWheels:\n\n    robot = Robot(left=(5, 6), right=(22, 27))\n\n    def __init__(self):\n        pass\n\n    def move_forward(self):\n        self.robot.forward(0.2)\n\n    def move_backwards(self):\n        self.robot.backward(0.2)\n\n    def turn_right(self):\n        self.robot.right(0.2)\n\n    def turn_left(self):\n        self.robot.left(0.2)\n\n    def dance(self):\n        self.move_forward()\n        sleep(0.5)\n        self.stop()\n        self.move_backwards()\n        sleep(0.5)\n        self.stop()\n        self.turn_right()\n        sleep(0.5)\n        self.stop()\n        self.turn_left()\n        sleep(0.5)\n        self.stop()\n\n    def stop(self):\n        self.robot.stop()\n\nif __name__==\"__main__\":\n\n    robot_wheels = RobotWheels()\n    robot_wheels.dance() \n```", "```py\nfrom time import sleep\nfrom time import ctime\nfrom picamera import PiCamera\nimport Adafruit_PCA9685\n\nclass RobotCamera:\n\n    pan_min = 150\n    pan_centre = 375\n    pan_max = 600\n    tilt_min = 150\n    tilt_max = 200\n    camera = PiCamera()\n    pwm = Adafruit_PCA9685.PCA9685()\n\n    def __init__(self):\n        self.tilt_up()\n\n    def pan_right(self):\n        self.pwm.set_pwm(0, 0, self.pan_min)\n        sleep(2)\n\n    def pan_left(self):\n        self.pwm.set_pwm(0, 0, self.pan_max)\n        sleep(2)\n\n    def pan_mid(self):\n        self.pwm.set_pwm(0, 0, self.pan_centre)\n        sleep(2)\n\n    def tilt_down(self):\n        self.pwm.set_pwm(1, 0, self.tilt_max)\n        sleep(2)\n\n    def tilt_up(self):\n        self.pwm.set_pwm(1, 0, self.tilt_min)\n        sleep(2)\n\n    def take_picture(self):\n        sleep(2)\n        self.camera.capture(\"/home/pi/image-\" + ctime() + \".png\")\n\n    def dance(self):\n        self.pan_right()\n        self.tilt_down()\n        self.tilt_up()\n        self.pan_left()\n        self.pan_mid()\n\n    def secret_dance(self):\n        self.pan_right()\n        self.tilt_down()\n        self.tilt_up()\n        self.pan_left()\n        self.pan_mid()\n        self.take_picture()\n\nif __name__==\"__main__\":\n\n    robot_camera = RobotCamera()\n    robot_camera.dance()\n```", "```py\ndef __init__(self):\n    self.tilt_up()\n```", "```py\npan_min = 150\npan_centre = 375\npan_max = 600\ntilt_min = 150\ntilt_max = 200\n```", "```py\nfrom gpiozero import Buzzer\nfrom time import sleep\n\nclass RobotBeep:\n\n    buzzer = Buzzer(12)\n    notes = [[0.5,0.5],[0.5,1],[0.2,0.5],[0.5,0.5],[0.5,1],[0.2,0.5]]\n\n    def __init__(self, play_init=False):\n\n        if play_init:\n            self.buzzer.on()\n            sleep(0.1)\n            self.buzzer.off()\n            sleep(1)\n\n    def play_song(self):\n\n        for note in self.notes:\n            self.buzzer.on()\n            sleep(note[0])\n            self.buzzer.off()\n            sleep(note[1])\n\nif __name__==\"__main__\":\n\n    robot_beep = RobotBeep(True)\n```", "```py\nrobot_beep = RobotBeep(True)\n```", "```py\nfor note in self.notes:\n    self.buzzer.on()\n    sleep(note[0])\n    self.buzzer.off()\n    sleep(note[1])\n```", "```py\nfrom RobotWheels import RobotWheels\nfrom RobotBeep import RobotBeep\nfrom TailLights import TailLights\nfrom RobotCamera import RobotCamera\n\nclass RobotDance:\n\n    light_show = [2,1,4,5,3,1]\n\n    def __init__(self):\n\n        self.robot_wheels = RobotWheels()\n        self.robot_beep = RobotBeep()\n        self.tail_lights = TailLights()\n        self.robot_camera = RobotCamera()\n\n    def lets_dance_incognito(self):\n        for tail_light_repetition in self.light_show:\n            self.robot_wheels.dance()\n            self.robot_beep.play_song()\n            self.tail_lights.alarm(tail_light_repetition)\n            self.robot_camera.secret_dance()\n\nif __name__==\"__main__\":\n\n    robot_dance = RobotDance()\n    robot_dance.lets_dance_incognito()\n\n```", "```py\ndef lets_dance_incognito(self):\n    for tail_light_repetition in self.light_show:\n        self.robot_wheels.dance()\n        self.robot_beep.play_song()\n        self.tail_lights.alarm(tail_light_repetition)\n        self.robot_camera.secret_dance()\n```"]