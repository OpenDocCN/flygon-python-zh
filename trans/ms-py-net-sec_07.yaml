- en: Interacting with FTP, SSH, and SNMP Servers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与FTP、SSH和SNMP服务器交互
- en: his chapter will help you to understand the modules that allow us to interact
    with FTP, SSH, and SNMP servers. In this chapter, we will explore how the computers
    in a network can interact with each other. Some of the tools that allow us to
    connect with FTP, SSH, and SNMP servers can be found in Python, among which we
    can highlight FTPLib, Paramiko, and PySNMP.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将帮助您了解允许我们与FTP、SSH和SNMP服务器交互的模块。在本章中，我们将探讨网络中的计算机如何相互交互。一些允许我们连接FTP、SSH和SNMP服务器的工具可以在Python中找到，其中我们可以突出显示FTPLib、Paramiko和PySNMP。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Learning and understanding FTP protocols and how to connect with FTP servers
    with the `ftplib` module
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习和理解FTP协议以及如何使用`ftplib`模块连接FTP服务器
- en: Learning and understanding how to build an anonymous FTP scanner with Python
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习和理解如何使用Python构建匿名FTP扫描器
- en: Learning and understanding how to connect with SSH servers with the `Paramiko`
    module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习和理解如何使用`Paramiko`模块连接SSH服务器
- en: Learning and understanding how to connect with SSH servers with the `pxssh`
    module
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习和理解如何使用`pxssh`模块连接SSH服务器
- en: Learning and understanding SNMP protocol and how to connect with SNMP servers
    with the `PySNMP` module
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习和理解SNMP协议以及如何使用`PySNMP`模块连接SNMP服务器
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'Examples and source code for this chapter are available in the GitHub repository
    in the `chapter7` folder:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的示例和源代码可在GitHub存储库的`chapter7`文件夹中找到：
- en: '[https://github.com/PacktPublishing/Mastering-Python-for-Networking-and-Security](https://github.com/PacktPublishing/Mastering-Python-for-Networking-and-Security).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Mastering-Python-for-Networking-and-Security](https://github.com/PacktPublishing/Mastering-Python-for-Networking-and-Security).'
- en: In this chapter, examples are compatible with Python 3.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，示例与Python 3兼容。
- en: 'This chapter requires quite a few third-party packages and Python modules,
    such as `ftplib`, `Paramiko`, `pxssh` and `PySNMP`. You can use your operating
    system''s package management tool for installing them. Here''s a quick how-to
    on installing these modules in an Ubuntu Linux operating system with Python 3\.
    We can use the following `pip3` and `easy_install3` commands:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章需要许多第三方软件包和Python模块，如`ftplib`、`Paramiko`、`pxssh`和`PySNMP`。您可以使用操作系统的软件包管理工具进行安装。以下是在Ubuntu
    Linux操作系统中使用Python 3安装这些模块的快速方法。我们可以使用以下`pip3`和`easy_install3`命令：
- en: '`sudo apt-get install python3`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo apt-get install python3`'
- en: '`sudo [pip3|easy_install3] ftplib`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo [pip3|easy_install3] ftplib`'
- en: '`sudo [pip3|easy_install3] paramiko`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo [pip3|easy_install3] paramiko`'
- en: '`sudo [pip3|easy_install3] pysnmp`'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo [pip3|easy_install3] pysnmp`'
- en: Connecting with FTP servers
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接FTP服务器
- en: In this section, we will review the `ftplib` module of the Python standard library,
    which provides us with the necessary methods to create FTP clients quickly and
    easily.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将回顾Python标准库的`ftplib`模块，该模块为我们提供了创建FTP客户端所需的方法。
- en: The File Transfer Protocol (FTP)
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件传输协议（FTP）
- en: FTP is a protocol that’s used to transfer data from one system to another and
    uses Transmission Control Protocol (TCP) port `21`, which allows clients and servers
    connected in the same network to exchange files. The protocol design is defined
    in such a way that it is not necessary for the client and server to run on the
    same platform; any client and any FTP server can use a different operating system
    and use the primitives and commands defined in the protocol to transfer files.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: FTP是一种用于在系统之间传输数据的协议，使用传输控制协议（TCP）端口`21`，允许在同一网络中连接的客户端和服务器交换文件。协议设计的方式定义了客户端和服务器不必在同一平台上运行；任何客户端和任何FTP服务器都可以使用不同的操作系统，并使用协议中定义的原语和命令来传输文件。
- en: The protocol is focused on offering clients and servers an acceptable speed
    in the transfer of files, but it does not take into account more important concepts
    such as security. The disadvantage of this protocol is that the information travels
    in plain text, including access credentials when a client authenticates on the
    server.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 该协议专注于为客户端和服务器提供可接受的文件传输速度，但并未考虑诸如安全性之类的更重要概念。该协议的缺点是信息以明文形式传输，包括客户端在服务器上进行身份验证时的访问凭据。
- en: The Python ftplib module
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python ftplib模块
- en: 'To know more about the `ftplib` module, you can query the official documentation:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解有关`ftplib`模块的更多信息，可以查询官方文档：
- en: '[http://docs.python.org/library/ftplib.html](http://docs.python.org/library/ftplib.html)'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://docs.python.org/library/ftplib.html](http://docs.python.org/library/ftplib.html)'
- en: '`ftplib` is a native library in Python that allows for connection with FTP
    servers and for the execution of commands on those servers. It is designed to
    create FTP clients with few lines of code and to perform admin server routines.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`ftplib`是Python中的本地库，允许连接FTP服务器并在这些服务器上执行命令。它旨在使用少量代码创建FTP客户端并执行管理服务器例程。'
- en: It can be used to create scripts that automate certain tasks or perform dictionary
    attacks against an FTP server. In addition, it supports encrypted connections
    with TLS, using the utilities defined in the `FTP_TLS` class.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 它可用于创建自动化某些任务的脚本或对FTP服务器执行字典攻击。此外，它支持使用`FTP_TLS`类中定义的实用程序进行TLS加密连接。
- en: 'In this screen capture, we can see the execution of the `help` command over
    the `ftplib` module:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在此屏幕截图中，我们可以看到在`ftplib`模块上执行`help`命令：
- en: '![](assets/d2ef454e-b939-44a7-8452-1ba78b959c30.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d2ef454e-b939-44a7-8452-1ba78b959c30.png)'
- en: Transferring files with FTP
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用FTP传输文件
- en: ftplib can be used for transferring files to and from remote machines. The constructor
    method of the FTP class (`method __init __ ()`), receives the `host`, `user`,
    and `key` as parameters, so that passing these parameters during any instance
    to the FTP saves the use of the connect methods (`host`, `port`, `timeout`) and
    a login (`user`, `password`).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: ftplib可用于将文件传输到远程计算机并从远程计算机传输文件。FTP类的构造方法（`method __init __（）`）接收`host`、`user`和`key`作为参数，因此在任何实例中传递这些参数到FTP时，可以节省使用connect方法（`host`、`port`、`timeout`）和登录（`user`、`password`）。
- en: 'In this screenshot, we can see more information about the `FTP` class and the
    parameters of the `init` method constructor:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个截图中，我们可以看到更多关于`FTP`类和`init`方法构造函数的参数的信息：
- en: '![](assets/e3b5caed-940e-4d0b-8a59-9857396b050b.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e3b5caed-940e-4d0b-8a59-9857396b050b.png)'
- en: To connect, we can do so in several ways. The first is by using the `connect()`
    method and the other is through the FTP class constructor.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 要连接，我们可以通过几种方式来实现。第一种是使用`connect()`方法，另一种是通过FTP类构造函数。
- en: '![](assets/4cecdc59-f643-40d2-8597-d1e69d152ae6.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/4cecdc59-f643-40d2-8597-d1e69d152ae6.png)'
- en: 'In this script, we can see how to connect with an `ftp` server:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个脚本中，我们可以看到如何连接到一个`ftp`服务器：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The `FTP()` class takes as its parameters: the remote server, the username,
    and the password of the `ftp` user.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`FTP()`类以远程服务器、`ftp`用户的用户名和密码作为参数。'
- en: In this example, we connect to an FTP server in order to download a binary file
    from `ftp.be.debian.org server`.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们连接到一个FTP服务器，以从`ftp.be.debian.org`服务器下载一个二进制文件。
- en: In the following script, we can see how to connect with an **anonymous** FTP
    server and download binary files with no user and password.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下脚本中，我们可以看到如何连接到一个**匿名**FTP服务器并下载二进制文件，而无需用户名和密码。
- en: 'You can find the following code in the filename: `ftp_download_file.py`:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`ftp_download_file.py`中找到以下代码：
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using ftplib to brute force FTP user credentials
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ftplib来暴力破解FTP用户凭据
- en: One of the main uses that can be given to this library is to check if an FTP
    server is vulnerable to a brute-force attack using a dictionary. For example,
    with this script we can execute an attack using a dictionary of users and passwords
    against an FTP server. We test with all possible user and password combinations
    until we find the right one.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库的主要用途之一是检查FTP服务器是否容易受到使用字典的暴力攻击。例如，使用这个脚本，我们可以对FTP服务器执行使用用户和密码字典的攻击。我们测试所有可能的用户和密码组合，直到找到正确的组合。
- en: We will know that the combination is a good one if, when connecting, we obtain
    the "`230 Login successful`" string as an answer.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当连接时，如果我们得到"`230 Login successful`"字符串作为答复，我们就会知道这个组合是一个好的组合。
- en: 'You can find the following code in the filename:`ftp_brute_force.py`:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`ftp_brute_force.py`中找到以下代码：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Building an anonymous FTP scanner with Python
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python构建匿名FTP扫描器
- en: We can use the `ftplib` module in order to build a script to determine if a
    server offers anonymous logins.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`ftplib`模块来构建一个脚本，以确定服务器是否提供匿名登录。
- en: The function `anonymousLogin()` takes a hostname and returns a Boolean that
    describes the availability of anonymous logins. The function tries to create an
    FTP connection with anonymous credentials. If successful, it returns the value
    "`True`."
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 函数`anonymousLogin()`以主机名为参数，并返回描述匿名登录可用性的布尔值。该函数尝试使用匿名凭据创建FTP连接。如果成功，它返回值"`True`"。
- en: 'You can find the following code in the filename: `checkFTPanonymousLogin.py`:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`checkFTPanonymousLogin.py`中找到以下代码：
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'In this screenshot we can see an example of executing the previous script over
    a server that allows **anonymous login**:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个截图中，我们可以看到在允许**匿名登录**的服务器上执行前面的脚本的示例：
- en: '![](assets/8d8e37da-5b27-489a-a1ce-99005c35ff2b.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8d8e37da-5b27-489a-a1ce-99005c35ff2b.png)'
- en: In this example, the `ftplib` module is used to access FTP servers. In this
    example, a script has been created in which **shodan** is used to extract a list
    of FTP servers that allow anonymous authentication and then use ftplib for the
    contents of the root directory.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，`ftplib`模块被用来访问FTP服务器。在这个例子中，已经创建了一个脚本，其中使用**shodan**来提取允许匿名身份验证的FTP服务器列表，然后使用ftplib来获取根目录的内容。
- en: 'You can find the following code in the filename:`ftp_list_anonymous_shodan.py`:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`ftp_list_anonymous_shodan.py`中找到以下代码：
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Connecting with SSH servers
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到SSH服务器
- en: In this section, we will review the Paramiko and `pxssh` modules that provide
    us with the necessary methods to create SSH clients in an easy way.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将回顾Paramiko和`pxssh`模块，这些模块为我们提供了创建SSH客户端所需的方法。
- en: The Secure Shell (SSH) protocol
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安全外壳（SSH）协议
- en: SSH has become a very popular network protocol for performing secure data communication
    between two computers. Both of the parts in communication use SSH key pairs to
    encrypt their communications. Each key pair has one private and one public key.
    The public key can be published to anyone who may be interested in that. The private
    key is always kept private and secure from everyone except the owner of the key.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: SSH已经成为执行两台计算机之间的安全数据通信的非常流行的网络协议。通信中的双方都使用SSH密钥对来加密他们的通信。每个密钥对都有一个私钥和一个公钥。公钥可以发布给任何对其感兴趣的人。私钥始终保持私密，并且除了密钥的所有者之外，对所有人都是安全的。
- en: Public and private SSH keys can be generated and digitally signed by a certification
    authority (CA). These keys can also be generated with tools from the command line,
    such as `ssh-keygen`.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 公钥和私钥可以由认证机构（CA）生成并进行数字签名。这些密钥也可以使用命令行工具生成，例如`ssh-keygen`。
- en: When the SSH client connects to a server securely, it registers the public key
    of the server in a special file that is stored in a hidden way called a `/.ssh/known_hosts`
    file. If it is on the server side, access must be limited to certain clients that
    have certain IP addresses, then the public keys of the allowed hosts can be stored
    in another special file called `ssh_known_hosts`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当SSH客户端安全连接到服务器时，它会在一个特殊的文件中注册服务器的公钥，该文件以一种隐藏的方式存储，称为`/.ssh/known_hosts`文件。如果在服务器端，访问必须限制在具有特定IP地址的某些客户端，那么允许主机的公钥可以存储在另一个特殊文件中，称为`ssh_known_hosts`。
- en: Introduction to Paramiko
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Paramiko简介
- en: Paramiko is a library written in Python that supports the SSHV1 and SSHV2 protocols,
    allowing the creation of clients and making connections to SSH servers. It depends
    on the **PyCrypto** and **cryptography** libraries for all encryption operations
    and allows the creation of local, remote, and dynamic encrypted tunnels.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Paramiko是一个用Python编写的库，支持SSHV1和SSHV2协议，允许创建客户端并连接到SSH服务器。它依赖于**PyCrypto**和**cryptography**库进行所有加密操作，并允许创建本地，远程和动态加密隧道。
- en: 'Among the main advantages of this library, we can highlight that:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在此库的主要优势中，我们可以强调：
- en: It encapsulates the difficulties involved in performing automated scripts against
    SSH servers in a comfortable and easy-to-understand way for any programmer
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它以舒适且易于理解的方式封装了针对SSH服务器执行自动化脚本所涉及的困难，适用于任何程序员
- en: It supports the SSH2 protocol through the `PyCrypto` library, which uses it
    to implement all those details of public and private key cryptography
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它通过`PyCrypto`库支持SSH2协议，该库使用它来实现公钥和私钥加密的所有细节
- en: It allows authentication by public key, authentication by password, and the
    creation of SSH tunnels
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许通过公钥进行身份验证，通过密码进行身份验证，并创建SSH隧道
- en: It allows us to write robust SSH clients with the same functionality as other
    SSH clients such as Putty or OpenSSH-Client
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许我们编写强大的SSH客户端，具有与其他SSH客户端（如Putty或OpenSSH-Client）相同的功能
- en: It supports file transfer safely using the SFTP protocol
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持使用SFTP协议安全地传输文件
- en: You may also be interested in using the `pysftp` module, which is based on Paramiko.
    More details regarding this package can be found at PyPI: [https://pypi.python.org/pypi/pysftp.](https://pypi.python.org/pypi/pysftp)
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能还对使用基于Paramiko的`pysftp`模块感兴趣。有关此软件包的更多详细信息，请访问PyPI：[https://pypi.python.org/pypi/pysftp.](https://pypi.python.org/pypi/pysftp)
- en: Installing Paramiko
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Paramiko
- en: 'You can install Paramiko directly from the pip Python repository with the classic
    command: `pip install paramiko`. You can install it in Python 2.4 and 3.4+, and
    there are some dependencies that must be installed on your system, such as the `PyCrypto`
    and `Cryptography` modules depending on what version you are going to install.
    These libraries provide low-level, C-based encryption algorithms for the SSH protocol.
    In the official documentation, you can see how to install it and the different
    versions available:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接从pip Python存储库安装Paramiko，使用经典命令：`pip install paramiko`。您可以在Python 2.4和3.4+中安装它，并且必须在系统上安装一些依赖项，例如`PyCrypto`和`Cryptography`模块，具体取决于您要安装的版本。这些库为SSH协议提供了基于C的低级加密算法。在官方文档中，您可以看到如何安装它以及不同的可用版本：
- en: '[http://www.paramiko.org](http://www.paramiko.org)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.paramiko.org](http://www.paramiko.org)'
- en: 'The installation details for Cryptography can be found at:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Cryptography的安装详细信息，请访问：
- en: '[https://cryptography.io/en/latest/installation](https://cryptography.io/en/latest/installation)'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://cryptography.io/en/latest/installation](https://cryptography.io/en/latest/installation)'
- en: Establishing SSH connection with Paramiko
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Paramiko建立SSH连接
- en: 'We can use the `Paramiko` module to create an SSH client and then connect it
    to the SSH server. This module will supply the `SSHClient()` class, which provides
    an interface to initiate server connections in a secure way. These instructions
    will create a new SSHClient instance, and connect to the SSH server by calling
    the `connect()` method:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`Paramiko`模块创建SSH客户端，然后将其连接到SSH服务器。此模块将提供`SSHClient()`类，该类提供了一种安全启动服务器连接的接口。这些说明将创建一个新的SSHClient实例，并通过调用`connect()`方法连接到SSH服务器：
- en: '[PRE5]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: By default, the `SSHClient` instance of this client class will refuse to connect
    a host that does not have a key saved in our `known_hosts` file. With the `AutoAddPolicy()`
    class, you can set up a policy for accepting unknown host keys. Now, you need
    to run the `set_missing_host_key_policy()` method along with the following argument
    on the `ssh_client` object.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，此客户端类的`SSHClient`实例将拒绝连接到没有在我们的`known_hosts`文件中保存密钥的主机。使用`AutoAddPolicy()`类，您可以设置接受未知主机密钥的策略。现在，您需要在`ssh_client`对象上运行`set_missing_host_key_policy()`方法以及以下参数。
- en: 'With this instruction, Paramiko automatically adds the fingerprint of the remote
    server to the host file of the operating system. Now, since we are performing
    an automation, we will inform Paramiko to accept these keys for the first time
    without interrupting the session or prompting the user for it. This will be done
    via `client.set_missing_host_key_policy`, then `AutoAddPolicy()`:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 通过此指令，Paramiko会自动将远程服务器的指纹添加到操作系统的主机文件中。现在，由于我们正在执行自动化，我们将通知Paramiko首次接受这些密钥，而不会中断会话或提示用户。这将通过`client.set_missing_host_key_policy`，然后`AutoAddPolicy()`完成：
- en: '[PRE6]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you need to restrict accepting connections only to specific hosts, then
    you can use the `load_system_host_keys()` method for adding the system host keys
    and system fingerprints:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要仅限于特定主机接受连接，则可以使用`load_system_host_keys()`方法添加系统主机密钥和系统指纹：
- en: '[PRE7]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Another way to connect to an SSH server is through the `Transport()` method
    that provides another type of object to authenticate against the server:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 连接到SSH服务器的另一种方法是通过`Transport()`方法，它提供了另一种类型的对象来对服务器进行身份验证：
- en: '[PRE8]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We can query the `transport` submodule help to see the methods that we can
    invoke to connect and get more information about the SSH server:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以查询`transport`子模块帮助以查看我们可以调用的方法，以连接并获取有关SSH服务器的更多信息：
- en: '![](assets/c067aa76-5003-4dab-9d30-69fc7217121e.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c067aa76-5003-4dab-9d30-69fc7217121e.png)'
- en: 'This is the method used to authenticate the user and password:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用于验证用户和密码的方法：
- en: '![](assets/c00488c6-1363-4ab1-b1f1-32b4d9a8c2a8.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/c00488c6-1363-4ab1-b1f1-32b4d9a8c2a8.png)'
- en: 'The `open_session` method allows us to open a new session against the server
    in order to execute commands:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`open_session`方法允许我们打开一个新会话以执行命令：'
- en: '![](assets/552a2b7b-c440-4bfb-a87e-84b0287f967f.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/552a2b7b-c440-4bfb-a87e-84b0287f967f.png)'
- en: Running commands with Paramiko
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Paramiko运行命令
- en: 'Now we are connected to the remote host with Paramiko, we can then run commands
    on the remote host using this connection. To execute command, we can simply call
    the `connect()` method along with the target `hostname` and the SSH login credentials.
    To run any command on the target host, we need to invoke the `exec_command()`
    method by passing the command as its argument:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们使用Paramiko连接到远程主机，我们可以使用这个连接在远程主机上运行命令。要执行命令，我们可以简单地调用`connect()`方法，以及目标`hostname`和SSH登录凭据。要在目标主机上运行任何命令，我们需要调用`exec_command()`方法，并将命令作为参数传递：
- en: '[PRE9]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: The following code listing shows how to do an SSH login to a target host and
    then run an `ifconfig` command. The next script will make an SSH connection to
    the localhost and then run the `ifconfig` command that allows us to see the configuration
    of the network for the machine to which we are connecting.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码清单显示了如何登录到目标主机，然后运行`ifconfig`命令。下一个脚本将建立到本地主机的SSH连接，然后运行`ifconfig`命令，这样我们就可以看到我们正在连接的机器的网络配置。
- en: With this script we could create an interactive shell **t**hat could automate
    many tasks. We create a function called `ssh_command`, which makes a connection
    to an SSH server and runs a single command.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个脚本，我们可以创建一个可以自动化许多任务的交互式shell。我们创建了一个名为`ssh_command`的函数，它连接到SSH服务器并运行单个命令。
- en: To execute the command we use the `exec_command()` method of the `ssh_session`
    object that we have obtained from the open session when logging in to the server.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行命令，我们使用`ssh_session`对象的`exec_command()`方法，该对象是在登录到服务器时从打开会话中获得的。
- en: 'You can find the following code in the filename: `SSH_command.py`:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文件名为`SSH_command.py`的文件中找到以下代码：
- en: '[PRE10]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: In this example, we perform the same functionality as in the previous script,
    but in this case we use the `Transport` class to establish the connection with
    the SSH server. To be able to execute commands we have to open a session previously on
    the `transport` object.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们执行了与上一个脚本相同的功能，但在这种情况下，我们使用`Transport`类与SSH服务器建立连接。要能够执行命令，我们必须在`transport`对象上预先打开一个会话。
- en: 'You can find the following code in the filename:`SSH_transport.py`:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文件名为`SSH_transport.py`的文件中找到以下代码：
- en: '[PRE11]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: SSH connection with brute-force processing
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用暴力破解处理进行SSH连接
- en: 'In this example, we perform an **SSHConnection** class that allows us to initialize
    the `SSHClient` object and implement the following methods:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们执行了一个**SSHConnection**类，它允许我们初始化`SSHClient`对象并实现以下方法：
- en: '`def ssh_connect (self, ip_address, user, password, code = 0)`'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`def ssh_connect (self, ip_address, user, password, code = 0)`'
- en: '`def startSSHBruteForce (self, host)`'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`def startSSHBruteForce (self, host)`'
- en: The first method tries to realize the connection to a specific IP address, with
    the user and password passed as parameters.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个方法尝试连接到特定IP地址，参数是用户名和密码。
- en: The second is a method that takes two read files as inputs (`users.txt`, `passwords.txt`)
    and through a brute-force process, tries to test all the possible combinations
    of users and passwords that it is reading from the files. We try a combination
    of username and password, and if you can establish a connection, we execute a
    command from the console of the server to which we have connected.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个方法接受两个读取文件作为输入（`users.txt`，`passwords.txt`），并通过暴力破解过程，尝试测试从文件中读取的所有可能的用户和密码组合。我们尝试用户名和密码的组合，如果可以建立连接，我们就从已连接的服务器的控制台执行命令。
- en: Note that if we have a connection error, we have an exception block where we
    perform a different treatment, depending on whether the connection failed due
    to an authentication error (`paramiko.AuthenticationException`) or a connection
    error with the server (`socket.error`).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，如果我们遇到连接错误，我们有一个异常块，在那里我们执行不同的处理，具体取决于连接失败是由于身份验证错误（`paramiko.AuthenticationException`）还是与服务器的连接错误（`socket.error`）。
- en: 'The files related to users and passwords are simple files in plain text that
    contain common default users and passwords for databases and operating systems.
    Examples of files can be found in the fuzzdb project:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 与用户和密码相关的文件是简单的纯文本文件，包含数据库和操作系统的常见默认用户和密码。文件的示例可以在fuzzdb项目中找到：
- en: '[https://github.com/fuzzdb-project/fuzzdb/tree/master/wordlists-user-passwd](https://github.com/fuzzdb-project/fuzzdb/tree/master/wordlists-user-passwd)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/fuzzdb-project/fuzzdb/tree/master/wordlists-user-passwd](https://github.com/fuzzdb-project/fuzzdb/tree/master/wordlists-user-passwd)'
- en: 'You can find the following code in the filename:`SSHConnection_brute_force.py`:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文件名为`SSHConnection_brute_force.py`的文件中找到以下代码：
- en: '[PRE12]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'For the brute-force process, we can define one function that iterates over
    users'' and passwords'' files and tries to establish a connection with the `ssh`
    for each combination:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 对于暴力破解过程，我们可以定义一个函数，该函数迭代用户和密码文件，并尝试为每个组合建立`ssh`连接：
- en: '[PRE13]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: SSH connection with pxssh
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用pxssh进行SSH连接
- en: '`pxssh` is a Python module based on Pexpect for establishing SSH connections.
    Its class extends `pexpect.spawn` to specialize setting up SSH connections.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`pxssh`是一个基于Pexpect的Python模块，用于建立SSH连接。它的类扩展了`pexpect.spawn`，以专门设置SSH连接。'
- en: '`pxssh` is a specialized module that provides specific methods to interact directly with
    SSH sessions such as `login()`, `logout()`, and `prompt()`.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`pxssh`是一个专门的模块，提供了特定的方法来直接与SSH会话交互，比如`login()`，`logout()`和`prompt()`。'
- en: '**pxssh documentation**'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**pxssh文档**'
- en: We can find official documentation on the `readthedocs` site for the `Pexpect`
    module at  [http://pexpect.readthedocs.io/en/stable/api/pxssh.html.](https://pexpect.readthedocs.io/en/stable/index.html)
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在`readthedocs`网站上找到`Pexpect`模块的官方文档，网址为[http://pexpect.readthedocs.io/en/stable/api/pxssh.html.](https://pexpect.readthedocs.io/en/stable/index.html)
- en: 'Also, we can get more information using the `help` command from a Python terminal:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以使用Python终端的`help`命令获取更多信息：
- en: '[PRE14]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Running a command on a remote SSH server
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在远程SSH服务器上运行命令
- en: This example imports the **getpass** module, which will prompt the host, user,
    and password, establish the connection, and run some commands on a remote server.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子导入了**getpass**模块，它将提示主机、用户和密码，建立连接，并在远程服务器上运行一些命令。
- en: 'You can find the following code in the filename: `pxsshConnection.py`:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文件名`pxsshConnection.py`中找到以下代码：
- en: '[PRE15]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: We can create specific methods to establish the `connection` and `send` commands.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以创建特定的方法来建立`连接`和`发送`命令。
- en: 'You can find the following code in the filename: `pxsshCommand.py`:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在文件名`pxsshCommand.py`中找到以下代码：
- en: '[PRE16]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Connecting with SNMP servers
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与SNMP服务器连接
- en: In this section we will review the PySNMP module that provides us with the necessary
    methods to connect with SNMP servers in an easy way.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将回顾PySNMP模块，该模块为我们提供了与SNMP服务器轻松连接所需的方法。
- en: The Simple Network Management Protocol (SNMP)
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单网络管理协议（SNMP）
- en: SMNP is a network protocol that works over the User Datagram Protocol (UDP),
    mainly for the management and network device monitoring of routers, switches,
    servers, and virtual hosts. It allows for the communication of a device's configuration,
    performance data, and the commands that are meant for control devices.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: SMNP是一种基于用户数据报协议（UDP）的网络协议，主要用于路由器、交换机、服务器和虚拟主机的管理和网络设备监视。它允许设备配置、性能数据和用于控制设备的命令的通信。
- en: SMNP is based on the definition of communities that group the devices that can
    be monitored, with the aim of simplifying the monitoring of machines in a network
    segment. The operations are straightforward, with the network manager sending
    GET and SET requests toward the device, and the device with the SNMP agent responding
    with the information per request.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: SMNP基于将可监视的设备分组的社区的定义，旨在简化网络段中机器的监视。操作很简单，网络管理器向设备发送GET和SET请求，带有SNMP代理的设备根据请求提供信息。
- en: Regarding **security**, the SNMP protocol offers many levels of security depending
    on the protocol version number. In SNMPv1 and v2c, the data is protected by a
    pass phrase known as the community string. In SNMPv3, a username and a password
    are required for storing the data.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 关于**安全性**，SNMP协议根据协议版本号提供多种安全级别。在SNMPv1和v2c中，数据受到称为社区字符串的密码保护。在SNMPv3中，需要用户名和密码来存储数据。
- en: 'The main elements of the SNMP protocol are:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: SNMP协议的主要元素是：
- en: '**SNMP manager**: It works like a monitor. It sends queries to one or more
    agents and receives answers. Depending on the characteristics of the community,
    it also allows for the editing of values in the machines that we are monitoring.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SNMP管理器**：它的工作原理类似于监视器。它向一个或多个代理发送查询并接收答复。根据社区的特性，它还允许编辑我们正在监视的机器上的值。'
- en: '**SNMP agent**: Any type of device that belongs to a community and can be managed
    by an SNMP manager.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SNMP代理**：属于某个社区并且可以由SNMP管理器管理的任何类型的设备。'
- en: '**SNMP community**: A text string that represents a grouping of agents.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SNMP社区**：表示代理的分组的文本字符串。'
- en: '**Management information base (MIB)**: Information unit that forms the basis
    of the queries that can be made against SNMP agents. It is like database information
    where each device''s information is stored. The MIB uses a hierarchical namespace
    containing an object identifier (OID).'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**管理信息库（MIB）**：形成可以针对SNMP代理进行的查询的基础的信息单元。它类似于数据库信息，其中存储了每个设备的信息。MIB使用包含对象标识符（OID）的分层命名空间。'
- en: '**Object identifier (OID)**: Represents the information that can be read and
    fed back to the requester. The user needs to know the OID in order to query the
    data.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对象标识符（OID）**：表示可以读取并反馈给请求者的信息。用户需要知道OID以查询数据。'
- en: PySNMP
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PySNMP
- en: In Python you can use a third-party library called PySNMP for interfacing with
    the **snmp daemon**.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python中，您可以使用名为PySNMP的第三方库与**snmp守护程序**进行接口。
- en: 'You can install the PySNMP module by using the following `pip` command:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下`pip`命令安装PySNMP模块：
- en: '`$ pip install pysnmp`'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`$ pip install pysnmp`'
- en: 'In this screenshot we can see the dependencies we need to install for this
    module:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在此截图中，我们可以看到我们需要为此模块安装的依赖项：
- en: '![](assets/100106a6-418e-4716-910b-e5d82c447a55.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/100106a6-418e-4716-910b-e5d82c447a55.png)'
- en: We can see that the installation of PySNMP requires the `pyasn1` package. ASN.1
    is a standard and notation that describes rules and structures for representing,
    encoding, transmitting, and decoding data in telecommunication and computer networking.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以看到，安装PySNMP需要`pyasn1`包。ASN.1是一种标准和符号，用于描述在电信和计算机网络中表示、编码、传输和解码数据的规则和结构。
- en: pyasn1 is available in the PyPI repository: [https://pypi.org/project/pyasn1/](https://pypi.org/project/pyasn1/).  In
    the GitHub repository [https://github.com/etingof/pyasn1](https://github.com/etingof/pyasn1),
    we can see how to use this module to obtain record information when we are interacting
    with SNMP servers.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: pyasn1可在PyPI存储库中找到：[https://pypi.org/project/pyasn1/](https://pypi.org/project/pyasn1)。在GitHub存储库[https://github.com/etingof/pyasn1](https://github.com/etingof/pyasn1)中，我们可以看到如何使用此模块与SNMP服务器交互时获取记录信息。
- en: 'For this module, we can find official documentation at the following page:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 对于此模块，我们可以在以下页面找到官方文档：
- en: '[http://pysnmp.sourceforge.net/quick-start.html](http://pysnmp.sourceforge.net/quick-start.html)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://pysnmp.sourceforge.net/quick-start.html](http://pysnmp.sourceforge.net/quick-start.html)'
- en: 'The main module for performing SNMP queries is the following:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 执行SNMP查询的主要模块如下：
- en: '`pysnmp.entity.rfc3413.oneliner.cmdgen`'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`pysnmp.entity.rfc3413.oneliner.cmdgen`'
- en: 'And here is the `CommandGenerator` class that allows you to query the SNMP
    servers:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是允许您查询SNMP服务器的`CommandGenerator`类：
- en: '![](assets/00c60189-fa6a-4a87-8098-2cc76611c06a.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/00c60189-fa6a-4a87-8098-2cc76611c06a.png)'
- en: 'In this code, we can see the basic use of the `CommandGenerator` class:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码中，我们可以看到`CommandGenerator`类的基本用法：
- en: '[PRE17]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'We can perform SNMP using the `getCmd()` method. The result is unpacked into
    various variables. The output of this command consists of a four-value tuple.
    Out of those, three are related to the errors returned by the command generator,
    and the fourth one (`varBinds`) is related to the actual variables that bind the
    returned data and contains the query result:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`getCmd()`方法执行SNMP。结果被解包成各种变量。这个命令的输出包括一个四值元组。其中三个与命令生成器返回的错误有关，第四个（`varBinds`）与绑定返回数据的实际变量有关，并包含查询结果：
- en: '[PRE18]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'You can see that **cmdgen** takes the following **parameters**:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到**cmdgen**接受以下**参数**：
- en: '**CommunityData():** Sets the community string as public.'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CommunityData():** 将community字符串设置为public。'
- en: '**UdpTransportTarget():** This is the host target, where the SNMP agent is
    running. This is specified in the pairing of the hostname and the UDP port.'
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**UdpTransportTarget():** 这是主机目标，SNMP代理正在运行的地方。这是指定主机名和UDP端口的配对。'
- en: '**MibVariable:** This is a tuple of values that includes the MIB version number
    and the MIB target string (which in this case is `sysDescr`; this refers to the
    description of the system).'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MibVariable:** 这是一个值元组，包括MIB版本号和MIB目标字符串（在本例中是`sysDescr`；这是指系统的描述）。'
- en: In these examples, we see some scripts where the objective is to **obtain the
    data from a remote SNMP agent**.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些例子中，我们看到一些脚本的目标是**获取远程SNMP代理的数据**。
- en: 'You can find the following code in the filename:`snmp_example1.py`:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`snmp_example1.py`中找到以下代码：
- en: '[PRE19]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'If we try to execute the previous script, we see the public data of the SNMP
    agent registered:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试执行先前的脚本，我们会看到已注册的SNMP代理的公共数据：
- en: '![](assets/2dbc8623-071f-4a68-8948-6d7f9f10b426.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2dbc8623-071f-4a68-8948-6d7f9f10b426.png)'
- en: 'You can find the following code in the filename:`snmp_example2.py`:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`snmp_example2.py`中找到以下代码：
- en: '[PRE20]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'If we try to execute the previous script, we see the public data of the SNMP
    agent registered:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试执行先前的脚本，我们会看到已注册的SNMP代理的公共数据：
- en: '![](assets/1c0ec4d8-545b-4dc6-aef6-d0b856801159.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1c0ec4d8-545b-4dc6-aef6-d0b856801159.png)'
- en: 'You can find the following code in the filename:`snmp_example3.py`:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`snmp_example3.py`中找到以下代码：
- en: '[PRE21]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'If we try to execute the previous script, we see the public data of the SNMP
    agent registered:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们尝试执行先前的脚本，我们会看到已注册的SNMP代理的公共数据：
- en: '![](assets/bcc8af0d-d614-4382-9daa-89e59139e964.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/bcc8af0d-d614-4382-9daa-89e59139e964.png)'
- en: 'In this example, we try to find communities for a specific SNMP server. For
    this task, we first get the file `wordlist-common-snmp-community-strings.txt`
    from fuzzdb that contains a list with communities available:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们尝试为特定的SNMP服务器查找community。为此任务，我们首先从fuzzdb获取包含可用community列表的文件`wordlist-common-snmp-community-strings.txt`：
- en: '[https://github.com/fuzzdb-project/fuzzdb/blob/master/wordlists-misc/wordlist-common-snmp-community-strings.txt](https://github.com/fuzzdb-project/fuzzdb/blob/master/wordlists-misc/wordlist-common-snmp-community-strings.txt)'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/fuzzdb-project/fuzzdb/blob/master/wordlists-misc/wordlist-common-snmp-community-strings.txt](https://github.com/fuzzdb-project/fuzzdb/blob/master/wordlists-misc/wordlist-common-snmp-community-strings.txt)'
- en: 'You can find the following code in the filename:` snmp_brute_force.py`:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在文件名为`snmp_brute_force.py`中找到以下代码：
- en: '[PRE22]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'To obtain servers and SNMP agents, we can search in Shodan with the SNMP protocol
    and port `161`, and we obtain the following results:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取服务器和SNMP代理，我们可以在Shodan中使用SNMP协议和端口`161`进行搜索，然后获得以下结果：
- en: '![](assets/f5f7f1fe-e4fd-4ced-8d3f-5fd6802d5712.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f5f7f1fe-e4fd-4ced-8d3f-5fd6802d5712.png)'
- en: 'An interesting tool to check for connection with SNMP servers and obtain the
    value of the SNMP variable is the `snmp-get` that is available for both Windows
    and Unix environments:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的工具，用于检查与SNMP服务器的连接并获取SNMP变量的值，是`snmp-get`，它适用于Windows和Unix环境：
- en: '[https://snmpsoft.com/shell-tools/snmp-get/](https://snmpsoft.com/shell-tools/snmp-get/)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://snmpsoft.com/shell-tools/snmp-get/](https://snmpsoft.com/shell-tools/snmp-get/)'
- en: With **SnmpGet** for Windows, we can obtain information about SNMP servers.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Windows的**SnmpGet**，我们可以获取有关SNMP服务器的信息。
- en: In the following screenshot, we can see command-line parameters for this tool.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的截图中，我们可以看到这个工具的命令行参数。
- en: '![](assets/3bbda7d1-2b15-454b-854c-ab28b72cb10c.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3bbda7d1-2b15-454b-854c-ab28b72cb10c.png)'
- en: 'Also, a similar tool is available for the Ubuntu operating system:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Ubuntu操作系统也有类似的工具：
- en: '[http://manpages.ubuntu.com/manpages/bionic/man1/snmpget.1.html](http://manpages.ubuntu.com/manpages/bionic/man1/snmpget.1.html)'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://manpages.ubuntu.com/manpages/bionic/man1/snmpget.1.html](http://manpages.ubuntu.com/manpages/bionic/man1/snmpget.1.html)'
- en: Summary
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: One of the objectives of this chapter has been to describe the modules that
    allow us to connect with FTP, SSH, and SNMP servers. In this chapter, we have
    come across several network protocols and Python libraries, which are used for
    interacting with remote systems. Also, we explored how to perform network monitoring
    via SNMP. We used the PySNMP module to simplify and automate our SNMP queries.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的一个目标是描述允许我们连接到FTP、SSH和SNMP服务器的模块。在本章中，我们遇到了几种网络协议和Python库，用于与远程系统进行交互。此外，我们探讨了如何通过SNMP执行网络监控。我们使用PySNMP模块简化和自动化了我们的SNMP查询。
- en: In the next [chapter](ee538860-9660-4043-9296-143e62f27a61.xhtml), we will explore
    programming packages for working with Nmap scanners and obtain more information
    about services and vulnerabilities that are running on servers.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一[章节](ee538860-9660-4043-9296-143e62f27a61.xhtml)中，我们将探索用于与Nmap扫描仪一起工作的编程包，并获取有关正在运行的服务器上的服务和漏洞的更多信息。
- en: Questions
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is the way to connect to an FTP server using the ftplib module through
    the `connect()` and `login()` methods?
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`connect()`和`login()`方法连接到FTP服务器的ftplib模块的方法是什么？
- en: What method of the ftplib module allows it to list the files of an FTP server?
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ftplib模块的哪种方法允许其列出FTP服务器的文件？
- en: What method of the Paramiko module allows us to connect to an SSH server and
    with what parameters (host, username, password)?
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Paramiko模块的哪种方法允许我们连接到SSH服务器，以及使用什么参数（主机、用户名、密码）？
- en: What method of the Paramiko module allows us to open a session to be able to
    execute commands subsequently?
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Paramiko模块的哪种方法允许我们打开一个会话以便随后执行命令？
- en: What is the way to log in against an SSH server with an RSA certificate from
    which we know your route and password?
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们知道其路径和密码的RSA证书登录到SSH服务器的方式是什么？
- en: What is the main class of the PySNMP module that allows queries on SNMP agents?
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: PySNMP模块的主要类是允许对SNMP代理进行查询的类是什么？
- en: What is the instruction to inform Paramiko to accept server keys for the first
    time without interrupting the session or prompting the user?
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何通知Paramiko在第一次接受服务器密钥而不中断会话或提示用户的指令是什么？
- en: What is the way to connect to an SSH server through the `Transport()` method
    that provides another type of object to authenticate against the server?
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过`Transport()`方法连接到SSH服务器的方式是提供另一种对象来对服务器进行身份验证。
- en: What is the Python FTP module, based in Paramiko, that provides a connection
    with FTP servers in a secure way?
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 基于Paramiko的Python FTP模块是以安全方式与FTP服务器建立连接的模块是什么？
- en: What is the method from ftplib we need to use to download files, and what is
    the `ftp` command we need to execute?
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要使用ftplib的哪种方法来下载文件，以及我们需要执行的`ftp`命令是什么？
- en: Further reading
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'In these links you will find more information about mentioned tools and official
    Python documentation for searching into some of the mentioned modules:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些链接中，您将找到有关提到的工具的更多信息以及用于搜索一些提到的模块的官方Python文档：
- en: '[http://www.paramiko.org](http://www.paramiko.org)'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.paramiko.org](http://www.paramiko.org)'
- en: '[http://pexpect.readthedocs.io/en/stable/api/pxssh.html](http://pexpect.readthedocs.io/en/stable/api/pxssh.html)'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pexpect.readthedocs.io/en/stable/api/pxssh.html](http://pexpect.readthedocs.io/en/stable/api/pxssh.html)'
- en: '[http://pysnmp.sourceforge.net/quick-start.html](http://pysnmp.sourceforge.net/quick-start.html)'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pysnmp.sourceforge.net/quick-start.html](http://pysnmp.sourceforge.net/quick-start.html)'
- en: For readers interested in deepening their understanding about how to create
    a tunnel to a remote server with Paramiko, you can  check the **sshtunnel** module
    available in the PyPI repository:[ https://pypi.org/project/sshtunnel/](https://pypi.org/project/sshtunnel/).
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 对于对如何使用Paramiko创建到远程服务器的隧道感兴趣的读者，可以在PyPI存储库中检查**sshtunnel**模块：[ https://pypi.org/project/sshtunnel/](https://pypi.org/project/sshtunnel/)。
- en: Documentation and examples are available in the GitHub repository: [https://github.com/pahaz/sshtunnel.](https://github.com/pahaz/sshtunnel)
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 文档和示例可在GitHub存储库中找到：[https://github.com/pahaz/sshtunnel.](https://github.com/pahaz/sshtunnel)
