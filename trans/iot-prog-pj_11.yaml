- en: Creating a Doorbell Button Using Bluetooth
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用蓝牙创建门铃按钮
- en: In this chapter, we will turn our focus to Bluetooth. Bluetooth is a wireless
    technology used in the exchange of data over short distances. It operates in the
    2.4 to 2.485 GHz frequency band, and generally has a range of up to 10 meters.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将把重点转向蓝牙。蓝牙是一种无线技术，用于在短距离内交换数据。它在2.4到2.485 GHz频段运行，通常的范围为10米。
- en: We will be utilizing the Blue Dot app on Android for the projects in this chapter,
    in which we will build a simple Bluetooth doorbell, before building a more advanced
    one that accepts secret swiping gestures.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的项目中，我们将使用安卓上的蓝点应用程序，首先构建一个简单的蓝牙门铃，然后构建一个接受秘密滑动手势的更高级的门铃。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Introducing Blue Dot
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍蓝点
- en: What is an RGB LED?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RGB LED是什么？
- en: Reading our button state using Bluetooth and Python
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用蓝牙和Python读取我们的按钮状态
- en: Project overview
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目概述
- en: In this chapter, we will build a Bluetooth-enabled doorbell using our Raspberry
    Pi and an Android phone or tablet. We will use an app on our Android phone or
    tablet, called Blue Dot, which is designed to work with Raspberry Pi projects.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将使用树莓派和安卓手机或平板电脑构建一个蓝牙门铃。我们将使用安卓手机或平板电脑上的一个名为蓝点的应用程序，该应用程序专为树莓派项目设计。
- en: We will start off by looking at RGB LEDs, wherein we will write a small program
    to cycle through these three colors. We will then create an alarm using a RGB
    LED and an active buzzer. We will test out the alarm with Python code.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从RGB LED开始，编写一个小程序来循环显示这三种颜色。然后，我们将使用RGB LED和有源蜂鸣器创建一个警报。我们将使用Python代码测试警报。
- en: We will write Python code to read button information from Blue Dot. We will
    then incorporate the code from both the alarm and Blue Dot to create a Bluetooth
    doorbell system.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将编写Python代码来从蓝点读取按钮信息。然后，我们将结合警报和蓝点的代码来创建一个蓝牙门铃系统。
- en: The projects in this chapter should take a morning or afternoon to complete.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的项目应该需要一个上午或下午的时间来完成。
- en: Getting started
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 入门
- en: 'The following is required to complete this project:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此项目需要以下内容：
- en: Raspberry Pi Model 3 (2015 model or newer)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派3型号（2015年或更新型号）
- en: USB power supply
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB电源适配器
- en: Computer monitor
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算机显示器
- en: USB keyboard
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB键盘
- en: USB mouse
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: USB鼠标
- en: Breadboard
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面包板
- en: Jumper wires
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳线线
- en: 330 Ohm resistors (3 of them)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 330欧姆电阻器（3个）
- en: RGB LED
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RGB LED
- en: Active buzzer
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有源蜂鸣器
- en: Android phone or tablet
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安卓手机或平板电脑
- en: Introducing Blue Dot
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍蓝点
- en: 'Blue Dot is an Android app available in the Google Play Store. It works as
    a Bluetooth remote for the Raspberry Pi. When loaded into your Android phone or
    tablet, it is basically a big blue dot that you press to send a signal to the
    Raspberry Pi. The following is a picture of the Blue Dot app loaded onto a tablet:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 蓝点是一个安卓应用程序，可在Google Play商店中获得。它可以作为树莓派的蓝牙遥控器。加载到您的安卓手机或平板电脑后，它基本上是一个大蓝点，您按下它就会向树莓派发送信号。以下是一个加载到平板电脑上的蓝点应用程序的图片：
- en: '![](assets/cd63e306-d53d-4de9-b93e-d4dd48adb03e.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/cd63e306-d53d-4de9-b93e-d4dd48adb03e.png)'
- en: It may be used as a Bluetooth joystick of sorts, as positional, slider, and
    rotational data may be sent from the app to your Raspberry Pi, depending on how
    you interact with the dot on the screen. We will add some of this functionality
    to our doorbell application by creating custom rings based on how the Blue Dot
    is pressed. To install Blue Dot on your Android phone or tablet, visit the Google
    Play Store and search for Blue Dot.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以作为一种蓝牙操纵杆，因为根据您如何与屏幕上的点交互，位置、滑块和旋转数据可以从应用程序发送到您的树莓派。我们将通过根据蓝点的按压方式创建自定义铃声，将一些功能添加到我们的门铃应用程序中。要在安卓手机或平板电脑上安装蓝点，请访问Google
    Play商店并搜索蓝点。
- en: Installing the bluedot library on the Raspberry Pi
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在树莓派上安装bluedot库
- en: 'To install the `bluedot` library on the Raspberry Pi, do the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要在树莓派上安装`bluedot`库，请执行以下操作：
- en: Open up a Terminal app
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端应用程序
- en: 'Type the following into the Terminal:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中输入以下内容：
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Press *Enter* to install the library
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Enter*安装库
- en: Pairing Blue Dot with your Raspberry Pi
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将蓝点与您的树莓派配对
- en: 'In order to make use of the Blue Dot app, you must pair it to your Raspberry
    Pi. To do that, follow these steps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用蓝点应用程序，您必须将其与树莓派配对。要做到这一点，请按照以下步骤操作：
- en: 'From the top-right corner of the Raspbian desktop client, click on the Bluetooth
    symbol:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从树莓派桌面客户端的右上角，点击蓝牙符号：
- en: '![](assets/ea7c6ad0-ba64-4e00-a079-5f13c8a6e92f.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ea7c6ad0-ba64-4e00-a079-5f13c8a6e92f.png)'
- en: If Bluetooth is not on, click on the Bluetooth icon and select Turn on Bluetooth
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果蓝牙未打开，请点击蓝牙图标，然后选择打开蓝牙
- en: Select the Make Discoverable option from the Bluetooth drop-down menu
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从蓝牙下拉菜单中选择“使可发现”
- en: On your Android phone or tablet, go to the Bluetooth settings (this may be in
    different places depending on the particular OS on the phone or tablet)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的安卓手机或平板电脑上，转到蓝牙设置（这可能在手机或平板电脑上的特定操作系统上有不同的位置）
- en: You should be able to see the Raspberry Pi in the Available Devices list
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该能够在“可用设备”列表中看到树莓派
- en: Click on it to pair your device to the Raspberry Pi
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击它以将您的设备与树莓派配对
- en: You should get a message on the Raspberry Pi, reading something like `Device
    'Galaxy Tab E' has requested a pairing. Do you accept the request?`
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该在树莓派上收到一条消息，内容类似于“设备'Galaxy Tab E'请求配对。您接受请求吗？”
- en: Click OK to accept
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“确定”接受
- en: You may get a `connection failed` message. I was able to ignore this message
    and still have the Blue Dot app work with my Raspberry Pi, so don't worry too
    much
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可能会收到“连接失败”消息。我能够忽略这条消息，仍然可以让蓝点应用程序与我的树莓派配对，所以不要太担心
- en: Load the Blue Dot app onto your Android phone or tablet
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将蓝点应用加载到您的安卓手机或平板电脑上
- en: You should see a list with the Raspberry Pi as an item
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到一个列表，其中树莓派是其中的一项
- en: Click on the Raspberry Pi item to connect the Blue Dot application to the Raspberry
    Pi
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击树莓派项目以连接蓝点应用程序到树莓派
- en: 'To test our connection, do the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试我们的连接，请执行以下操作：
- en: Open up Thonny by following Application Menu | Programming | Thonny Python IDE
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过以下方式打开Thonny：应用程序菜单 | 编程 | Thonny Python IDE
- en: Click on the New icon to create a new file
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“新建”图标创建一个新文件
- en: 'Type the following into the file:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中键入以下内容：
- en: '[PRE1]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Save the file as `bluest-test.py` and run it
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`bluest-test.py`并运行它
- en: You should get a message in the Thonny shell, reading Server started, followed
    by the Bluetooth address of the Raspberry Pi
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该在Thonny shell中收到一条消息，上面写着`服务器已启动`，然后是树莓派的蓝牙地址
- en: You should then get a message reading `Waiting for connection`
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后您会收到一条消息，上面写着`等待连接`
- en: If your Blue Dot app disconnected from the Raspberry Pi, connect it again by
    selecting the Raspberry Pi item in the list
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的蓝点应用从树莓派断开连接，请通过在列表中选择树莓派项目来重新连接
- en: Once the Blue Dot app is connected to the Raspberry Pi, you will get the message
    `Client connected`, followed by the Bluetooth address of your phone or tablet
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦蓝点应用连接到树莓派，您将收到消息`客户端已连接`，然后是您手机或平板电脑的蓝牙地址
- en: Press the big Blue Dot
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下大蓝点
- en: The Thonny shell should now print the following message: `Thank you for pressing
    the Blue Dot!`
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Thonny shell现在应该打印以下消息：`感谢您按下蓝点！`
- en: Wiring up our circuit
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接线我们的电路
- en: We will create a doorbell circuit using an active buzzer and an RGB LED. Since
    we have not discussed RGB LEDs before, we will take a quick look at this amazing
    little electronic component. We then write a simple test program, using our Raspberry
    Pi, that will light up the RGB LED and sound the active buzzer.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用有源蜂鸣器和RGB LED创建一个门铃电路。由于我们之前没有讨论过RGB LED，我们将快速看一下这个令人惊叹的小电子元件。然后，我们使用树莓派编写一个简单的测试程序，点亮RGB
    LED并发出有源蜂鸣器的声音。
- en: What is an RGB LED?
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是RGB LED？
- en: 'An RGB LED is really just three LEDs in one unit: a red one, a green one, and
    a blue one. Almost any color may be achieved by applying electric current at varying
    power levels across the selection of input pins. The following is a diagram of
    such an LED:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: RGB LED实际上只是一个单元内的三个LED：一个红色，一个绿色，一个蓝色。通过在输入引脚的选择上以不同的功率电流来实现几乎可以达到任何颜色。以下是这样一个LED的图示：
- en: '![](assets/bab49a3e-0a0e-40e3-88f5-1ac80a3ed730.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/bab49a3e-0a0e-40e3-88f5-1ac80a3ed730.png)'
- en: As you can see there are red, green, and blue pins, plus a negative pin (-)
    . When an RGB LED has a negative pin (-), it is said to have a common cathode.
    Some RGB LEDs have a common positive pin (+), and, as such, are referred to as
    having a common anode. For our circuit, we will use an RGB LED with a common cathode.
    Both the common cathode and common anode have the longest pins of the RGB LED,
    and are identified by this characteristic.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到有红色、绿色和蓝色引脚，还有一个负极引脚（-）。当RGB LED有一个负极引脚（-）时，它被称为共阴极。一些RGB LED有一个共阳极引脚（+），因此被称为共阳极。对于我们的电路，我们将使用一个共阴极的RGB
    LED。共阴极和共阳极都有RGB LED的最长引脚，并且通过这个特征来识别。
- en: Testing our RGB LED
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试我们的RGB LED
- en: 'We will now build a circuit with which we can test our RGB LED. The following
    is a wiring diagram of our circuit:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将建立一个电路，用它我们可以测试我们的RGB LED。以下是我们电路的接线图：
- en: '![](assets/361e3f94-6df6-439c-8bd9-633b15fd5b39.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/361e3f94-6df6-439c-8bd9-633b15fd5b39.png)'
- en: 'To build the circuit as shown in the diagram, do the following:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要按照图中所示的电路搭建，请执行以下操作：
- en: Using a breadboard, insert the RGB LED into the breadboard, such that the common
    cathode is inserted into the second slot from the left
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用面包板，将RGB LED插入面包板，使得共阴极插入到左边第二个插槽中
- en: Connect a 330 Ohm resistor to the red, green, and blue pins across the central
    gap on the breadboard
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将330欧姆电阻器连接到面包板中央间隙上的红色、绿色和蓝色引脚
- en: Connect a female-to-male jumper wire from GPIO pin 17 to the first slot on the
    left of the breadboard
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从GPIO引脚17连接一根母对公跳线到面包板左侧的第一个插槽
- en: Connect a female-to-male jumper wire from GPIO GND to the cathode pin of the
    RGB LED (the second from the left)
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从GPIO GND连接一根母对公跳线到RGB LED的阴极引脚（从左边数第二个）
- en: Connect a female-to-male jumper wire from GPIO pin 27 to the third slot on the
    left of the breadboard
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从GPIO引脚27连接一根母对公跳线到面包板左侧的第三个插槽
- en: Connect a female-to-male jumper wire from GPIO pin 22 to the fourth slot on
    the left of the breadboard
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从GPIO引脚22连接一根母对公跳线到面包板左侧的第四个插槽
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单 | 编程 | Thonny Python IDE中打开Thonny
- en: Click on the New icon to create a new file
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“新建”图标创建一个新文件
- en: 'Type the following into the file:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中键入以下内容：
- en: '[PRE2]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Save the file as `RGB-LED-test.py` and run it
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`RGB-LED-test.py`并运行它
- en: You should see the RGB LED light up in red for 2 seconds. The RGB LED should
    then light up green for 2 seconds, before turning blue for 2 seconds. It will
    then turn off for 2 seconds, before starting the sequence again.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到RGB LED在红色亮起2秒钟。然后RGB LED应该在绿色亮起2秒钟，然后在蓝色亮起2秒钟。然后它将在2秒钟内关闭，然后再次开始序列。
- en: In the code, we start off by importing `RGBLED` from the GPIO Zero library.
    We then set up a variable, called `led`, by assigning it the pin numbers for the
    red, green, and blue colors of the RGB LED. From there, we simply turn on each
    color using the `led.color` property. It's easy to see that assigning a value
    of `1, 0, 0` to the `led.color` property turns on the red LED and turns off the
    green and blue LEDs. The `led.off` method turns off the RGB LED.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码中，我们首先从GPIO Zero库导入`RGBLED`。然后，我们通过为RGB LED的红色、绿色和蓝色分配引脚号来设置一个名为`led`的变量。从那里，我们只需使用`led.color`属性打开每种颜色。很容易看出，将值`1,
    0, 0`分配给`led.color`属性会打开红色LED并关闭绿色和蓝色LED。`led.off`方法关闭RGB LED。
- en: Try experimenting with different values for `led.color`. You may even put in
    a value that is less than `1` to vary the intensity of the color (the range is
    any value between `0` and `1`). If you look closely, you may be able to see the
    different LEDs lighting up inside the RGB LED.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试尝试不同的`led.color`值。您甚至可以输入小于`1`的值来改变颜色的强度（范围是`0`到`1`之间的任何值）。如果您仔细观察，您可能能够看到RGB
    LED内部不同的LED灯亮起。
- en: Completing our doorbell circuit
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 完成我们的门铃电路
- en: 'Now let''s add an active buzzer to our circuit to complete the construction
    of our doorbell system. The following is the diagram for our doorbell circuit:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们向我们的电路中添加一个有源蜂鸣器，以完成我们门铃系统的构建。以下是我们门铃电路的图表：
- en: '![](assets/f9a0218c-a5dd-465a-8d20-96247a7807d6.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/f9a0218c-a5dd-465a-8d20-96247a7807d6.png)'
- en: 'To build the circuit, follow these steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建电路，请按照以下步骤进行：
- en: Using our existing circuit, insert an active buzzer into the opposite end of
    the breadboard
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用我们现有的电路，在面包板的另一端插入一个有源蜂鸣器
- en: Connect a female-to-male jumper wire from GPIO pin 26 to the positive pin of
    the active buzzer
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将母对公跳线从GPIO引脚26连接到有源蜂鸣器的正引脚
- en: Connect a female-to-male jumper wire from GPIO GND to the negative pin of the
    active buzzer
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将母对公跳线从GPIO GND连接到有源蜂鸣器的负引脚
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单中打开Thonny |编程| Thonny Python IDE
- en: Click on the New icon to create a new file
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击新图标创建新文件
- en: 'Type the following into the file:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中键入以下内容：
- en: '[PRE3]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Save the file as `DoorbellAlarm.py` and run it
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`DoorbellAlarm.py`并运行它
- en: You should hear the buzzer go off five times, as well as see the RGB LED go
    through its light sequence the same number of times
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该听到蜂鸣器响了五次，并且RGB LED也应该按相同的次数进行灯光序列
- en: 'Let''s take a look at the code:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看代码：
- en: 'We start off by importing the libraries that we need, as follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先通过导入所需的库来开始：
- en: '[PRE4]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'After that, we create our class with the `DoorbellAlarm` classname, before
    setting initial values:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们使用`DoorbellAlarm`类名创建我们的类，然后设置初始值：
- en: '[PRE5]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The class initialization sets the number of times that the alarm sequence will
    play, using the `num_of_times` class variable:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 类初始化使用`num_of_times`类变量设置警报序列将播放的次数：
- en: '[PRE6]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `light_show` method simply flashes each color in the RGB LED in sequence for
    `0.1` seconds:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`light_show`方法只是按顺序闪烁RGB LED中的每种颜色，持续`0.1`秒：'
- en: '[PRE7]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `play_sequence` method turns the buzzer on and off for the number of times
    set when the `DoorbellAlarm` class is initialized. It also runs through the RGB
    LED `light_show` function every time the buzzer is sounded:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`play_sequence`方法打开和关闭蜂鸣器的次数设置在初始化`DoorbellAlarm`类时。每次蜂鸣器响起时，它还会运行RGB LED `light_show`函数：'
- en: '[PRE8]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'We test out our code by instantiating the `DoorbellAlarm` class with a value
    of `5`, and assigning it to the `doorbell_alarm` variable. We then play the sequence
    by calling the `play_sequence` method:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们通过用值`5`实例化`DoorbellAlarm`类并将其分配给`doorbell_alarm`变量来测试我们的代码。然后通过调用`play_sequence`方法来播放序列：
- en: '[PRE9]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Reading our button state using Bluetooth and Python
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用蓝牙和Python读取我们的按钮状态
- en: As mentioned previously, we are able to interact with the Blue Dot app in more
    ways than just a simple button press. The Blue Dot app can interpret where on
    the button a user presses, as well as detect double presses and swipes. In the
    following code, we will read from the Blue Dot app using Python.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们能够以更多方式与Blue Dot应用进行交互，而不仅仅是简单的按钮按下。Blue Dot应用可以解释用户在按钮上按下的位置，以及检测双击和滑动。在以下代码中，我们将使用Python从Blue
    Dot应用中读取。
- en: Reading button information using Python
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python读取按钮信息
- en: 'Do the following :'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 做以下事情：
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单中打开Thonny |编程| Thonny Python IDE
- en: Click on the New icon to create a new file
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击新图标创建新文件
- en: 'Type the following into the file:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中键入以下内容：
- en: '[PRE10]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Save the file as `BlueDotButton.py` and run it
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`BlueDotButton.py`并运行它
- en: You may have to connect the Blue Dot app to your Raspberry Pi each time you
    run this program (simply select it from the list in the Blue Dot app). Try pressing
    the Blue Dot in the middle, on the top, on the left, and so on. You should see
    messages in the shell that tell you where you've pressed. Now try swiping and
    double-pressing. The messages in the shell should indicate these gestures as well.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 每次运行此程序时，您可能需要将Blue Dot应用连接到您的Raspberry Pi（只需从Blue Dot应用中的列表中选择它）。尝试在中间，顶部，左侧等处按下Blue
    Dot。您应该在shell中看到告诉您按下的位置的消息。现在尝试滑动和双击。shell中的消息也应指示这些手势。
- en: 'So, what have we done here? Let''s take a look at the code:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们在这里做了什么？让我们来看看代码：
- en: 'We start off by importing the libraries that we need:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们首先通过导入所需的库来开始：
- en: '[PRE11]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: We obviously need `BlueDot`, and we also need `pause`. We use `pause` to pause
    the program and wait for a signal from the Blue Dot app. Since we are using the
    `when_pressed`, `when_swiped`, and `when_double_swiped` events, we need to pause
    and wait (as opposed to other methods, such as `wait_for_press`). I believe using
    `when`-instead of `wait`-type events makes the code a little cleaner.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我们显然需要`BlueDot`，我们还需要`pause`。我们使用`pause`来暂停程序，并等待来自Blue Dot应用的信号。由于我们正在使用`when_pressed`，`when_swiped`和`when_double_swiped`事件，我们需要暂停和等待（而不是其他方法，如`wait_for_press`）。我相信使用`when`而不是`wait`类型的事件使代码更清晰。
- en: 'At the heart of our program is the instantiation of a `BlueDot` object and
    its related call back definitions:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的程序的核心是实例化`BlueDot`对象及其相关的回调定义：
- en: '[PRE12]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Please note that these callback definitions have to be put after the methods
    they are referring to, or you will get an error.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这些回调定义必须放在它们所引用的方法之后，否则将会出错。
- en: 'The methods themselves are pretty straightforward. The following is the `swiped`
    method:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 方法本身非常简单。以下是`swiped`方法：
- en: '[PRE13]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We define this method with a variable called `swipe` inside the method signature.
    Note that we do not have to use `self` inside the method signature, as we are
    not using class variables inside our methods.
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用方法定义了一个名为`swipe`的变量。请注意，在方法签名中我们不必使用`self`，因为我们在方法中没有使用类变量。
- en: Creating a Bluetooth doorbell
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建蓝牙门铃
- en: 'Now that we know how to read button information from Blue Dot, we can build
    a Bluetooth doorbell button. We will rewrite our `DoorbellAlarm` class, and use
    a simple button press from Blue Dot to activate the alarm, as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道如何从Blue Dot读取按钮信息，我们可以构建一个蓝牙门铃按钮。我们将重写我们的`DoorbellAlarm`类，并使用来自Blue Dot的简单按钮按下来激活警报，如下所示：
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单中打开Thonny | 编程 | Thonny Python IDE
- en: Click on the New icon to create a new file
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击新图标创建新文件
- en: 'Type the following into the file:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中键入以下内容：
- en: '[PRE14]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Save the file as `DoorbellAlarmAdvanced.py`
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`DoorbellAlarmAdvanced.py`
- en: Our new class, `DoorbellAlarmAdvanced`, is a modified version of the `DoorbellAlarm`
    class. What we have done is basically add a new class property that we call `delay`.
    This class property will be used to change the delay time between buzzer rings.
    As you can see in the code, the two methods modified for the change are `__init__`
    and `play_sequence`**.**
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新类`DoorbellAlarmAdvanced`是`DoorbellAlarm`类的修改版本。我们所做的基本上是添加了一个我们称之为`delay`的新类属性。这个类属性将用于改变蜂鸣器响铃之间的延迟时间。正如您在代码中看到的，为了进行这一更改而修改的两个方法是`__init__`和`play_sequence`**。**
- en: 'Now that we have the changes in place for our alarm, let''s create a simple
    doorbell program as follows:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对我们的警报进行了更改，让我们创建一个简单的门铃程序如下：
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单中打开Thonny | 编程 | Thonny Python IDE
- en: Click on the New icon to create a new file
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击新图标创建新文件
- en: 'Type the following into the file:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中键入以下内容：
- en: '[PRE15]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Save the file as `SimpleDoorbell.py` and run it
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`SimpleDoorbell.py`并运行
- en: Connect the Blue Dot app to the Raspberry Pi, if it is not already connected
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将蓝点应用程序连接到树莓派，如果尚未连接
- en: Push the big blue dot
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下大蓝点
- en: You should hear five rings, each lasting one second, from the buzzer in one-second
    intervals. You will also see that the RGB LED went through a short light show.
    As you can see, the code is pretty straightforward. We import our new `DoorbellAlarmAdvanced`
    class, and then call the `play_sequence` method after we initialize the class
    with the `doorbell_alarm` variable in the `pressed` method.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该听到五声持续一秒钟的响铃，每隔一秒钟响一次。您还会看到RGB LED经历了一个短暂的灯光秀。正如您所看到的，代码非常简单。我们导入我们的新`DoorbellAlarmAdvanced`类，然后在`pressed`方法中使用`doorbell_alarm`变量初始化类后调用`play_sequence`方法。
- en: The changes we made in creating the `DoorbellAlarmAdvanced` class are utilized
    in our code to allow us to set the delay time between rings.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在创建`DoorbellAlarmAdvanced`类时所做的更改被用于我们的代码，以允许我们设置响铃之间的延迟时间。
- en: Creating a secret Bluetooth doorbell
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个秘密蓝牙门铃
- en: 'Wouldn''t it be nice to know who is at the door before we answer it? We can
    take advantage of the swiping capabilities of the Blue Dot app. To create a secret
    Bluetooth doorbell (the secret being the way in which we interact with the doorbell,
    not a secret location for the doorbell), do the following:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们回答门铃之前知道谁在门口会不会很好？我们可以利用蓝点应用程序的滑动功能。要创建一个秘密的蓝牙门铃（秘密是我们与门铃互动的方式，而不是门铃的秘密位置），请执行以下操作：
- en: Open up Thonny from Application Menu | Programming | Thonny Python IDE
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从应用程序菜单中打开Thonny | 编程 | Thonny Python IDE
- en: Click on the New icon to create a new file
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击新图标创建新文件
- en: 'Type the following into the file:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在文件中键入以下内容：
- en: '[PRE16]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Save the file as `SecretDoorbell.py` and run it
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件保存为`SecretDoorbell.py`并运行
- en: Connect the Blue Dot app to the Raspberry Pi, if it is not already connected
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将蓝点应用程序连接到树莓派，如果尚未连接
- en: Swipe in the up direction on the Blue Dot
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向上滑动蓝点
- en: You should hear five short rings, as well as seeing the RGB LED light show.
    Try swiping in the down, left, and right directions. You should get a different
    ring sequence each time.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该听到五声短促的响铃，同时看到RGB LED的灯光秀。尝试向下、向左和向右滑动。每次您应该得到不同的响铃序列。
- en: So, what did we do here? Basically, we attached a callback to the `when_swiped`
    event, and through `if` statements, we created new `DoorbellAlarmAdvanced` objects
    with varying initial values.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，我们在这里做了什么？基本上，我们将回调附加到`when_swiped`事件，并通过`if`语句，创建了具有不同初始值的新`DoorbellAlarmAdvanced`对象。
- en: With this project we can now know who is at the door, as we can assign various
    swipe gestures to our different friends.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个项目，我们现在可以知道谁在门口，因为我们可以为不同的朋友分配各种滑动手势。
- en: Summary
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we created a Bluetooth doorbell application using the Raspberry
    Pi and the Blue Dot Android app. We started out by learning a little bit about
    RGB LEDs, before incorporating one in an alarm circuit with an active buzzer.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们使用树莓派和蓝点安卓应用程序创建了一个蓝牙门铃应用程序。我们首先学习了一些关于RGB LED的知识，然后将其与主动蜂鸣器一起用于警报电路。
- en: With the Blue Dot app, we learned how to connect a Bluetooth button to our Raspberry
    Pi. We also learned how to use some of the Blue Dot gestures, and created a doorbell
    application with various ring durations.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 通过蓝点应用程序，我们学会了如何将蓝牙按钮连接到树莓派。我们还学会了如何使用一些蓝点手势，并创建了一个具有不同响铃持续时间的门铃应用程序。
- en: In [Chapter 12](83535d5b-9fec-4d63-a0d2-ba03d1e69d56.xhtml), *Enhancing Our
    IoT Doorbell*, we will extend the functionality of our doorbell, and have a text
    message sent whenever someone presses the button.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第12章](83535d5b-9fec-4d63-a0d2-ba03d1e69d56.xhtml)中，*增强我们的物联网门铃*，我们将扩展我们的门铃功能，并在有人按下按钮时发送文本消息。
- en: Questions
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: How does an RGB LED differ from a regular LED?
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: RGB LED与普通LED有什么不同？
- en: True or false? The Blue Dot app is found in the Google Play store.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？蓝点应用程序可以在Google Play商店中找到。
- en: What is a common anode?
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是共阳极？
- en: True or false? The three colors inside the RGB LED are red, green, and yellow.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？RGB LED内的三种颜色是红色、绿色和黄色。
- en: How do you pair the Blue Dot application with the Raspberry Pi?
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何将蓝点应用程序与树莓派配对？
- en: True or false? Bluetooth is a communication technology built for extremely long
    distances.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？蓝牙是一种用于极长距离的通信技术。
- en: What is the difference between `DoorbellAlarm` and `DoorbellAlarmAdvanced`?
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`DoorbellAlarm`和`DoorbellAlarmAdvanced`之间有什么区别？'
- en: True or false? The GPIO Zero library contains a class named `RGBLED`.
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？GPIO Zero库包含一个名为`RGBLED`的类。
- en: True or false? The Blue Dot app may be used to record swipe gestures.
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正确还是错误？蓝点应用程序可以用于记录滑动手势。
- en: What is the difference between the `SimpleDoorbell` and `SecretDoorbell` classes?
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`SimpleDoorbell`和`SecretDoorbell`类之间有什么区别？'
- en: Further reading
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: To find out more about the Blue Dot Android app, visit the documentation page
    at [https://bluedot.readthedocs.io](https://bluedot.readthedocs.io).
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 要了解更多关于Blue Dot Android应用程序的信息，请访问文档页面[https://bluedot.readthedocs.io](https://bluedot.readthedocs.io)。
