["```py\npip install fabric\n```", "```py\n[root@AutomationServer ~]# which fab\n/usr/bin/fab\n```", "```py\n[root@AutomationServer ~]# python\nPython 2.7.5 (default, Aug  4 2017, 00:39:18) \n[GCC 4.8.5 20150623 (Red Hat 4.8.5-16)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from fabric.api import *\n>>>\n\n```", "```py\nrun(command, shell=True, pty=True, combine_stderr=True, quiet=False, warn_only=False, stdout=None, stderr=None)\n```", "```py\ndef run_ops():\n  output = run(\"hostname\")  \n```", "```py\nget(remote_path, local_path)\n```", "```py\ndef get_ops():\n  try:\n  get(\"/var/log/messages\",\"/root/\")\n  except:\n  pass\n```", "```py\nput(local_path, remote_path, use_sudo=False, mirror_local_mode=False, mode=None)\n```", "```py\ndef put_ops():\n  try:\n  put(\"/root/VeryImportantFile.txt\",\"/root/\")\n  except:\n  pass\n```", "```py\nsudo(command, shell=True, pty=True, combine_stderr=True, user=None, quiet=False, warn_only=False, stdout=None, stderr=None, group=None)\n```", "```py\ndef sudo_ops():\n  sudo(\"whoami\") #it should print the root even if you use another account\n```", "```py\nprompt(text, key=None, default='', validate=None)\n```", "```py\ndef prompt_ops():\n  prompt(\"please supply release name\", default=\"7.4.1708\")\n```", "```py\nreboot(wait=120)\n```", "```py\ndef reboot_ops():\n  reboot(wait=60, use_sudo=True) \n```", "```py\nfrom fabric.api import *\n```", "```py\nenv.hosts = [\n  '10.10.10.140', # ubuntu machine\n  '10.10.10.193', # CentOS machine ]   env.user = \"root\"  env.password = \"access123\" \n```", "```py\nfrom fabric.api import *    env.hosts = [\n  '10.10.10.140', # ubuntu machine\n  '10.10.10.193', # CentOS machine ]   env.user = \"root\" env.password = \"access123\"   def detect_host_type():\n  output = run(\"uname -s\")   if output.failed:\n  print(\"something wrong happen, please check the logs\")   elif output.succeeded:\n  print(\"command executed successfully\")   def list_all_files_in_directory():\n  directory = prompt(\"please enter full path to the directory to list\", default=\"/root\")\n  sudo(\"cd {0} ; ls -htlr\".format(directory))     def main_tasks():\n  detect_host_type()\n  list_all_files_in_directory()\n```", "```py\nfab -f </full/path/to/fabfile>.py <task_name>\n```", "```py\nfab -f fabfile_first.py main_tasks\n```", "```py\n[10.10.10.140] Executing task 'main_tasks'\n[10.10.10.140] run: uname -s\n[10.10.10.140] out: Linux\n[10.10.10.140] out: \n\ncommand executed successfully \n```", "```py\n\nplease enter full path to the directory to list [/root] /var/log/\n[10.10.10.140] sudo: cd /var/log/ ; ls -htlr\n[10.10.10.140] out: total 1.7M\n[10.10.10.140] out: drwxr-xr-x 2 root   root 4.0K Dec  7 23:54 lxd\n[10.10.10.140] out: drwxr-xr-x 2 root   root 4.0K Dec 11 15:47 sysstat\n[10.10.10.140] out: drwxr-xr-x 2 root   root 4.0K Feb 22 18:24 dist-upgrade\n[10.10.10.140] out: -rw------- 1 root   utmp    0 Feb 28 20:23 btmp\n[10.10.10.140] out: -rw-r----- 1 root   adm    31 Feb 28 20:24 dmesg\n[10.10.10.140] out: -rw-r--r-- 1 root   root  57K Feb 28 20:24 bootstrap.log\n[10.10.10.140] out: drwxr-xr-x 2 root   root 4.0K Apr  4 08:00 fsck\n[10.10.10.140] out: drwxr-xr-x 2 root   root 4.0K Apr  4 08:01 apt\n[10.10.10.140] out: -rw-r--r-- 1 root   root  32K Apr  4 08:09 faillog\n[10.10.10.140] out: drwxr-xr-x 3 root   root 4.0K Apr  4 08:09 installer\n\ncommand executed successfully\n```", "```py\n please enter full path to the directory to list [/root] /etc/sysconfig/network-scripts/ \n[10.10.10.193] sudo: cd /etc/sysconfig/network-scripts/ ; ls -htlr\n[10.10.10.193] out: total 232K\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 1.9K Apr 15  2016 ifup-TeamPort\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 1.8K Apr 15  2016 ifup-Team\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 1.6K Apr 15  2016 ifdown-TeamPort\n[10.10.10.193] out: -rw-r--r--. 1 root root  31K May  3  2017 network-functions-ipv6\n[10.10.10.193] out: -rw-r--r--. 1 root root  19K May  3  2017 network-functions\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 5.3K May  3  2017 init.ipv6-global\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 1.8K May  3  2017 ifup-wireless\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 2.7K May  3  2017 ifup-tunnel\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 3.3K May  3  2017 ifup-sit\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 2.0K May  3  2017 ifup-routes\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 4.1K May  3  2017 ifup-ppp\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 3.4K May  3  2017 ifup-post\n[10.10.10.193] out: -rwxr-xr-x. 1 root root 1.1K May  3  2017 ifup-plusb\n\n<***output omitted for brevity>***\n```", "```py\n[10.10.10.193] out: \n\nDone.\nDisconnecting from 10.10.10.140... done.\nDisconnecting from 10.10.10.193... done.\n```", "```py\nfab -H srv1,srv2\n```", "```py\nfab -H srv1,srv2 -- ifconfig -a\n```", "```py\n# fab -f fabfile_first.py -l\nAvailable commands:\n\n    detect_host_type\n    list_all_files_in_directory\n    main_tasks\n```", "```py\n#!/usr/bin/python __author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"   from fabric.api import * from fabric.context_managers import * from pprint import pprint\n\nenv.hosts = [\n  '10.10.10.140', # Ubuntu Machine\n  '10.10.10.193', # CentOS Machine ]   env.user = \"root\" env.password = \"access123\"     def get_system_health():    discovery_commands = {\n  \"uptime\": \"uptime | awk '{print $3,$4}'\",\n  \"hostname\": \"hostname\",\n  \"kernel_release\": \"uname -r\",\n  \"architecture\": \"uname -m\",\n  \"internal_ip\": \"hostname -I\",\n  \"external_ip\": \"curl -s ipecho.net/plain;echo\",      }\n  health_commands = {\n  \"used_memory\": \"free  | awk '{print $3}' | grep -v free | head -n1\",\n  \"free_memory\": \"free  | awk '{print $4}' | grep -v shared | head -n1\",\n  \"cpu_usr_percentage\": \"mpstat | grep -A 1 '%usr' | tail -n1 | awk '{print $4}'\",\n  \"number_of_process\": \"ps -A --no-headers | wc -l\",\n  \"logged_users\": \"who\",\n  \"top_load_average\": \"top -n 1 -b | grep 'load average:' | awk '{print $10 $11 $12}'\",\n  \"disk_usage\": \"df -h| egrep 'Filesystem|/dev/sda*|nvme*'\"    }    tasks = [discovery_commands,health_commands]    for task in tasks:\n  for operation,command in task.iteritems():\n  print(\"============================={0}=============================\".format(operation))\n  output = run(command)\n```", "```py\n# fab -f fabfile_discoveryAndHealth.py get_system_health\n[10.10.10.140] Executing task 'get_system_health'\n=============================uptime=============================\n[10.10.10.140] run: uptime | awk '{print $3,$4}'\n[10.10.10.140] out: 3:26, 2\n[10.10.10.140] out: \n\n=============================kernel_release=============================\n[10.10.10.140] run: uname -r\n[10.10.10.140] out: 4.4.0-116-generic\n[10.10.10.140] out: \n\n=============================external_ip=============================\n[10.10.10.140] run: curl -s ipecho.net/plain;echo\n[10.10.10.140] out: <Author_Masked_The_Output_For_Privacy>\n[10.10.10.140] out: \n\n=============================hostname=============================\n[10.10.10.140] run: hostname\n[10.10.10.140] out: ubuntu-machine\n[10.10.10.140] out: \n\n=============================internal_ip=============================\n[10.10.10.140] run: hostname -I\n[10.10.10.140] out: 10.10.10.140 \n[10.10.10.140] out: \n\n=============================architecture=============================\n[10.10.10.140] run: uname -m\n[10.10.10.140] out: x86_64\n[10.10.10.140] out: \n\n=============================disk_usage=============================\n[10.10.10.140] run: df -h| egrep 'Filesystem|/dev/sda*|nvme*'\n[10.10.10.140] out: Filesystem                            Size  Used Avail Use% Mounted on\n[10.10.10.140] out: /dev/sda1                             472M   58M  390M  13% /boot\n[10.10.10.140] out: \n\n=============================used_memory=============================\n[10.10.10.140] run: free  | awk '{print $3}' | grep -v free | head -n1\n[10.10.10.140] out: 75416\n[10.10.10.140] out: \n\n=============================logged_users=============================\n[10.10.10.140] run: who\n[10.10.10.140] out: root     pts/0        2018-04-08 23:36 (10.10.10.130)\n[10.10.10.140] out: root     pts/1        2018-04-08 21:23 (10.10.10.1)\n[10.10.10.140] out: \n\n=============================top_load_average=============================\n[10.10.10.140] run: top -n 1 -b | grep 'load average:' | awk '{print $10 $11 $12}'\n[10.10.10.140] out: 0.16,0.03,0.01\n[10.10.10.140] out: \n\n=============================cpu_usr_percentage=============================\n[10.10.10.140] run: mpstat | grep -A 1 '%usr' | tail -n1 | awk '{print $4}'\n[10.10.10.140] out: 0.02\n[10.10.10.140] out: \n\n=============================number_of_process=============================\n[10.10.10.140] run: ps -A --no-headers | wc -l\n[10.10.10.140] out: 131\n[10.10.10.140] out: \n\n=============================free_memory=============================\n[10.10.10.140] run: free  | awk '{print $4}' | grep -v shared | head -n1\n[10.10.10.140] out: 5869268\n[10.10.10.140] out: \n\n```", "```py\n[10.10.10.193] Executing task 'get_system_health'\n=============================uptime=============================\n[10.10.10.193] run: uptime | awk '{print $3,$4}'\n[10.10.10.193] out: 3:26, 2\n[10.10.10.193] out: \n\n=============================kernel_release=============================\n[10.10.10.193] run: uname -r\n[10.10.10.193] out: 3.10.0-693.el7.x86_64\n[10.10.10.193] out: \n\n=============================external_ip=============================\n[10.10.10.193] run: curl -s ipecho.net/plain;echo\n[10.10.10.193] out: <Author_Masked_The_Output_For_Privacy>\n[10.10.10.193] out: \n\n=============================hostname=============================\n[10.10.10.193] run: hostname\n[10.10.10.193] out: controller329\n[10.10.10.193] out: \n\n=============================internal_ip=============================\n[10.10.10.193] run: hostname -I\n[10.10.10.193] out: 10.10.10.193 \n[10.10.10.193] out: \n\n=============================architecture=============================\n[10.10.10.193] run: uname -m\n[10.10.10.193] out: x86_64\n[10.10.10.193] out: \n\n=============================disk_usage=============================\n[10.10.10.193] run: df -h| egrep 'Filesystem|/dev/sda*|nvme*'\n[10.10.10.193] out: Filesystem               Size  Used Avail Use% Mounted on\n[10.10.10.193] out: /dev/sda1                488M   93M  360M  21% /boot\n[10.10.10.193] out: \n\n=============================used_memory=============================\n[10.10.10.193] run: free  | awk '{print $3}' | grep -v free | head -n1\n[10.10.10.193] out: 287048\n[10.10.10.193] out: \n\n=============================logged_users=============================\n[10.10.10.193] run: who\n[10.10.10.193] out: root     pts/0        2018-04-08 23:36 (10.10.10.130)\n[10.10.10.193] out: root     pts/1        2018-04-08 21:23 (10.10.10.1)\n[10.10.10.193] out: \n\n=============================top_load_average=============================\n[10.10.10.193] run: top -n 1 -b | grep 'load average:' | awk '{print $10 $11 $12}'\n[10.10.10.193] out: 0.00,0.01,0.02\n[10.10.10.193] out: \n\n=============================cpu_usr_percentage=============================\n[10.10.10.193] run: mpstat | grep -A 1 '%usr' | tail -n1 | awk '{print $4}'\n[10.10.10.193] out: 0.00\n[10.10.10.193] out: \n\n=============================number_of_process=============================\n[10.10.10.193] run: ps -A --no-headers | wc -l\n[10.10.10.193] out: 190\n[10.10.10.193] out: \n\n=============================free_memory=============================\n[10.10.10.193] run: free  | awk '{print $4}' | grep -v shared | head -n1\n[10.10.10.193] out: 32524912\n[10.10.10.193] out: \n```", "```py\nDisconnecting from 10.10.10.140... done.\nDisconnecting from 10.10.10.193... done.\n```", "```py\n#!/usr/bin/python __author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"   from fabric.api import * from fabric.context_managers import * from pprint import pprint\n\nenv.hosts = [\n  '10.10.10.140', # Ubuntu Machine\n  '10.10.10.193', # CentOS Machine ]   env.user = \"root\" env.password = \"access123\"     def discovery_commands():\n  discovery_commands = {\n  \"uptime\": \"uptime | awk '{print $3,$4}'\",\n  \"hostname\": \"hostname\",\n  \"kernel_release\": \"uname -r\",\n  \"architecture\": \"uname -m\",\n  \"internal_ip\": \"hostname -I\",\n  \"external_ip\": \"curl -s ipecho.net/plain;echo\",      }\n  for operation, command in discovery_commands.iteritems():\n  print(\"============================={0}=============================\".format(operation))\n  output = run(command)   def health_commands():\n  health_commands = {\n  \"used_memory\": \"free  | awk '{print $3}' | grep -v free | head -n1\",\n  \"free_memory\": \"free  | awk '{print $4}' | grep -v shared | head -n1\",\n  \"cpu_usr_percentage\": \"mpstat | grep -A 1 '%usr' | tail -n1 | awk '{print $4}'\",\n  \"number_of_process\": \"ps -A --no-headers | wc -l\",\n  \"logged_users\": \"who\",\n  \"top_load_average\": \"top -n 1 -b | grep 'load average:' | awk '{print $10 $11 $12}'\",\n  \"disk_usage\": \"df -h| egrep 'Filesystem|/dev/sda*|nvme*'\"    }\n  for operation, command in health_commands.iteritems():\n  print(\"============================={0}=============================\".format(operation))\n  output = run(command)   def get_system_health():\n  discovery_commands()\n  health_commands()\n```", "```py\n#!/usr/bin/python __author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"   from fabric.api import *   env.hosts = [\n  '10.10.10.140', # ubuntu machine\n  '10.10.10.193', # CentOS machine\n  '10.10.10.130', ]   env.roledefs = {\n  'webapps': ['10.10.10.140','10.10.10.193'],\n  'databases': ['10.10.10.130'], }   env.user = \"root\" env.password = \"access123\"   @roles('databases') def validate_mysql():\n  output = run(\"systemctl status mariadb\")     @roles('webapps') def validate_apache():\n  output = run(\"systemctl status httpd\") \n```", "```py\n# fab -f fabfile_roles.py validate_mysql:roles=databases\n[10.10.10.130] Executing task 'validate_mysql'\n[10.10.10.130] run: systemctl status mariadb\n[10.10.10.130] out: \u25cf mariadb.service - MariaDB database server\n[10.10.10.130] out:    Loaded: loaded (/usr/lib/systemd/system/mariadb.service; enabled; vendor preset: disabled)\n[10.10.10.130] out:    Active: active (running) since Sat 2018-04-07 19:47:35 EET; 1 day 2h ago\n<output omitted>\n```", "```py\nfrom fabric.api import *\nfrom fabric.context_managers import *   env.hosts = [\n  '10.10.10.140', # ubuntu machine\n  '10.10.10.193', # CentOS machine ]   env.user = \"root\" env.password = \"access123\"   def list_directory():\n  with cd(\"/var/log\"):\n  run(\"ls\")\n```", "```py\ndef list_directory_nested():\n  with cd(\"/var/\"):\n  with cd(\"log\"):\n  run(\"ls\")\n```", "```py\ndef uploading_file():\n  with lcd(\"/root/\"):\n  put(\"VeryImportantFile.txt\")\n```", "```py\ndef prefixing_commands():\n  with prefix(\"source ~/env/bin/activate\"):\n  sudo('pip install wheel')\n  sudo(\"pip install -r requirements.txt\")\n  sudo(\"python manage.py migrate\")\n```", "```py\nsource ~/env/bin/activate && pip install wheel\nsource ~/env/bin/activate && pip install -r requirements.txt\nsource ~/env/bin/activate && python manage.py migrate\n```", "```py\ndef change_shell_env():\n  with shell_env(test1='val1', test2='val2', test3='val3'):\n  run(\"echo $test1\") #This command run on remote host\n  run(\"echo $test2\")\n  run(\"echo $test3\")\n        local(\"echo $test1\") #This command run on local host\n```"]