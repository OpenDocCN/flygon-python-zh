["```py\nos.system(\u201cshell_command\u201d)\nsubprocess.getstatusoutput(\u201cshell_command\u201d)\n```", "```py\nimport configparser as config\nconfig.set(section, option, value)\n```", "```py\n psutil, fabric, salt, asnible, buildbot, shinken\n```", "```py\ninput() \nsys.stdin.readline()\n```", "```py\nprint(*objects, sep=' ', end='\\n', file=sys.stdout, flush=False)\n```", "```py\nSet comprehension {s**2 for s in range(10)}\nDict comprehension {n: n**2 for n in range(5)}\n```", "```py\ndf.head(number of lines) default blank \ndf.tail(number of lines) default blank\n```", "```py\n[i for i in range(10) if i%2]\n```", "```py\nwith open (\"foo\", 'w+') as foo:\nfoo.write(\"Hello!\")\nis similar to\nfoo = open (\"foo\", 'w+'):\n foo.write(\"Hello!\")\nfoo.close()\n```", "```py\nimport redef is_allowed_specific_char(string):\n charRe = re.compile(r'[^a-zA-Z0-9.]')\n string = charRe.search(string)\n return not bool(string)\n print(is_allowed_specific_char(\"ABCDEFabcdef123450\"))\n print(is_allowed_specific_char(\"*&%@#!}{\"))\n```", "```py\nHi Eric. You are a comedian. You were in Monty Python.\n```", "```py\nstr1 + str2 = HelloWorld!\nstr1 * 3 = HelloHelloHello\n```", "```py\nimport filename (import file)\nfrom filename import function1 (import specific function)\nfrom filename import function1, function2(import multiple functions)\nfrom filename import * (import all the functions)\n```", "```py\nfor val in \"string\":\n if val == \"i\":\n break\n print(val)\nprint(\"The end\")\n```", "```py\nfor val in \"string\":\n if val == \"i\":\n continue\n print(val)\nprint(\"The end\")\n```", "```py\nnum = 7\nfor index in range(num,0,-1):\nif index % 2 != 0:\nfor row in range(0,num-index):\nprint(end=\" \")\nfor row in range(0,index):\nif row % 2== 0:\nprint(\"1\",end=\" \")\nelse:\nprint(\"0\",end=\" \")\nprint()\n```", "```py\nos.commands(command_name)\nsubprocess.getstatusoutput(command_name)\n```", "```py\nimport calender\ncalendar.month(1,1)\n```", "```py\ndef file_lengthy(fname):\n with open(fname) as f:\n for i, l in enumerate(f):\n pass\n return i + 1\nprint(\"Number of lines in the file: \",file_lengthy(\"test.txt\"))\n```", "```py\ndef copy(source, destination):\n with open(source, \"w\") as fw, open(destination,\"r\") as fr:\n fw.writelines(fr)\ncopy(source_file_name1, file_name2)\n```", "```py\nfname = input(\"Enter file name: \")\nl=input(\"Enter letter to be searched:\")\nk = 0\nwith open(fname, 'r') as f:\n for line in f:\n words = line.split()\n for i in words:\n for letter in i:\n if(letter==l):\n k=k+1\nprint(\"Occurrences of the letter:\")\nprint(k)\n```", "```py\ndef append(source, destination):\n with open(source, \"a\") as fw, open(destination,\"r\") as fr:\n fw.writelines(fr)\nappend(source_file_name1, file_name2)\n```", "```py\nfilename=input(\"Enter file name: \")\nfor line in reversed(list(open(filename))):\n print(line.rstrip())\n```", "```py\n1st Input array : \n [[ 1 2 3]\n [-1 -2 -3]]\n2nd Input array : \n [[ 4 5 6]\n [-4 -5 -6]]\nOutput stacked array :\n [[ 1 2 3 4 5 6]\n [-1 -2 -3 -4 -5 -6]]\n```", "```py\nZ = np.arange(10)\nnp.add.reduce(Z)\n```", "```py\n# Delete the rows with labels 0,1,5\ndata = data.drop([0,1,2], axis=0)\n# Delete the first five rows using iloc selector\ndata = data.iloc[5:,]\n#to delete the column\ndel df.column_name\n```", "```py\ndf.to_csv(\u201cfile_name.csv\u201d,index=False, sep=\u201d,\u201d)\n```", "```py\ndf.drop_duplicates()\n```", "```py\nfrom matplotlib.pyplot import figure\nfigure(num=None, figsize=(8, 6), dpi=80, facecolor='w', edgecolor='k')\n```", "```py\nMySQLdb.connect('remote_ip', 'username', 'password', 'databasename')\n```"]