- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Greetings and salutations! This text is an introductory guide to GPU programming
    with Python and CUDA. **GPU** may stand for **Graphics Programming Unit**, but
    we should be clear that this book is *not* about graphics programming—it is essentially
    an introduction to **General-Purpose GPU Programming**, or **GPGPU** **Programming**
    for short. Over the last decade, it has become clear that GPUs are well suited
    for computations besides rendering graphics, particularly for parallel computations
    that require a great deal of computational throughput. To this end, NVIDIA released
    the CUDA Toolkit, which has made the world of GPGPU programming all the more accessible
    to just about anyone with some C programming knowledge.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 问候和祝福！本文是关于使用Python和CUDA进行GPU编程的入门指南。**GPU**可能代表**图形编程单元**，但我们应该明确，这本书*不是*关于图形编程——它本质上是**通用GPU编程**的介绍，简称为**GPGPU编程**。在过去的十年中，已经清楚地表明GPU除了渲染图形之外，也非常适合进行计算，特别是需要大量计算吞吐量的并行计算。为此，NVIDIA发布了CUDA工具包，这使得几乎任何具有一些C编程知识的人都可以更轻松地进入GPGPU编程的世界。
- en: The aim of *Hands-On GPU Programming with Python and CUDA* is to get you started
    in the world of GPGPU programming as quickly as possible. We have strived to come
    up with fun and interesting examples and exercises for each chapter; in particular,
    we encourage you to type in these examples and run them from your favorite Python
    environment as you go along (Spyder, Jupyter, and PyCharm are all suitable choices).
    This way, you will eventually learn all of the requisite functions and commands,
    as well as gain an intuition of how a GPGPU program should be written.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 《使用Python和CUDA进行GPU编程实践》的目标是尽快让您进入GPGPU编程的世界。我们努力为每一章设计了有趣和有趣的示例和练习；特别是，我们鼓励您在阅读时在您喜欢的Python环境中键入这些示例并运行它们（Spyder、Jupyter和PyCharm都是合适的选择）。这样，您最终将学会所有必要的函数和命令，并获得编写GPGPU程序的直觉。
- en: Initially, GPGPU parallel programming seems very complex and daunting, especially
    if you've only done CPU programming in the past. There are so many new concepts
    and conventions you have to learn that it may seem like you're starting all over
    again at zero. During these times, you'll have to have some faith that your efforts
    to learn this field are not for naught. With a little bit of initiative and discipline,
    this subject will seem like second nature to you by the time you reach the end
    of the text.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 最初，GPGPU并行编程似乎非常复杂和令人望而生畏，特别是如果您过去只做过CPU编程。有很多新概念和约定您必须学习，可能会让您觉得自己从零开始。在这些时候，您必须相信学习这个领域的努力不是徒劳的。通过一点主动性和纪律性，当您阅读完本文时，这个主题将对您来说变得轻而易举。
- en: Happy programming!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 愉快的编程！
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书是为谁准备的
- en: This book is aimed at one person in particular—that is, myself in the year 2014,
    when I was trying to develop a GPU-based simulation for my doctoral studies in
    math. I was poring over multiple books and manuals on GPU programming, trying
    to make the slightest sense of the field; most texts seemed happy to throw an
    endless parade of hardware schematics and buzzwords at the reader on every page,
    while the actual *programming* took a back seat.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书特别针对一个人，那就是我自己，2014年，当时我正在尝试为数学博士研究开发基于GPU的模拟。我正在研究多本关于GPU编程的书籍和手册，试图对这个领域有一点了解；大多数文本似乎乐意在每一页向读者抛出无尽的硬件原理和术语，而实际的*编程*则被放在了次要位置。
- en: This book is primarily aimed at those who want to actually *do* *GPU programming*,
    but without getting bogged down with gritty technical details and hardware schematics.
    We will program the GPU in proper C/C++ (CUDA C) in this text, but we will write
    it *inline* within Python code by way of the PyCUDA module. PyCUDA allows us to
    only write the necessary low-level GPU code that we need, while it automatically
    handles all of the redundancies of compiling, linking, and launching code onto
    a GPU for us.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书主要面向那些想要实际进行GPU编程，但不想陷入技术细节和硬件原理的人。在本书中，我们将使用适当的C/C++（CUDA C）来编程GPU，但我们将通过PyCUDA模块将其*内联*到Python代码中。PyCUDA允许我们只编写我们需要的必要低级GPU代码，同时自动处理编译、链接和在GPU上启动代码的所有冗余工作。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](f9c54d0e-6a18-49fc-b04c-d44a95e011a2.xhtml), *Why GPU Programming?*,
    gives us some motivations as to why we should learn this field, and how to apply
    Amdahl''s Law to estimate potential performance improvements from translating
    a serial program to making use of a GPU.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章《为什么要进行GPU编程？》给出了一些我们应该学习这个领域的动机，以及如何应用阿姆达尔定律来估计将串行程序转换为利用GPU的潜在性能改进。
- en: '[Chapter 2](4c7f89ab-7136-4cc1-b168-12cb78d97a6a.xhtml), *Setting Up Your GPU
    Programming Environment*, explains how to set up an appropriate Python and C++
    development environment for CUDA under both Windows and Linux.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章《设置GPU编程环境》解释了如何在Windows和Linux下设置适当的Python和C++开发环境以进行CUDA编程。
- en: '[Chapter 3](6ab0cd69-e439-4cfb-bf1a-4247ec58c94e.xhtml), *Getting Started with
    PyCUDA*, shows the most essential skills we will need for programming GPUs from
    Python. We will notably see how to transfer data to and from a GPU using PyCUDA''s
    gpuarray class, and how to compile simple CUDA kernels with PyCUDA''s ElementwiseKernel
    function.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章《使用PyCUDA入门》展示了我们在使用Python编程GPU时最基本的技能。我们将特别看到如何使用PyCUDA的gpuarray类将数据传输到GPU和从GPU传输数据，以及如何使用PyCUDA的ElementwiseKernel函数编译简单的CUDA核函数。
- en: '[Chapter 4](5a5f4317-50c7-4ce6-9d04-ac3be4c6d28b.xhtml), *Kernels, Threads,
    Blocks, and Grids*, teaches the fundamentals of writing effective CUDA kernels,
    which are parallel functions that are launched on the GPU. We will see how to
    write CUDA device functions ("serial" functions called directly by CUDA kernels),
    and learn about CUDA''s abstract grid/block structure and the role it plays in
    launching kernels.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章]（5a5f4317-50c7-4ce6-9d04-ac3be4c6d28b.xhtml），*核心，线程，块和网格*，教授了编写有效的CUDA核心的基础知识，这些核心是在GPU上启动的并行函数。我们将看到如何编写CUDA设备函数（由CUDA核心直接调用的“串行”函数），并了解CUDA的抽象网格/块结构及其在启动核心中的作用。'
- en: '[Chapter 5](ea648e20-8c72-44a9-880d-11469d0e291f.xhtml), *Streams, Events,
    Contexts, and Concurrency*, covers the notion of CUDA Streams, which is a feature
    that allows us to launch and synchronize many kernels onto a GPU concurrently.
    We will see how to use CUDA Events to time kernel launches, and how to create
    and use CUDA Contexts.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章]（ea648e20-8c72-44a9-880d-11469d0e291f.xhtml），*流，事件，上下文和并发*，涵盖了CUDA流的概念，这是一种允许我们在GPU上同时启动和同步许多内核的功能。我们将看到如何使用CUDA事件来计时内核启动，以及如何创建和使用CUDA上下文。'
- en: '[Chapter 6](6d1c808f-1dc2-4454-b0b8-d0a36bc3c908.xhtml), *Debugging and Profiling
    Your CUDA Code*, fill in some of the gaps we have in terms of pure CUDA C programming,
    and shows us how to use the NVIDIA Nsight IDE for debugging and development, as
    well as how to use the NVIDIA profiling tools.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章]（6d1c808f-1dc2-4454-b0b8-d0a36bc3c908.xhtml），*调试和分析您的CUDA代码*，填补了我们在纯CUDA
    C编程方面的一些空白，并向我们展示了如何使用NVIDIA Nsight IDE进行调试和开发，以及如何使用NVIDIA分析工具。'
- en: '[Chapter 7](55146879-4b7e-4774-9a8b-cc5c80c04ed8.xhtml), *Using the CUDA Libraries
    with Scikit-CUDA*, gives us a brief tour of some of the important standard CUDA
    libraries by way of the Python Scikit-CUDA module, including cuBLAS, cuFFT, and
    cuSOLVER.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章]（55146879-4b7e-4774-9a8b-cc5c80c04ed8.xhtml），*使用CUDA库与Scikit-CUDA*，通过Python
    Scikit-CUDA模块简要介绍了一些重要的标准CUDA库，包括cuBLAS，cuFFT和cuSOLVER。'
- en: '[Chapter 8](d374ea77-f9e5-4d38-861d-5295ef3e3fbf.xhtml), *The CUDA Device Function
    Libraries and Thrust*, shows us how to use the cuRAND and CUDA Math API libraries
    in our code, as well as how to use CUDA Thrust C++ containers.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章]（d374ea77-f9e5-4d38-861d-5295ef3e3fbf.xhtml），*CUDA设备函数库和Thrust*，向我们展示了如何在我们的代码中使用cuRAND和CUDA
    Math API库，以及如何使用CUDA Thrust C++容器。'
- en: '[Chapter 9](3562f1e0-a53d-470f-9b4d-94fa41b1b2fa.xhtml), *Implementation of
    a Deep Neural Network*, serves as a capstone in which we learn how to build an
    entire deep neural network from scratch, applying many of the ideas we have learned
    in the text.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章]（3562f1e0-a53d-470f-9b4d-94fa41b1b2fa.xhtml），*实现深度神经网络*，作为一个巅峰，我们将学习如何从头开始构建整个深度神经网络，应用我们在文本中学到的许多想法。'
- en: '[Chapter 10](5383b46f-8dc6-4e17-ab35-7f6bd35f059f.xhtml), *Working with Compiled
    GPU Code*, shows us how to interface our Python code with pre-compiled GPU code,
    using both PyCUDA and Ctypes.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章]（5383b46f-8dc6-4e17-ab35-7f6bd35f059f.xhtml），*使用已编译的GPU代码*，向我们展示了如何将我们的Python代码与预编译的GPU代码进行接口，使用PyCUDA和Ctypes。'
- en: '[Chapter 11](e853faad-3ee4-4df7-9cdb-98f74e435527.xhtml), *Performance Optimization
    in CUDA*, teaches some very low-level performance optimization tricks, especially
    in relation to CUDA, such as warp shuffling, vectorized memory access, using inline
    PTX assembly, and atomic operations.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章]（e853faad-3ee4-4df7-9cdb-98f74e435527.xhtml），*CUDA性能优化*，教授了一些非常低级的性能优化技巧，特别是与CUDA相关的技巧，例如warp
    shuffling，矢量化内存访问，使用内联PTX汇编和原子操作。'
- en: '[Chapter 12](2d464c61-de29-49fa-826a-a7437c368d6a.xhtml), *Where to Go from
    Here*, is an overview of some of the educational and career paths you will have
    that will build upon your now-solid foundation in GPU programming.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章]（2d464c61-de29-49fa-826a-a7437c368d6a.xhtml），*从这里出发*，概述了您将拥有的一些教育和职业道路，这些道路将建立在您现在扎实的GPU编程基础之上。'
- en: To get the most out of this book
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: 'This is actually quite a technical subject. To this end, we will have to make
    a few assumptions regarding the reader''s programming background. To this end,
    we will assume the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上是一个非常技术性的主题。为此，我们将不得不对读者的编程背景做一些假设。为此，我们将假设以下内容：
- en: You have an intermediate level of programming experience in Python.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您在Python中具有中级的编程经验。
- en: You are familiar with standard Python scientific packages, such as NumPy, SciPy,
    and Matplotlib.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您熟悉标准的Python科学包，如NumPy，SciPy和Matplotlib。
- en: You have an intermediate ability in any C-based programming language (C, C++,
    Java, Rust, Go, and so on).
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您具有任何基于C的编程语言的中级能力（C，C ++，Java，Rust，Go等）。
- en: You understand the concept of dynamic memory allocation in C (particularly how
    to use the C `malloc` and `free` functions.)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您了解C中的动态内存分配概念（特别是如何使用C的`malloc`和`free`函数）。
- en: 'GPU programming is mostly applicable to fields that are very scientific or
    mathematical in nature, so many (if not most) of the examples will make use of
    some math. For this reason, we are assuming that the reader has some familiarity
    with first or second-year college mathematics, including:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: GPU编程主要适用于非常科学或数学性质的领域，因此许多（如果不是大多数）示例将利用一些数学知识。因此，我们假设读者对大学一年级或二年级的数学有一定了解，包括：
- en: 'Trigonometry (the sinusoidal functions: sin, cos, tan …)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 三角学（正弦函数：sin，cos，tan…）
- en: Calculus (integrals, derivatives, gradients)
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微积分（积分，导数，梯度）
- en: Statistics (uniform and normal distributions)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统计学（均匀分布和正态分布）
- en: Linear Algebra (vectors, matrices, vector spaces, dimensionality).
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性代数（向量，矩阵，向量空间，维度）。
- en: Don't worry if you haven't learned some of these topics, or if it's been a while,
    as we will try to review some of the key programming and math concepts as we go
    along.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有学习过这些主题，或者已经有一段时间了，不要担心，因为我们将在学习过程中尝试回顾一些关键的编程和数学概念。
- en: 'We will be making another assumption here. Remember that we will be working
    only with CUDA in this text, which is a proprietary programming language for NVIDIA
    hardware. We will, therefore, need to have some specific hardware in our possession
    before we get started. So, I will assume that the reader has access to the following:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里将做另一个假设。请记住，本文中我们只会使用CUDA，这是NVIDIA硬件的专有编程语言。因此，在开始之前，我们需要拥有一些特定的硬件。因此，我假设读者可以访问以下内容：
- en: A 64-bit x86 Intel/AMD-based PC
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 64位x86英特尔/AMD PC
- en: 4 Gigabytes (GB) of RAM or more
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4 GB或更多的RAM
- en: An entry-level NVIDIA GTX 1050 GPU (Pascal Architecture) or better
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入门级NVIDIA GTX 1050 GPU（Pascal架构）或更高版本
- en: The reader should know that most older GPUs will probably work fine with most,
    if not all, examples in this text, but the examples in this text have only been
    tested on a GTX 1050 under Windows 10 and a GTX 1070 under Linux. Specific instructions
    regarding setup and configuration are given in [Chapter 2](4c7f89ab-7136-4cc1-b168-12cb78d97a6a.xhtml),
    *Setting Up Your GPU Programming Environment*.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 读者应该知道，大多数旧的GPU可能会在本文中的大多数示例中正常工作，但本文中的示例仅在Windows 10下的GTX 1050和Linux下的GTX 1070上进行了测试。有关设置和配置的具体说明在[第2章](4c7f89ab-7136-4cc1-b168-12cb78d97a6a.xhtml)中给出，*设置您的GPU编程环境*。
- en: Download the example code files
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com](http://www.packt.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，可以访问[www.packt.com/support](http://www.packt.com/support)并注册，文件将直接发送到您的邮箱。
- en: 'You can download the code files by following these steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packt.com](http://www.packt.com).
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录或注册[www.packt.com](http://www.packt.com)。
- en: Select the SUPPORT tab.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择“支持”选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“代码下载和勘误”。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名，然后按照屏幕上的说明操作。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下载文件后，请确保使用最新版本的解压缩或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR/7-Zip for Windows
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg/iZip/UnRarX for Mac
- en: 7-Zip/PeaZip for Linux
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA](https://github.com/PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA](https://github.com/PacktPublishing/Hands-On-GPU-Programming-with-Python-and-CUDA)。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自我们丰富书籍和视频目录的其他代码包，可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**上找到。去看看吧！
- en: Download the color images
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/9781788993913_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/9781788993913_ColorImages.pdf).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图像。您可以在此处下载：[http://www.packtpub.com/sites/default/files/downloads/9781788993913_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/9781788993913_ColorImages.pdf)。
- en: Conventions used
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "We can now use the `cublasSaxpy` function."'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。例如：“我们现在可以使用`cublasSaxpy`函数。”'
- en: 'A block of code is set as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会以这种方式出现在文本中。'
- en: Warnings or important notes appear like this.Tips and tricks appear like this.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的地方。提示和技巧会出现在这样的地方。
