- en: MySQL and SQLite Database Administrations
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL和SQLite数据库管理
- en: In this chapter, you will learn about MySQL and SQLite database administration.
    You will learn to install MySQL and SQLite. You will also learn how to create
    users, grant privileges, create databases, create tables, insert data into a table,
    and view all records from the table specific records, and update and delete the
    data.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习有关MySQL和SQLite数据库管理的知识。您将学习如何安装MySQL和SQLite。您还将学习如何创建用户，授予权限，创建数据库，创建表，将数据插入表中，并查看表中的所有记录，特定记录，并更新和删除数据。
- en: 'In this chapter, you will learn the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下内容：
- en: MySQL database administration
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQL数据库管理
- en: SQLite database administration
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLite数据库管理
- en: MySQL database administration
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MySQL数据库管理
- en: This section will cover MySQL database administration using Python. You already
    know Python has various modules for `mysql` database administration. So, we will
    learn about the MySQLdb module here. The `mysqldb` module is an interface for
    MySQL database server and is used to provide Python database API.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将介绍使用Python进行MySQL数据库管理。您已经知道Python有各种模块用于`mysql`数据库管理。因此，我们将在这里学习有关MySQLdb模块的知识。`mysqldb`模块是MySQL数据库服务器的接口，用于提供Python数据库API。
- en: 'Let''s learn how to install MySQL and a Python `mysqldb` package. For this,
    run the following command in your Terminal:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们学习如何安装MySQL和Python的`mysqldb`包。为此，请在终端中运行以下命令：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This command installs the MySQL server and various other packages. While installing
    the package, we are prompted to enter a password for the MySQL root account:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令安装MySQL服务器和各种其他软件包。在安装软件包时，我们被提示为MySQL root帐户输入密码：
- en: 'The following code is used for checking for the `mysqldb` package to install:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下代码用于检查是否安装了`mysqldb`包：
- en: '[PRE1]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'And the following is for installing the Python interface for MySQL:'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下是用于安装MySQL的Python接口：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now, we will check if `mysql` is installed properly or not. For this, run the
    following command in Terminal:'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 现在，我们将检查`mysql`是否安装正确。为此，在终端中运行以下命令：
- en: '[PRE3]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Once the command runs, you will get the following output:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦命令运行，您将获得以下输出：
- en: '[PRE4]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'By running `sudo mysql -u root -p`, you will get the `mysql` console. There
    are some commands used for listing databases and tables, and using the database
    to store our work. We will see them one by one:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通过运行`sudo mysql -u root -p`，您将获得`mysql`控制台。有一些命令用于列出数据库和表，并使用数据库来存储我们的工作。我们将逐一看到它们：
- en: 'This is for listing all the databases:'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是用于列出所有数据库的：
- en: '[PRE5]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And this is for using the database:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是用于使用数据库的：
- en: '[PRE6]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Whenever we come out of the MySQL console and log in again after some time,
    we must use the `use database_name;` statement. The purpose of using this command
    is that our work will be saved in our database. We can understand this in detail
    with the following examples:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们退出MySQL控制台并在一段时间后再次登录时，我们必须使用`use database_name;`语句。使用此命令的目的是我们的工作将保存在我们的数据库中。我们可以通过以下示例详细了解这一点：
- en: 'The following code is used for listing all the tables:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下代码用于列出所有表：
- en: '[PRE7]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: These are the commands we use for listing databases, using the database, and
    listing the tables.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们用于列出数据库，使用数据库和列出表的命令。
- en: 'Now, we will create a database using a create database statement in the `mysql`
    console. Now, open the `mysql` console using `mysql -u root -p`, then enter your
    password, which you entered while installing, and press *Enter*. Next, create
    your database. In this section, we are going to create a database named `test`
    and we will use this database throughout this section:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将使用`mysql`控制台中的create database语句创建数据库。现在，使用`mysql -u root -p`打开`mysql`控制台，然后输入您在安装时输入的密码，然后按*Enter*。接下来，创建您的数据库。在本节中，我们将创建一个名为`test`的数据库，并在本节中将使用该数据库：
- en: '[PRE8]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: First, we listed all the databases using show databases. Next, we created our
    database test using the create `database` statement. Again, we executed show databases
    to find whether our database is created or not. Our database is now created. Next,
    we used that database to store the work we are doing.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们使用show databases列出了所有数据库。接下来，我们使用create `database`语句创建了我们的数据库test。然后，我们再次执行show
    databases以查找我们的数据库是否已创建。我们的数据库现在已创建。接下来，我们使用该数据库来存储我们正在进行的工作。
- en: 'Now, we are going to create a user and grant the privileges to that user. Run
    the following commands:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个用户并授予该用户权限。运行以下命令：
- en: '[PRE9]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: We created a `test_user` user; the password for that user is `test123`. Next,
    we grant all the privileges to our `test_user` user. Now, come out of the `mysql`
    console by running a `quit;` or `exit;` command.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建了一个名为`test_user`的用户；该用户的密码为`test123`。接下来，我们授予我们的`test_user`用户所有权限。现在，通过运行`quit;`或`exit;`命令退出`mysql`控制台。
- en: Now, we are going to see some examples for getting a database version, creating
    a table, inserting some data into the table, updating the data, and deleting the
    data.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看一些示例，获取数据库版本，创建表，将一些数据插入表中，更新数据和删除数据。
- en: Getting a database version
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取数据库版本
- en: 'First, we will see an example of getting the database version. For that, we
    will create a `get_database_version.py` script and write the following content
    in it:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将看一个获取数据库版本的示例。为此，我们将创建一个`get_database_version.py`脚本，并在其中编写以下内容：
- en: '[PRE10]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: It is very important to follow the previous steps before running this script;
    they should not be skipped.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行此脚本之前，非常重要遵循先前的步骤；不应跳过它们。
- en: 'Run the script and you will get the following output:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将获得以下输出：
- en: '[PRE11]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: In the preceding example, we got the database version. For that, first we imported
    the MySQLdb module. Then we wrote the connection string. In the connection string,
    we mentioned our username, password, and database name. Next, we created a cursor
    object that is used for executing a SQL query. In `execute()`, we passed an SQL
    query. `fetchone()` retrieves the next row of query result. Next, we printed the
    result. The `close()` method closes the database connection.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们得到了数据库版本。首先，我们导入了MySQLdb模块。然后我们编写了连接字符串。在连接字符串中，我们提到了我们的用户名、密码和数据库名称。接下来，我们创建了一个游标对象，用于执行SQL查询。在`execute()`中，我们传递了一个SQL查询。`fetchone()`检索查询结果的下一行。接下来，我们打印了结果。`close()`方法关闭了数据库连接。
- en: Creating a table and inserting data
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建表和插入数据
- en: 'Now, we are going to create a table and we will insert some data into it. For
    that, create a `create_insert_data.py` script and write the following content
    in it:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建一个表，并向其中插入一些数据。为此，创建一个`create_insert_data.py`脚本，并在其中写入以下内容：
- en: '[PRE12]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Run the script and you will get the following output:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将获得以下输出：
- en: '[PRE13]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'To check whether your table is created successfully or not, open your `mysql`
    console and run the following commands:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查您的表是否成功创建，请打开您的`mysql`控制台并运行以下命令：
- en: '[PRE14]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: You can see that your table books is created.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到您的books表已创建。
- en: Retrieving the data
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索数据
- en: 'To retrieve the data from the table, we use the `select` statement. Now, we
    are going to retrieve the data from our books table. For that, create a `retrieve_data.py`
    script and write the following content in it:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 要从表中检索数据，我们使用`select`语句。现在，我们将从我们的books表中检索数据。为此，创建一个`retrieve_data.py`脚本，并在其中写入以下内容：
- en: '[PRE15]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Run the script and you will get the output as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将获得以下输出：
- en: '[PRE16]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: In the preceding example, we retrieved data from tables. We used the MySQLdb
    module. We wrote a connection string and created a cursor object to execute the
    SQL query. In `execute()`, we wrote an SQL `select` statement. And last, we printed
    the records.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们从表中检索了数据。我们使用了MySQLdb模块。我们编写了一个连接字符串并创建了一个游标对象来执行SQL查询。在`execute()`中，我们编写了一个SQL`select`语句。最后，我们打印了记录。
- en: Updating the data
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新数据
- en: 'Now, if we want to make some changes in the records, we can use an SQL `update`
    statement. We are going to see an example of an `update` statement. For that,
    create a `update_data.py` script and write following content in it:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果我们想对记录进行一些更改，我们可以使用SQL`update`语句。我们将看一个`update`语句的示例。为此，创建一个`update_data.py`脚本，并在其中写入以下内容：
- en: '[PRE17]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Run the script as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下方式运行脚本：
- en: '[PRE18]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, to check if your record is updated or not, run `retrieve_data.py` as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要检查您的记录是否已更新，请按以下方式运行`retrieve_data.py`：
- en: '[PRE19]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: You can see your data for ID `1` is updated. In the preceding example, in `execute()`,
    we have written an `update` statement that will update the data for ID `1`.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到ID为`1`的数据已更新。在上面的示例中，在`execute()`中，我们编写了一个`update`语句，将更新ID为`1`的数据。
- en: Deleting the data
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除数据
- en: 'To delete a particular record from your table, use a `delete` statement. We
    are going to see an example of deleting data. Create a `delete_data.py` script and
    write the following content in it:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要从表中删除特定记录，请使用`delete`语句。我们将看一个删除数据的示例。创建一个`delete_data.py`脚本，并在其中写入以下内容：
- en: '[PRE20]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Run the script as follows:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下方式运行脚本：
- en: '[PRE21]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now, to check whether your record is deleted or not, run the `retrieve_data.py`
    script as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要检查您的记录是否已删除，请按以下方式运行`retrieve_data.py`脚本：
- en: '[PRE22]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: You can see your record, whose ID is `5`, is deleted. In the preceding example,
    we used the `delete` statement to delete a particular record. Here, we deleted
    the record whose ID is `5`. You can also delete the record according to any field
    name of your choice.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到，您的ID为`5`的记录已被删除。在上面的示例中，我们使用了`delete`语句来删除特定记录。在这里，我们删除了ID为`5`的记录。您还可以根据自己选择的任何字段名删除记录。
- en: SQLite database administration
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQLite数据库管理
- en: In this section, we are going to learn how to install and use SQLite. Python
    has the `sqlite3` module to do SQLite database tasks. SQLite is a serverless,
    zero configuration, transactional SQL database engine. SQLite is very fast and
    lightweight. The entire database is stored in a single disk file.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何安装和使用SQLite。Python有`sqlite3`模块来执行SQLite数据库任务。SQLite是一个无服务器、零配置、事务性SQL数据库引擎。SQLite非常快速和轻量级。整个数据库存储在单个磁盘文件中。
- en: 'Now, we will install SQLite first. Run the following command in your Terminal:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将首先安装SQLite。在终端中运行以下命令：
- en: '[PRE23]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'In this section, we are going to learn following the operations: creating database,
    creating tables, inserting data into table, retrieving the data, and updating
    and deleting the data from table. We will see each operation one by one.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习以下操作：创建数据库、创建表、向表中插入数据、检索数据，以及从表中更新和删除数据。我们将逐个查看每个操作。
- en: 'Now, first, we will see how to create a database in SQLite. To create a database,
    you simply have to write the command in your Terminal as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，首先，我们将看如何在SQLite中创建数据库。要创建数据库，您只需在终端中输入以下命令：
- en: '[PRE24]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'After running this command, you will get the `sqlite` console opened in your
    Terminal as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此命令后，您将在终端中打开`sqlite`控制台，如下所示：
- en: '[PRE25]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: There you go, your database has been created by simply running `sqlite3 test.db`.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您的数据库已通过简单运行`sqlite3 test.db`创建。
- en: Connecting to the database
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到数据库
- en: 'Now, we will see how to connect to the database. For that, we are going to
    create a script. Python already has a `sqlite3` module included in the standard
    library. We just have to import it whenever we are going to work with SQLite.
    Create a `connect_database.py` script and write the following content in it:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到如何连接到数据库。为此，我们将创建一个脚本。Python已经在标准库中包含了一个`sqlite3`模块。我们只需要在使用SQLite时导入它。创建一个`connect_database.py`脚本，并在其中写入以下内容：
- en: '[PRE26]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Run the script and you will get the following output:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将获得以下输出：
- en: '[PRE27]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: In the preceding example, we imported the `sqlite3` module to perform the functionality.
    Now, check your directory and you will find the `test.db` file created in your
    directory.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们导入了`sqlite3`模块来执行功能。现在，检查您的目录，您将在目录中找到创建的`test.db`文件。
- en: Creating a table
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建表
- en: 'Now, we are going to create a table in our database. For that, we will create
    a `create_table.py` script and write the following content in it:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将在我们的数据库中创建一个表。为此，我们将创建一个`create_table.py`脚本，并在其中写入以下内容：
- en: '[PRE28]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Run the script and you will get the output as follows:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE29]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: In the preceding example, we created a table books using a `CREATE TABLE` statement.
    First, we established a connection with our database using `test.db`. Next, we
    created a cursor object that we used to execute the SQL query on our database.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们使用`CREATE TABLE`语句创建了一个名为books的表。首先，我们使用`test.db`建立了与数据库的连接。接下来，我们创建了一个游标对象，用于在数据库上执行SQL查询。
- en: Inserting the data
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 插入数据
- en: 'Now, we will insert the data into our table. For that, we will create a `insert_data.py`
    script and write the following content in it:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将向我们的表中插入数据。为此，我们将创建一个`insert_data.py`脚本，并在其中写入以下内容：
- en: '[PRE30]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Run the script and you will get the following output:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE31]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In the preceding example, we inserted some data into our table. For that, we
    used `insert` in the SQL statement. By using `commit()`, we are telling the database
    to save all the current transactions.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们向我们的表中插入了一些数据。为此，我们在SQL语句中使用了`insert`。通过使用`commit()`，我们告诉数据库保存所有当前的事务。
- en: Retrieving the data
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检索数据
- en: 'Now, we are going to retrieve the data from the table. For that, create a `retrieve_data.py`
    script and write the following content in it:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将从表中检索数据。为此，创建一个`retrieve_data.py`脚本，并在其中写入以下内容：
- en: '[PRE32]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Run the script and you will get the output as follows:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE33]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In the preceding example, we imported the `sqlite3` module. Next, we connected
    with our `test.db` database . To retrieve the data, we used the `select` statement.
    And, last, we printed the retrieved data.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们导入了`sqlite3`模块。接下来，我们连接到了我们的`test.db`数据库。为了检索数据，我们使用了`select`语句。最后，我们打印了检索到的数据。
- en: 'You can also retrieve the data in the `sqlite3` console. For that, start the
    SQLite console first and then retrieve the data as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在`sqlite3`控制台中检索数据。为此，首先启动SQLite控制台，然后按照以下方式检索数据：
- en: '[PRE34]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Updating the data
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更新数据
- en: 'We can update the data from our table using the `update` statement. Now, we
    are going to see an example of updating data. For that, create a `update_data.py`
    script and write the following content in it:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`update`语句从我们的表中更新数据。现在，我们将看一个更新数据的例子。为此，创建一个`update_data.py`脚本，并在其中写入以下内容：
- en: '[PRE35]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Run the script and you will get the following output:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE36]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Now, to check that the data is actually updated or not, you can run `retrieve_data.py`,
    or else you can go to the SQLite console and run `select * from books;`. You will
    get the updated output as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，要检查数据是否实际上已更新，请运行`retrieve_data.py`，或者您可以转到SQLite控制台并运行`select * from books;`。您将得到更新后的输出如下：
- en: '[PRE37]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: Deleting the data
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 删除数据
- en: 'Now, we will see an example of deleting data from a table. We are going to
    do this using the `delete` statement. Create a `delete_data.py` script and write
    the following content in it:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看一个从表中删除数据的例子。我们将使用`delete`语句来做到这一点。创建一个`delete_data.py`脚本，并在其中写入以下内容：
- en: '[PRE38]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Run the script and you will get the following output:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE39]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'In the preceding example, we deleted a record from a table. We used the `delete`
    SQL statement. Now, to check whether the data is deleted successfully or not,
    run `retrieve_data.py` or start the SQLite console, as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，我们从表中删除了一条记录。我们使用了`delete` SQL语句。现在，要检查数据是否成功删除，请运行`retrieve_data.py`或启动SQLite控制台，如下所示：
- en: '[PRE40]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'You can see the record whose author was `john smith` is deleted:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以看到作者是`john smith`的记录已被删除：
- en: '[PRE41]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: Summary
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned about MySQL as well as SQLite database administration.
    We created databases and tables. We then inserted a few records in tables. Using
    the `select` statement, we retrieved the records. We also learned about updating
    and deleting the data.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了MySQL以及SQLite数据库管理。我们创建了数据库和表。然后我们在表中插入了一些记录。使用`select`语句，我们检索了记录。我们还学习了更新和删除数据。
- en: Questions
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What is database used for?
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库用于什么？
- en: What is CRUD in a database?
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据库中的CRUD是什么？
- en: Can we connect a remote database? If yes, explain with an example.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以连接远程数据库吗？如果可以，请举例说明。
- en: Can we write triggers and procedures inside Python code?
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以在Python代码中编写触发器和存储过程吗？
- en: What are DML and DDL statements?
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是DML和DDL语句？
- en: Further reading
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: Using PyMySQL library: [http://zetcode.com/python/pymysql/](http://zetcode.com/python/pymysql/)
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用PyMySQL库：[http://zetcode.com/python/pymysql/](http://zetcode.com/python/pymysql/)
- en: MySQLdb, a Python connection guide: [https://mysqlclient.readthedocs.io/](https://mysqlclient.readthedocs.io/)
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MySQLdb，Python连接指南：[https://mysqlclient.readthedocs.io/](https://mysqlclient.readthedocs.io/)
- en: The DB-API 2.0 interface for SQLite databases: [https://docs.python.org/3/library/sqlite3.html](https://docs.python.org/3/library/sqlite3.html)
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLite数据库的DB-API 2.0接口：[https://docs.python.org/3/library/sqlite3.html](https://docs.python.org/3/library/sqlite3.html)
