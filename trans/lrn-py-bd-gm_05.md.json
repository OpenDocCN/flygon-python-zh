["```py\n$ sudo apt-get install libncurses5-dev libncursesw5-dev\n```", "```py\n >>> import curses\n >>> #no any error\n```", "```py\n      #program is written as Scripts\n      # curser_starter.py\n\n      import curses\n      import time\n      window_screen = curses.initscr()\n      window_screen.clear()\n\n      time.sleep(10)\n```", "```py\nheight = 20\nwidth = 60\ny = 0\nx= 0\n\nscreen = curses.newwin(height, width, y, x)\n```", "```py\n# text_app.py\nimport curses\nimport time\n\nscreen = curses.initscr()\ncurses.noecho()\ncurses.cbreak()\nscreen.keypad(True)\nscreen.addstr(0,0, \"Hello\")\nscreen.refresh()\ntime.sleep(10)\ncurses.endwin()\n```", "```py\n#program3.py\nimport curses as c\n\nscreen = c.initscr()\nwin = c.newwin(20, 60, 0, 0)\n\nc.noecho()\nc.cbreak()\nscreen.keypad(True)\nwhile True:\n  char = screen.getch() #takes input\n  if char == ord('q'):\n      break\n  if char == ord('p'):\n      win.addstr(5,10, \"Hello World\")\n      win.refresh()\nscreen.endwin()\n```", "```py\n#mouse_events.py\n\nimport curses as c\ndef main(screen):\n  c.curs_set(0) #hides the cursor\n  c.mousemask(1)\n\n  inp = screen.getch()\n  if inp == c.KEY_MOUSE:\n      screen.addstr(17,40, \"Mouse is clicked\")\n      screen.refresh()\n  screen.getch()\n\nc.wrapper(main)\n```", "```py\n#snake_game.py\nimport curses as c\n\nc.initscr()\nwin = c.newwin(20,60,0,0)\nwin.keypad(1)\nc.noecho()\nc.curs_set(0)\nwin.border(0)\nwin.nodelay(1)\n\nsnake = [[4,10], [4,9], [4,8]]\nfood = [10,20]\n\nwin.addch(food[0],food[1], 'O')\n```", "```py\nfrom curses import KEY_UP, KEY_DOWN, KEY_LEFT, KEY_RIGHT\n#CODE FROM PREVIOUS TOPIC\n\nkey = KEY_RIGHT #default key\n\n#ASCII value of ESC is 27\nwhile key != 27:\n  win.border(0)\n  win.timeout(100) #speed for snake\n  default_key = key\n  event = win.getch()\n  key = key if event == -1 else event\n  if key not in [KEY_LEFT, KEY_RIGHT, KEY_UP, KEY_DOWN, 27]:\n     key = default_key\n```", "```py\nwhile key != 27:\n  #code from preceding topic\n  snake.insert(0, [snake[0][0] + (key == KEY_DOWN and 1) + \n  (key == KEY_UP and -1), snake[0][1] + (key == KEY_LEFT and -1) + \n  (key == KEY_RIGHT and 1)])\n```", "```py\nfrom random import randint\n```", "```py\nwhile key != 27:\n#add the following code after updating head position\n  if snake[0] == food:\n      food = []\n      while food == []:\n        food = [randint(1,18), randint(1,58)]\n        if food in snake: \n            food = []\n      win.addch(food[0], food[1], 'O')\n  else:\n      last = snake.pop()\n      win.addch(last[0], last[1], ' ')\n  win.addch(snake[0][0], snake[0][1], 'X')\n\nc.endwin()\n```", "```py\n      if snake[0] in snake[1:]: \n          break\n```", "```py\n      score = 0 \n      while key != 27:\n        # CODE TO ADD SCORE IN THE SCREEN\n        win.border(0)\n        win.addstr(0, 2, 'Score : ' + str(score) + ' ') \n        win.addstr(0, 27, ' SNAKE ')\n\n        if snake[0] == food:\n            food = []\n            #AFTER EATING EVERY FOOD SCORE = FOOD\n            score += 1\n            while food == []:\n              food = [randint(1,18), randint(1,58)]\n              if food in snake: food = []\n            win.addch(food[0], food[1], 'O')\n        else:\n            end = snake.pop()\n            win.addch(last[0], last[1], '')\n        win.addch(snake[0][0], snake[0][1], 'X')\n\n      c.endwin()\n```", "```py\nif snake[0][0] == 0:\n    snake[0][0] = 18 #regenerate snake from lower boundary line\n\nif snake[0][0] == 19:\n    snake[0][0] = 1 #regenerate snake from upper boundary line\n```", "```py\nif snake[0][1] == 0:\n    snake[0][1] = 58 #regenerate from left\nif snake[0][1] == 59:\n    snake[0][1] = 1 #regenerate from right\n```"]