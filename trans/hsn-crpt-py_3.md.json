["```py\n941dc2865db9204c40dd6f0898cbe0086fc6d915e288ed4ef223766a02967b81c6c431778a40f517e9e4aa86856e0a3b68297e102b1ec93713bf89750cdfa80e\n```", "```py\n>>> from pador import encr, decr \n\n>>> prefix = c[0:16] + \"A\"*14\n>>> for i in range(256):\n...   mod = prefix + chr(i) + chr(233) + c[32:]\n...   if decr(mod) != \"PADDING ERROR\":\n...     print i, \"is correctly padded\"\n```", "```py\n234 is correctly padded\n```", "```py\n...\n115 is correctly padded\n```", "```py\n>>> 115 ^ 2\n113\n```", "```py\n>>> prefix = c[0:16] + \"A\"*14 \n>>> c30 = ord(\"A\") ^ 113 \n>>> c31 = 1 ^ 235 mod = prefix + chr(c30) + chr(c31) + c[32:] \n>>> decr(mod)\n```", "```py\n\"This simple sent\\xc6\\x8d\\x12;y.\\xdc\\xa2\\xb4\\xa9)7c\\x95b\\xd1I\\xd0(\\xbb\\x1f\\x8d\\xebRlY'\\x17\\xf6wA\\x01\"\n```", "```py\n>>> plain = 'encrypt this messagf'\n>>> ciphertext = publicKey.encrypt(plain, 0) [0\n... ciphertext = publicKey.encrypt(plain, 0) [0\nkeyboardInterrupt\n>>> ciphertext = publicKey.encrypt(plain, 0) [0]\n>>> print ciphertext.encode (\"hex\")\n```", "```py\n>>> for p in range(100000000000000000083, 100000000000000000030, -2):\n```", "```py\n...  print p, n%p\n...\n```", "```py\n100000000000000000039 0\n```", "```py\n>>> p = 100000000000000000039\n>>> q = n/p\n```"]