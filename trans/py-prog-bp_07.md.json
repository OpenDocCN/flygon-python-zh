["```py\nmkdir django-project && cd django-project\n```", "```py\npipenv --three\n```", "```py\npipenv shell\n```", "```py\npipenv install django\n```", "```py\npath('user/<int:id>/', views.get_user_by_id)\n```", "```py\nurl('^user/?P<id>[0-9]/$', views.get_user_by_id)\n```", "```py\nnvm install node\n```", "```py\nnode --version\n```", "```py\ndjango-admin startproject gamestore\n```", "```py\npython-admin startapp main\n```", "```py\npython manage.py runserver\n```", "```py\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\n\nYou have 14 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.\nRun 'python manage.py migrate' to apply them.\n\nDecember 20, 2017 - 09:27:48\nDjango version 2.0, using settings 'gamestore.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n```", "```py\nYou have 14 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.\nRun 'python manage.py migrate' to apply them.\n```", "```py\n\u279c python manage.py migrate\nOperations to perform:\n Apply all migrations: admin, auth, contenttypes, sessions\nRunning migrations:\n Applying contenttypes.0001_initial... OK\n Applying auth.0001_initial... OK\n Applying admin.0001_initial... OK\n Applying admin.0002_logentry_remove_auto_add... OK\n Applying contenttypes.0002_remove_content_type_name... OK\n Applying auth.0002_alter_permission_name_max_length... OK\n Applying auth.0003_alter_user_email_max_length... OK\n Applying auth.0004_alter_user_username_opts... OK\n Applying auth.0005_alter_user_last_login_null... OK\n Applying auth.0006_require_contenttypes_0002... OK\n Applying auth.0007_alter_validators_add_error_messages... OK\n Applying auth.0008_alter_user_username_max_length... OK\n Applying auth.0009_alter_user_last_name_max_length... OK\n Applying sessions.0001_initial... OK\n```", "```py\n\u2192 python manage.py runserver\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\nDecember 20, 2017 - 09:50:49\nDjango version 2.0, using settings 'gamestore.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CONTROL-C.\n```", "```py\npython manage.py createsuperuser\n```", "```py\npython manage.py dbshell\n```", "```py\nSQLite version 3.16.2 2017-01-06 16:32:41\nEnter \".help\" for usage hints.\nsqlite>\n```", "```py\nsqlite> .tables\nauth_group auth_user_user_permissions\nauth_group_permissions django_admin_log\nauth_permission django_content_type\nauth_user django_migrations\nauth_user_groups django_session\n```", "```py\nsqlite> .schema --indent auth_group\nCREATE TABLE IF NOT EXISTS \"auth_group\"(\n \"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT,\n \"name\" varchar(80) NOT NULL UNIQUE\n );\n```", "```py\n  from django.contrib import admin\n  from django.urls import path\n\n  urlpatterns = [\n      path('admin/', admin.site.urls),\n  ]\n```", "```py\npython manager.py startapp main\n```", "```py\nfrom django.urls import path\nfrom . import views\n```", "```py\n  urlpatterns = [\n      path(r'', views.index, name='index'),\n  ]\n```", "```py\n  from django.shortcuts import render\n\n  def index(request):\n      return render(request, 'main/index.html', {})\n```", "```py\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, \n        initial-scale=1\">\n    <meta name=\"description\" content=\"\">\n    <meta name=\"author\" content=\"\">\n    <link rel=\"icon\" href=\"../../favicon.ico\">\n\n    <title>Vintage video games store</title>\n\n    {% load staticfiles %}\n    <link href=\"{% static 'styles/site.css' %}\" rel='stylesheet'>\n    <link href=\"{% static 'styles/bootstrap.min.css' %}\" \n       rel='stylesheet'>\n    <link href=\"{% static 'styles/font-awesome.min.css' %}\"\n          rel='stylesheet'>\n  </head>\n\n  <body>\n\n    <nav class=\"navbar navbar-inverse navbar-fixed-top\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <button type=\"button\" class=\"navbar-toggle \n             collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\"\n             aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"sr-only\">Toggle navigation</span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n          <a class=\"navbar-brand\" href=\"/\">Vintage video\n         games store</a>\n        </div>\n        <div id=\"navbar\" class=\"collapse navbar-collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li>\n              <a href=\"/\">\n                <i class=\"fa fa-home\" aria-hidden=\"true\"></i> HOME\n              </a>\n            </li>\n            {% if user.is_authenticated%}\n            <li>\n              <a href=\"/cart/\">\n                <i class=\"fa fa-shopping-cart\" \n                   aria-hidden=\"true\"></i> CART\n              </a>\n            </li>\n            {% endif %}\n          </ul>          \n        </div><!--/.nav-collapse -->\n      </div>\n    </nav>\n\n    <div class=\"container\">\n\n      <div class=\"starter-template\">\n        {% if messages %}\n          {% for message in messages %}\n            <div class=\"alert alert-info\" role=\"alert\">\n              {{message}}\n            </div>\n          {% endfor %}\n        {% endif %}\n\n        {% block 'content' %}\n        {% endblock %}\n      </div>\n    </div>\n  </body>\n</html>\n```", "```py\n  {% load static %}\n  <link href=\"{% static 'styles/site.css' %}\" rel='stylesheet'>\n  <link href=\"{% static 'styles/bootstrap.min.css' %}\" \n          rel='stylesheet'>\n  <link href=\"{% static 'styles/font-awesome.min.css' %}\" \n         rel='stylesheet'>\n```", "```py\n{% block 'content' %}\n{% endblock %}\n```", "```py\nmkdir main/templates && mkdir main/templates/main\n```", "```py\n{% extends 'base.html' %}\n\n{% block 'content' %}\n   <h1>Welcome to the gamestore!</h1>\n{% endblock %}\n```", "```py\n    {\n      \"name\": \"gamestore\",\n      \"version\": \"1.0.0\",\n      \"description\": \"Retro game store website\",\n      \"dependencies\": {\n         \"bootstrap\": \"^3.3.7\",\n        \"font-awesome\": \"^4.7.0\"\n      }\n    }\n```", "```py\nnpm install\n```", "```py\nmkdir static && mkdir static/styles\n```", "```py\ncp node_modules/bootstrap/dist/css/bootstrap.min.css static/styles/\n```", "```py\ncp node_modules/font-awesome/css/font-awesome.min.css static/styles/\n```", "```py\ncp -r node_modules/font-awesome/fonts/ static/\n```", "```py\n  .nav.navbar-nav .fa-home,\n  .nav.navbar-nav .fa-shopping-cart {\n     font-size: 1.5em;\n   }\n\n   .starter-template {\n      padding: 70px 15px;\n   }\n\n   h2.panel-title {\n      font-size: 25px;\n   }\n```", "```py\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'main',\n]\n```", "```py\nTEMPLATES = [\n    {\n        'BACKEND': \n 'django.templates.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.templates.context_processors.debug',\n                'django.templates.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n\n 'django.contrib.messages.context_processors.messages',\n            ],\n        },\n    },\n]\n```", "```py\n'DIRS': [\n    os.path.join(BASE_DIR, 'templates')\n]\n```", "```py\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), ]\n```", "```py\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('', include('main.urls'))\n]\n```", "```py\npython manage.py runserver\n```", "```py\nfrom django import forms\nfrom django.contrib.auth.forms import AuthenticationForm\n\nclass AuthenticationForm(AuthenticationForm):\n    username = forms.CharField(\n        max_length=50,\n        widget=forms.TextInput({\n            'class': 'form-control',\n            'placeholder': 'User name'\n  })\n    )\n\n    password = forms.CharField(\n        label=\"Password\",\n        widget=forms.PasswordInput({\n            'class': 'form-control',\n            'placeholder': 'Password'\n  })\n    )\n```", "```py\nfrom django.contrib.auth.views import login\nfrom django.contrib.auth.views import logout\nfrom .forms import AuthenticationForm\n```", "```py\n  path(r'accounts/login/', login, {\n      'template_name': 'login.html',\n      'authentication_form': AuthenticationForm\n  }, name='login'),\n```", "```py\n  path(r'accounts/logout/', logout, {\n      'next_page': '/'\n  }, name='logout'),\n```", "```py\n{% extends 'base.html' %}\n\n{% block 'content' %}\n\n<div>\n  <form action=\".\" method=\"post\" class=\"form-signin\">\n\n    {% csrf_token %}\n\n    <h2 class=\"form-signin-heading\">Login</h2>\n    <label for=\"inputUsername\" class=\"sr-only\">User name</label>\n    {{form.username}}\n    <label for=\"inputPassword\" class=\"sr-only\">Password</label>\n    {{form.password}}\n    <input class=\"btn btn-lg btn-primary btn-block\" \n        type=\"Submit\" value=\"Login\">\n  </form>\n  <div class='signin-errors-container'>\n    {% if form.non_field_errors %}\n    <ul class='form-errors'>\n      {% for error in form.non_field_errors %}\n        <li>{{ error }}</li>\n      {% endfor %}\n    </ul>\n    {% endif %}\n  </div>\n</div>\n\n{% endblock %}\n```", "```py\n  <div class='signin-errors-container'>\n    {% if form.non_field_errors %}\n    <ul class='form-errors'>\n      {% for error in form.non_field_errors %}\n      <li>{{ error }}</li>\n      {% endfor %}\n    </ul>\n    {% endif %}\n  </div>\n```", "```py\n  {% if user.is_authenticated %}\n  <form id=\"logoutForm\" action=\"{% url 'logout' %}\" method=\"post\"\n       class=\"navbar-right\">\n      {% csrf_token %}\n    <ul class=\"nav navbar-nav navbar-right\">\n      <li><span class=\"navbar-brand\">Logged as: \n            {{ user.username }}</span></li>\n      <li><a href=\"javascript:document.getElementById('\n           logoutForm').submit()\">Log off</a></li>\n    </ul>\n\n  </form>\n\n  {% else %}\n\n  <ul class=\"nav navbar-nav navbar-right\">\n      <li><a href=\"{% url 'login' %}\">Log in</a></li>\n  </ul>\n\n  {% endif %}\n```", "```py\n  <ul class=\"nav navbar-nav\">\n    <li>\n      <a href=\"/\">\n        <i class=\"fa fa-home\" aria-hidden=\"true\"></i> HOME\n      </a>\n    </li>    \n  </ul>\n```", "```py\n  {% include '_loginpartial.html' %}\n```", "```py\n    /* Signin page */\n    /* Styling extracted from http://getbootstrap.com/examples/signin/  \n    */\n\n    .form-signin {\n        max-width: 330px;\n        padding: 15px;\n        margin: 0 auto;\n    }\n\n    .form-signin input[type=\"email\"] {\n        margin-bottom: -1px;\n    }\n\n    .form-signin input[type=\"email\"] border-top {\n        left-radius: 0;\n       right-radius: 0;\n    }\n\n    .form-signin input[type=\"password\"] {\n        margin-bottom: 10px;\n    }\n\n    .form-signin input[type=\"password\"] border-top {\n        left-radius: 0;\n        right-radius: 0;\n    }\n\n    .form-signin .form-signin-heading {\n      margin-bottom: 10px;\n    }\n\n    .form-signin .checkbox {\n      font-weight: normal;\n    }\n\n    .form-signin .form-control {\n      position: relative;\n      height: auto;\n      -webkit-box-sizing: border-box;\n      -moz-box-sizing: border-box;\n      box-sizing: border-box;\n      padding: 10px;\n      font-size: 16px;\n    }\n\n    .form-signin .form-control:focus {\n      z-index: 2;\n    }\n\n    .signin-errors-container .form-errors {\n      padding: 0;\n      display: flex;\n      flex-direction: column;\n      list-style: none;\n      align-items: center;\n      color: red;\n    }\n\n    .signin-errors-container .form-errors li {\n      max-width: 350px;\n     }\n```", "```py\nLOGIN_REDIRECT_URL = '/'\n```", "```py\npython manage.py runserver\n```", "```py\nfrom django.contrib.auth.models import User\n```", "```py\ndef validate_unique_user(error_message, **criteria):\n    existent_user = User.objects.filter(**criteria)\n\n    if existent_user:\n        raise forms.ValidationError(error_message)\n```", "```py\nclass SignupForm(forms.Form):\n    username = forms.CharField(\n       max_length=10,\n       widget=forms.TextInput({\n           'class': 'form-control',\n           'placeholder': 'First name'\n  })\n    )\n\n    first_name = forms.CharField(\n        max_length=100,\n        widget=forms.TextInput({\n            'class': 'form-control',\n            'placeholder': 'First name'\n  })\n    )\n\n    last_name = forms.CharField(\n        max_length=200,\n        widget=forms.TextInput({\n            'class': 'form-control',\n            'placeholder': 'Last name'\n  })\n    )\n\n    email = forms.CharField(\n        max_length=200,\n        widget=forms.TextInput({\n            'class': 'form-control',\n            'placeholder': 'Email'\n  })\n    )\n\n    password = forms.CharField(\n        min_length=6,\n        max_length=10,\n        widget=forms.PasswordInput({\n           'class': 'form-control',\n           'placeholder': 'Password'\n  })\n    )\n\n    repeat_password = forms.CharField(\n        min_length=6,\n        max_length=10,\n        widget=forms.PasswordInput({\n            'class': 'form-control',\n            'placeholder': 'Repeat password'\n  })\n    )\n```", "```py\n  def clean_username(self):\n      username = self.cleaned_data['username']\n\n      validate_unique_user(\n         error_message='* Username already in use',\n          username=username)\n\n      return username\n```", "```py\n  def clean_email(self):\n      email = self.cleaned_data['email']\n\n      validate_unique_user(\n         error_message='* Email already in use',\n         email=email)\n\n      return email\n```", "```py\n    def clean_repeat_password(self):\n      password1 = self.cleaned_data['password']\n      password2 = self.cleaned_data['repeat_password']\n\n      if password1 != password2:\n         raise forms.ValidationError('* Passwords did not match')\n\n     return password1\n```", "```py\nfrom django.views.decorators.csrf import csrf_protect\nfrom .forms import SignupForm\nfrom django.contrib.auth.models import User\n```", "```py\n@csrf_protect def signup(request):\n\n    if request.method == 'POST':\n\n        form = SignupForm(request.POST)\n\n        if form.is_valid():\n            user = User.objects.create_user(\n                username=form.cleaned_data['username'],\n                first_name=form.cleaned_data['first_name'],\n                last_name=form.cleaned_data['last_name'],\n                email=form.cleaned_data['email'],\n                password=form.cleaned_data['password']\n            )\n            user.save()\n\n            return render(request, \n 'main/create_account_success.html', {})\n\n    else:\n        form = SignupForm()\n\n return render(request, 'main/signup.html', {'form': form})\n```", "```py\npath(r'accounts/signup/', views.signup, name='signup'),\n```", "```py\n{% extends \"base.html\" %}\n\n{% block \"content\" %}\n\n    <div class=\"account-details-container\">\n        <h1>Signup</h1>\n\n        <form action=\"{% url 'signup' %}\" method=\"POST\">\n          {% csrf_token %}\n\n          {{ form }}\n\n          <button class=\"btn btn-primary\">Save</button>\n\n        </form>\n    </div>\n\n{% endblock %}\n```", "```py\n{% extends 'base.html' %}\n\n{% block 'content' %}\n\n    <div class='create-account-msg-container'>\n\n        <div class='circle'>\n          <i class=\"fa fa-thumbs-o-up\" aria-hidden=\"true\"></i>\n        </div>\n\n        <h3>Your account have been successfully created!</h3>\n\n        <a href=\"{% url 'login' %}\">Click here to login</a>\n\n    </div>\n\n{% endblock %}\n```", "```py\n/* Account created page */\n.create-account-msg-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 100px;\n}\n\n.create-account-msg-container .circle {\n    width: 200px;\n    height: 200px;\n    border: solid 3px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding-top: 30px;\n    border-radius: 50%;\n}\n\n.create-account-msg-container .fa-thumbs-o-up {\n    font-size: 9em;\n}\n\n.create-account-msg-container a {\n    font-size: 1.5em;\n}\n\n/* Sign up page */\n\n.account-details-container #id_password,\n.account-details-container #id_repeat_password {\n    width:200px;\n}\n\n.account-details-container {\n    max-width: 400px;\n    padding: 15px;\n    margin: 0 auto;\n}\n\n.account-details-container .btn.btn-primary {\n    margin-top:20px;\n}\n\n.account-details-container label {\n    margin-top: 20px;\n}\n\n.account-details-container .errorlist {\n    padding-left: 10px;\n    display: inline-block;\n    list-style: none;\n    color: red;\n}\n```", "```py\nclass GamePlatform(models.Model):\n    name = models.CharField(max_length=100)\n\n    def __str__(self):\n        return self.name\n```", "```py\nclass Game(models.Model):\n    class Meta:\n        ordering = ['-promoted', 'name']\n\n    name = models.CharField(max_length=100)\n\n    release_year = models.IntegerField(null=True)\n\n    developer = models.CharField(max_length=100)\n\n    published_by = models.CharField(max_length=100)\n\n    image = models.ImageField(\n        upload_to='images/',\n  default='images/placeholder.png',\n  max_length=100\n    )\n\n    gameplatform = models.ForeignKey(GamePlatform,\n                                     null=False,\n                                     on_delete=models.CASCADE)\n\n    highlighted = models.BooleanField(default=False)\n```", "```py\n    objects = GameManager()\n\n    def __str__(self):\n      return f'{self.gameplatform.name} - {self.name}'\n```", "```py\nclass GameManager(models.Manager):\n\n    def get_highlighted(self):\n        return self.filter(highlighted=True)\n\n    def get_not_highlighted(self):\n        return self.filter(highlighted=False)\n\n    def get_by_platform(self, platform):\n        return self.filter(gameplatform__name__iexact=platform)\n```", "```py\npython manage.py makemigrations\n```", "```py\npython manage.py migrate\n```", "```py\nclass PriceList(models.Model):\n    added_at = models.DateTimeField(auto_now_add=True)\n\n    last_updated = models.DateTimeField(auto_now=True)\n\n    price_per_unit = models.DecimalField(max_digits=9,\n                                         decimal_places=2, \n default=0)\n\n    game = models.OneToOneField(\n        Game,\n        on_delete=models.CASCADE,\n        primary_key=True)\n\n    def __str__(self):\n        return self.game.name\n```", "```py\npython manage.py makemigrations\n```", "```py\npython manage.py migrate\n```", "```py\n{% load staticfiles %}\n{% load humanize %}\n\n<div class='game-container'>\n    {% for game in gameslist %}\n    {% if game.highlighted and highlight_games %}\n      <div class='item-box highlighted'>\n    {% else %}\n      <div class='item-box'>\n    {% endif %}\n      <div class='item-image'>\n      <img src=\"{% static game.image.url %}\"></img>\n    </div>\n      <div class='item-info'>\n        <h3>{{game.name}}</h3>\n        <p>Release year: {{game.release_year}}</p>\n        <p>Developer: {{game.developer}}</p>\n        <p>Publisher: {{game.published_by}}</p>\n        {% if game.pricelist.price_per_unit %}\n          <p class='price'>\n            Price: \n          ${{game.pricelist.price_per_unit|floatformat:2|intcomma}}\n          </p>\n        {% else %}\n        <p class='price'>Price: Not available</p>\n        {% endif %}\n      </div>\n     <a href=\"/cart/add/{{game.id}}\" class=\"add-to-cart btn\n btn-primary\">\n       <i class=\"fa fa-shopping-cart\" aria-hidden=\"true\"></i>\n       Add to cart\n     </a>\n   </div>\n   {% endfor %}\n</div>\n```", "```py\n{% extends 'base.html' %}\n\n{% block 'content' %}\n  {% if highlighted_games_list %}\n    <div class='panel panel-success'>\n      <div class='panel-heading'>\n        <h2 class='panel-title'><i class=\"fa fa-gamepad\"\n  aria-hidden=\"true\"></i>Highlighted games</h2>\n      </div>\n      <div class='panel-body'>\n        {% include 'main/games-list.html' with \n         gameslist=highlighted_games_list highlight_games=False%}\n        {% if show_more_link_highlighted %}\n        <p>\n          <a href='/games-list/highlighted/'>See more items</a>\n        </p>\n        {% endif %}\n      </div>\n    </div>\n  {% endif %}\n\n  {% if games_list %}\n    {% include 'main/games-list.html' with gameslist=games_list \n     highlight_games=False%}\n    {% if show_more_link_games %}\n      <p>\n        <a href='/games-list/all/'>See all items</a>\n      </p>\n    {% endif %}\n  {% endif %}\n\n{% endblock %}\n```", "```py\n   {% include 'main/games-list.html' with \n     gameslist=highlighted_games_list \n       highlight_games=False%}\n```", "```py\n.game-container {\n    margin-top: 10px;\n    display:flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n\n.game-container .item-box {\n    flex-grow: 0;\n    align-self: auto;\n    width:339px;\n    margin: 0px 10px 20px 10px;\n    border: 1px solid #aba5a5;\n    padding: 10px;\n    background-color: #F0F0F0;\n}\n\n.game-container .item-box .add-to-cart {\n    margin-top: 15px;\n    float: right;\n}\n\n.game-container .item-box.highlighted {\n    background-color:#d7e7f5;\n}\n\n.game-container .item-box .item-image {\n    float: left;\n}\n\n.game-container .item-box .item-info {\n    float: left;\n    margin-left: 15px;\n    width:100%;\n    max-width:170px;\n}\n\n.game-container .item-box .item-info p {\n    margin: 0 0 3px;\n}\n\n.game-container .item-box .item-info p.price {\n    font-weight: bold;\n    margin-top: 20px;\n    text-transform: uppercase;\n    font-size: 0.9em;\n}\n\n.game-container .item-box .item-info h3 {\n    max-width: 150px;\n    word-wrap: break-word;\n    margin: 0px 0px 10px 0px;\n}\n```", "```py\ndef index(request):\n    max_highlighted_games = 3\n  max_game_list = 9    highlighted_games_list = Game.objects.get_highlighted()\n    games_list = Game.objects.get_not_highlighted()\n\n    show_more_link_promoted = highlighted_games_list.count() > \n    max_highlighted_games\n    show_more_link_games = games_list.count() > max_game_list\n\n    context = {\n        'highlighted_games_list': \n         highlighted_games_list[:max_highlighted_games],\n        'games_list': games_list[:max_game_list],\n        'show_more_link_games': show_more_link_games,\n        'show_more_link_promoted': show_more_link_promoted\n    }\n\n    return render(request, 'main/index.html', context)\n```", "```py\nfrom .models import Game\n```", "```py\n    from django.contrib import admin\n\n    from .models import GamePlatform\n    from .models import Game\n    from .models import PriceList\n\n    admin.autodiscover()\n\n    admin.site.register(GamePlatform)\n    admin.site.register(Game)\n    admin.site.register(PriceList)\n```", "```py\nMEDIA_ROOT  = os.path.join(BASE_DIR, 'static'</span>)\n```", "```py\npython manage.py runserver\n```", "```py\n    path(r'games-list/highlighted/', views.show_highlighted_games),\n    path(r'games-list/all/', views.show_all_games),\n```", "```py\n{% extends 'base.html' %}\n\n{% block 'content' %}\n\n <h2>Highlighted games</h2>\n <hr/>\n\n {% if games %}\n   {% include 'main/games-list.html' with gameslist=games\n        highlight_promoted=False%}\n   {% else %}\n   <div class='empty-game-list'>\n   <h3>There's no promoted games available at the moment</h3>\n  </div>\n {% endif %}\n\n {% endblock %}\n```", "```py\n{% extends 'base.html' %}\n\n{% block 'content' %}\n\n<h2>All games</h2>\n<hr/>\n\n{% if games %}\n  {% include 'main/games-list.html' with gameslist=games\n    highlight_games=True%}\n  {% else %}\n  <div class='empty-game-list'>\n    <h3>There's no promoted games available at the moment</h3>\n  </div>\n{% endif %}\n\n{% endblock %}\n```", "```py\ndef show_all_games(request):\n    games = Game.objects.all()\n\n    context = {'games': games}\n\n    return render(request, 'main/all_games.html', context)\n\ndef show_highlighted_games(request):\n    games = Game.objects.get_highlighted()\n\n    context = {'games': games}\n\n    return render(request, 'main/highlighted.html', context)\n```", "```py\nclass ShoppingCartManager(models.Manager):\n\n    def get_by_id(self, id):\n        return self.get(pk=id)\n\n    def get_by_user(self, user):\n        return self.get(user_id=user.id)\n\n    def create_cart(self, user):\n        new_cart = self.create(user=user)\n        return new_cart\n```", "```py\nclass ShoppingCart(models.Model):\n    user = models.ForeignKey(User,\n                             null=False,\n                             on_delete=models.CASCADE)\n\n    objects = ShoppingCartManager()\n\n    def __str__(self):\n        return f'{self.user.username}\\'s shopping cart'\n```", "```py\nclass ShoppingCartItemManager(models.Manager):\n\n    def get_items(self, cart):\n        return self.filter(cart_id=cart.id)\n```", "```py\nclass ShoppingCartItem(models.Model):\n    quantity = models.IntegerField(null=False)\n\n    price_per_unit = models.DecimalField(max_digits=9,\n                                         decimal_places=2,\n                                         default=0)\n\n    cart = models.ForeignKey(ShoppingCart,\n                             null=False,\n                             on_delete=models.CASCADE)\n    game = models.ForeignKey(Game,\n                             null=False,\n                             on_delete=models.CASCADE)\n\n    objects = ShoppingCartItemManager()\n```", "```py\nfrom django.contrib.auth.models import User\n```", "```py\npython manage.py makemigrations\n```", "```py\npython manage.py migrate\n```", "```py\n    ShoppingCartFormSet = inlineformset_factory(\n      ShoppingCart,\n      ShoppingCartItem,\n      fields=('quantity', 'price_per_unit'),\n      extra=0,\n      widgets={\n          'quantity': forms.TextInput({\n             'class': 'form-control quantity',\n          }),\n          'price_per_unit': forms.HiddenInput()\n      }\n    )\n```", "```py\nfrom django.forms import inlineformset_factory\nfrom .models import ShoppingCartItem\nfrom .models import ShoppingCart\n```", "```py\nfrom django.views.generic.edit import UpdateView\nfrom django.http import HttpResponseRedirect\nfrom django.urls import reverse_lazy\nfrom django.db.models import Sum, F, DecimalField\n\nfrom .models import ShoppingCart\nfrom .models import ShoppingCartItem\nfrom .forms import ShoppingCartFormSet\n```", "```py\nclass ShoppingCartEditView(UpdateView):\n    model = ShoppingCart\n    form_class = ShoppingCartFormSet\n    template_name = 'main/cart.html'    def get_context_data(self, **kwargs):\n        context = super().get_context_data(**kwargs)\n\n        items = ShoppingCartItem.objects.get_items(self.object)\n\n        context['is_cart_empty'] = (items.count() == 0)\n\n        order = items.aggregate(\n            total_order=Sum(F('price_per_unit') * F('quantity'),\n                            output_field=DecimalField())\n        )\n\n        context['total_order'] = order['total_order']\n\n        return context\n\n    def get_object(self):\n        try:\n            return ShoppingCart.objects.get_by_user(self.request.user)\n        except ShoppingCart.DoesNotExist:\n            new_cart = ShoppingCart.objects.create_cart(self.request.user)\n            new_cart.save()\n            return new_cart\n\n def form_valid(self, form):\n        form.save()\n        return HttpResponseRedirect(reverse_lazy('user-cart'))\n```", "```py\n path(r'cart/', views.ShoppingCartEditView.as_view(), name='user-\n  cart'),\n```", "```py\n{% extends 'base.html' %}\n\n{% block 'content' %}\n\n{% load humanize %}\n\n<div class='cart-details'>\n\n<h3>{{ shoppingcart}}</h3>\n\n{% if is_cart_empty %}\n\n<h2>Your shopping cart is empty</h2>\n\n{% else %}\n\n<form action='' method='POST'>\n\n  {% csrf_token %}\n\n  {{ form.management_form }}\n\n <button class='btn btn-success'>\n  <i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\n     Updated cart\n</button>\n  <hr/>\n  <table class=\"table table-striped\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Game</th>\n      <th scope=\"col\">Quantity</th>\n      <th scope=\"col\">Price per unit</th>\n      <th scope=\"col\">Options</th>\n    </tr>\n  </thead>\n  <tbody>\n   {% for item_form in form %}\n   <tr>\n     <td>{{item_form.instance.game.name}}</td>\n     <td class=\n  \"{% if item_form.quantity.errors %}has-errors{% endif%}\">\n     {{item_form.quantity}}\n   </td>\n   <td>${{item_form.instance.price_per_unit|\n            floatformat:2|intcomma}}</td>\n   <td>{{item_form.DELETE}} Remove item</td>\n   {% for hidden in item_form.hidden_fields %}\n     {{ hidden }}\n   {% endfor %}\n  </tr>\n  {% endfor %}\n  <tbody>\n </table>\n </form>\n<hr/>\n<div class='footer'>\n  <p class='total-value'>Total of your order:\n     ${{total_order|floatformat:2|intcomma}}</p>\n  <button class='btn btn-primary'>\n     <i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n        SEND ORDER\n  </button>\n</div>\n  {% endif %}\n</div>\n{% endblock %}\n```", "```py\n   path(r'cart/add/<int:game_id>/', views.add_to_cart),\n```", "```py\nfrom decimal import Decimal\nfrom django.shortcuts import get_object_or_404\nfrom django.contrib import messages\nfrom django.contrib.auth.decorators import login_required\n```", "```py\ndef get_existing_item(self, cart, game):\n    try:\n        return self.get(cart_id=cart.id,\n                        game_id=game.id)\n    except ShoppingCartItem.DoesNotExist:\n        return None\n```", "```py\n@login_required def add_to_cart(request, game_id):\n    game = get_object_or_404(Game, pk=game_id)\n    cart = ShoppingCart.objects.get_by_user(request.user)\n\n    existing_item = ShoppingCartItem.objects.get_existing_item(cart, \n    game)\n\n    if existing_item is None:\n\n        price = (Decimal(0)\n            if not hasattr(game, 'pricelist')\n            else game.pricelist.price_per_unit)\n\n        new_item = ShoppingCartItem(\n            game=game,\n            quantity=1,\n            price_per_unit=price,\n            cart=cart\n        )\n        new_item.save()\n    else:\n        existing_item.quantity = F('quantity') + 1\n  existing_item.save()\n\n        messages.add_message(\n             request,\n             messages.INFO,\n             f'The game {game.name} has been added to your cart.')\n\n        return HttpResponseRedirect(reverse_lazy('user-cart'))\n```", "```py\n.cart-details h3 {\n    margin-bottom: 40px;\n}\n\n.cart-details .table tbody tr td:nth-child(2) {\n    width: 10%;\n}\n\n.cart-details .table tbody tr td:nth-child(3) {\n    width: 25%;\n}\n\n.cart-details .table tbody tr td:nth-child(4) {\n    width: 20%;\n}\n\n.has-errors input:focus {\n    border-color: red;\n    box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(255,0,0,1);\n    webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 8px rgba(255,0,0,1);\n}\n\n.has-errors input {\n    color: red;\n    border-color: red;\n}\n\n.cart-details .footer {\n    display:flex;\n    justify-content: space-between;\n}\n\n.cart-details .footer .total-value {\n    font-size: 1.4em;\n    font-weight: bold;\n    margin-left: 10px;\n}\n```", "```py\n{% if user.is_authenticated%}\n<li>\n  <a href=\"/cart/\">\n    <i class=\"fa fa-shopping-cart\"\n  aria-hidden=\"true\"></i> CART\n  </a>\n</li>\n{% endif %}\n```"]