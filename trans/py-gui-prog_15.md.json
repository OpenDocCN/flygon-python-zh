["```py\nclass class_name(base_classes):\n    statement(s)\n```", "```py\nclass Student:\n    name = \"\"\n    def __init__(self, name):\n        self.name = name\n    def printName(self):\n        return self.name\n```", "```py\nclass class_name(base_classes):\n    Syntax:\n        variable(s)\n    def method 1(self):\n        statement(s)\n    [def method n(self):\n        statement(s)]\n```", "```py\nStudent.name\n```", "```py\nstudentObj=Student()\n```", "```py\ncourseStudent=Student()\n```", "```py\nclass Student:\n    name = \"\"\n    def __init__(self):\n        self.name = \"David\"\n        studentObj=Student()\n```", "```py\nclass Student:\n    name = \"\"\n    def __init__(self, name):\n        self.name = name\n        studentObj=Student(\"David\")\n```", "```py\nstudentObj.printName()\n```", "```py\nC:\\Pythonbook\\PyQt5>pyuic5 LineEdit.uiClass -o LineEditClass.py\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom LineEditClass import *\nclass Student:\n    name = \"\"\n    def __init__(self, name):\n        self.name = name\n    def printName(self):\n        return self.name\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.ButtonClickMe.clicked.connect(self.dispmessage)\n        self.show()\n    def dispmessage(self):\n        studentObj=Student(self.ui.lineEditName.text())\n        self.ui.labelResponse.setText(\"Hello \n        \"+studentObj.printName())\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoStudentClass import *\nclass Student:\n    name = \"\"\n    code = \"\"\n    def __init__(self, code, name):\n        self.code = code\n        self.name = name\n    def getCode(self):\n        return self.code\n    def getName(self):\n        return self.name\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.ButtonClickMe.clicked.connect(self.dispmessage)\n        self.show()\n    def dispmessage(self):\n        studentObj=Student(self.ui.lineEditCode.text(),             \n        self.ui.lineEditName.text())\n        self.ui.labelResponse.setText(\"Code: \n        \"+studentObj.getCode()+\", Name:\"+studentObj.getName())\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nclass Marks(Student):\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoSimpleInheritance import *\nclass Student:\n    name = \"\"\n    code = \"\"\n    def __init__(self, code, name):\n        self.code = code\n        self.name = name\n    def getCode(self):\n        return self.code\n    def getName(self):\n        return self.name\nclass Marks(Student):\n    historyMarks = 0\n    geographyMarks = 0\n    def __init__(self, code, name, historyMarks, \n    geographyMarks):\n        Student.__init__(self,code,name)\n        self.historyMarks = historyMarks\n        self.geographyMarks = geographyMarks\n    def getHistoryMarks(self):\n        return self.historyMarks\n    def getGeographyMarks(self):\n        return self.geographyMarks\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.ButtonClickMe.clicked.connect(self.dispmessage)\n        self.show()\n    def dispmessage(self):\n        marksObj=Marks(self.ui.lineEditCode.text(),                           \n        self.ui.lineEditName.text(), \n        self.ui.lineEditHistoryMarks.text(),     \n        self.ui.lineEditGeographyMarks.text())\n        self.ui.labelResponse.setText(\"Code:     \n        \"+marksObj.getCode()+\", Name:\"+marksObj.getName()+\"\n        nHistory Marks:\"+marksObj.getHistoryMarks()+\", Geography         \n        Marks:\"+marksObj.getGeographyMarks())\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nclass Student:\n    class Marks(Student):\n        class Result(Marks):\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoMultilevelInheritance import *\nclass Student:\n    name = \"\"\n    code = \"\"\n    def __init__(self, code, name):\n        self.code = code\n        self.name = name\n    def getCode(self):\n        return self.code\n    def getName(self):\n        return self.name\nclass Marks(Student):\n    historyMarks = 0\n    geographyMarks = 0\n    def __init__(self, code, name, historyMarks, \n    geographyMarks):\n        Student.__init__(self,code,name)\n        self.historyMarks = historyMarks\n        self.geographyMarks = geographyMarks\n    def getHistoryMarks(self):\n        return self.historyMarks\n    def getGeographyMarks(self):\n        return self.geographyMarks\nclass Result(Marks):\n    totalMarks = 0\n    percentage = 0\n    def __init__(self, code, name, historyMarks, \n    geographyMarks):\n        Marks.__init__(self, code, name, historyMarks, \n        geographyMarks)\n        self.totalMarks = historyMarks + geographyMarks\n        self.percentage = (historyMarks + \n        geographyMarks) / 200 * 100\n    def getTotalMarks(self):\n        return self.totalMarks\n    def getPercentage(self):\n        return self.percentage\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.ButtonClickMe.clicked.connect(self.dispmessage)\n        self.show()\n    def dispmessage(self):\n        resultObj=Result(self.ui.lineEditCode.text(),                      \n        self.ui.lineEditName.text(),           \n        int(self.ui.lineEditHistoryMarks.text()),      \n        int(self.ui.lineEditGeographyMarks.text()))\n        self.ui.lineEditTotal.setText(str(resultObj.\n        getTotalMarks()))\n        self.ui.lineEditPercentage.setText(str(resultObj.\n        getPercentage()))\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nclass Student:\n    class Marks:\n        class Result(Student, Marks):\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoMultipleInheritance import *\nclass Student:\n    name = \"\"\n    code = \"\"\n    def __init__(self, code, name):\n        self.code = code\n        self.name = name\n    def getCode(self):\n        return self.code\n    def getName(self):\n        return self.name\nclass Marks:\n    historyMarks = 0\n    geographyMarks = 0\n    def __init__(self, historyMarks, geographyMarks):\n        self.historyMarks = historyMarks\n        self.geographyMarks = geographyMarks\n    def getHistoryMarks(self):\n        return self.historyMarks\n    def getGeographyMarks(self):\n        return self.geographyMarks\nclass Result(Student, Marks):\n    totalMarks = 0\n    percentage = 0\n    def __init__(self, code, name, historyMarks, \n    geographyMarks):\n        Student.__init__(self, code, name)\n        Marks.__init__(self, historyMarks, geographyMarks)\n        self.totalMarks = historyMarks + geographyMarks\n        self.percentage = (historyMarks + \n        geographyMarks) / 200 * 100\n    def getTotalMarks(self):\n        return self.totalMarks\n    def getPercentage(self):\n        return self.percentage\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.ButtonClickMe.clicked.connect(self.dispmessage)\n        self.show()\n    def dispmessage(self):\n        resultObj=Result(self.ui.lineEditCode.text(),         \n        self.ui.lineEditName.text(),\n        int(self.ui.lineEditHistoryMarks.text()),  \n        int(self.ui.lineEditGeographyMarks.text()))\n        self.ui.lineEditTotal.setText(str(resultObj.\n        getTotalMarks()))\n        self.ui.lineEditPercentage.setText(str(resultObj.\n        getPercentage()))\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```"]