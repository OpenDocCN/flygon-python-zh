["```py\n$ sudo apt-get install software-properties-common\n$ sudo apt-add-repository ppa:ansible/ansible\n$ sudo apt-get update\n$ sudo apt-get install ansible\n```", "```py\n$ ansible --version\nansible 2.6.1\n  config file = /etc/ansible/ansible.cfg \n```", "```py\n$ git clone https://github.com/ansible/ansible.git --recursive\n$ cd ansible/\n$ source ./hacking/env-setup\n...\nSetting up Ansible to run out of checkout...\n$ ansible --version\nansible 2.7.0.dev0 (devel cde3a03b32) last updated 2018/07/11 08:39:39 (GMT -700)\n config file = /etc/ansible/ansible.cfg\n...\n```", "```py\n$ git branch -a\n$ git tag --list \n$ git checkout v2.5.6\n...\nHEAD is now at 0c985fe... New release v2.5.6\n$ source ./hacking/env-setup\n$ ansible --version\nansible 2.5.6 (detached HEAD 0c985fee8a) last updated 2018/07/11 08:48:20 (GMT -700)\n config file = /etc/ansible/ansible.cfg\n```", "```py\n$ ansible --version\nansible 2.2.3.0 (detached HEAD f5be18f409) last updated 2018/07/14 07:40:09 (GMT -700)\n...\n$ git submodule update --init --recursive\nSubmodule 'lib/ansible/modules/core' (https://github.com/ansible/ansible-modules-core) registered for path 'lib/ansible/modules/core'\n```", "```py\n$ ssh-keygen -t rsa <<<< generates public-private key pair on the host machine if you have not done so already\n$ cat ~/.ssh/id_rsa.pub <<<< copy the content of the output and paste it to the ~/.ssh/authorized_keys file on the target host\n```", "```py\n$ cat hosts\n192.168.199.170\n```", "```py\n$ ansible -i hosts 192.168.199.170 -m ping\n192.168.199.170 | SUCCESS => {\n \"changed\": false,\n \"ping\": \"pong\"\n}\n```", "```py\n[defaults]\nhost_key_checking = False\n```", "```py\n---\n- hosts: 192.168.199.170\n\n tasks:\n - name: check disk usage\n shell: df > df_temp.txt\n```", "```py\n$ ansible-playbook -i hosts df_playbook.yml\nPLAY [192.168.199.170] *********************************************************\n\nTASK [setup] *******************************************************************\nok: [192.168.199.170]\n\nTASK [check disk usage] ************************************************\nchanged: [192.168.199.170]\n\nPLAY RECAP *********************************************************************\n192.168.199.170 : ok=2 changed=1 unreachable=0 failed=0\n```", "```py\n        [\n          {\n            \"hosts\": \"192.168.199.170\",\n            \"tasks\": [\n            \"name\": \"check disk usage\",\n            \"shell\": \"df > df_temp.txt\"\n           ]\n          }\n        ]\n```", "```py\n[ubuntu]\n192.168.199.170\n\n[nexus]\n192.168.199.148\n192.168.199.149\n\n[nexus:vars]\nusername=cisco\npassword=cisco\n\n[nexus_by_name]\nswitch1 ansible_host=192.168.199.148\nswitch2 ansible_host=192.168.199.149\n```", "```py\n---\n- name: Configure SNMP Contact\nhosts: \"nexus\"\ngather_facts: false\nconnection: local\n<skip>\n```", "```py\n[cisco]\nrouter1\nrouter2\n\n[arista]\nswitch1\nswitch2\n\n[datacenter:children]\ncisco\narista\n```", "```py\n---\n- name: Configure SNMP Contact\nhosts: \"nexus\"\ngather_facts: false\nconnection: local\n\nvars:\ncli:\nhost: \"{{ inventory_hostname }}\"\nusername: cisco\npassword: cisco\ntransport: cli\n\ntasks:\n- name: configure snmp contact\nnxos_snmp_contact:\ncontact: TEST_1\nstate: present\nprovider: \"{{ cli }}\"\n\nregister: output\n\n- name: show output\ndebug:\nvar: output\n```", "```py\n[nexus:vars]\nusername=cisco\npassword=cisco\n\n[nexus_by_name]\nswitch1 ansible_host=192.168.199.148\nswitch2 ansible_host=192.168.199.149\n```", "```py\n[nexus_by_name]\nswitch1 ansible_host=192.168.199.148\nswitch2 ansible_host=192.168.199.149\n\n[nexus_by_name:vars]\nusername=cisco\npassword=cisco\n```", "```py\n---\n- name: Configure SNMP Contact\nhosts: \"nexus_by_name\"\ngather_facts: false\nconnection: local\n\nvars:\n  cli:\n     host: \"{{ ansible_host }}\"\n     username: \"{{ username }}\"\n     password: \"{{ password }}\"\n     transport: cli\n\ntasks:\n  - name: configure snmp contact\n  nxos_snmp_contact:\n    contact: TEST_1\n    state: present\n    provider: \"{{ cli }}\"\n\n  register: output\n\n- name: show output\n  debug:\n    var: output\n```", "```py\n TASK [show output] \n *************************************************************\n ok: [switch1] => {\n \"output\": {\n \"changed\": false,\n \"end_state\": {\n \"contact\": \"TEST_1\"\n },\n \"existing\": {\n \"contact\": \"TEST_1\"\n },\n \"proposed\": {\n \"contact\": \"TEST_1\"\n },\n \"updates\": []\n }\n }\n```", "```py\nmsg: '{{ output[\"end_state\"][\"contact\"] }}'\nmsg: '{{ output.end_state.contact }}'\n```", "```py\nTASK [show output in output[\"end_state\"][\"contact\"]] \n***************************\nok: [switch1] => {\n \"msg\": \"TEST_1\"\n}\nok: [switch2] => {\n \"msg\": \"TEST_1\"\n}\n\nTASK [show output in output.end_state.contact] \n*********************************\nok: [switch1] => {\n \"msg\": \"TEST_1\"\n}\nok: [switch2] => {\n \"msg\": \"TEST_1\"\n}\n```", "```py\n    ---\n    - name: Configure SNMP Contact\n      hosts: \"nexus_by_name\"\n      gather_facts: false\n      connection: local\n\n      vars:\n        cli:\n          host: \"{{ ansible_host }}\"\n          username: \"{{ username }}\"\n          password: \"{{ password }}\"\n          transport: cli\n\n      tasks:\n        - name: configure snmp contact\n          nxos_snmp_contact:\n            contact: TEST_1\n            state: present\n            username: cisco123\n            password: cisco123\n            provider: \"{{ cli }}\"\n\n          register: output\n\n        - name: show output in output[\"end_state\"][\"contact\"]\n          debug:\n            msg: '{{ output[\"end_state\"][\"contact\"] }}'\n\n        - name: show output in output.end_state.contact\n          debug:\n            msg: '{{ output.end_state.contact }}'\n```", "```py\nPLAY [Configure SNMP Contact] \n**************************************************\n\nTASK [configure snmp contact] \n**************************************************\nfatal: [switch2]: FAILED! => {\"changed\": false, \"failed\": true, \n\"msg\": \"failed to connect to 192.168.199.149:22\"}\nfatal: [switch1]: FAILED! => {\"changed\": false, \"failed\": true, \n\"msg\": \"failed to connect to 192.168.199.148:22\"}\nto retry, use: --limit \n@/home/echou/Master_Python_Networking/Chapter4/cisco_4.retry\n\nPLAY RECAP \n*********************************************************************\nswitch1 : ok=0 changed=0 unreachable=0 failed=1\nswitch2 : ok=0 changed=0 unreachable=0 failed=1\n```", "```py\n[ios_devices]\nR1 ansible_host=192.168.24.250\nR2 ansible_host=192.168.24.251\n\n[ios_devices:vars]\nusername=cisco\npassword=cisco\n```", "```py\n    ---\n    - name: IOS Show Commands\n      hosts: \"ios_devices\"\n      gather_facts: false\n      connection: local\n\n      vars:\n        cli:\n          host: \"{{ ansible_host }}\"\n          username: \"{{ username }}\"\n          password: \"{{ password }}\"\n          transport: cli\n\n      tasks:\n        - name: ios show commands\n          ios_command:\n            commands:\n              - show version | i IOS\n              - show run | i hostname\n            provider: \"{{ cli }}\"\n\n          register: output\n\n        - name: show output in output[\"end_state\"][\"contact\"]\n          debug:\n            var: output\n```", "```py\n $ ansible-playbook -i ios_hosts cisco_5.yml\n\n PLAY [IOS Show Commands] \n *******************************************************\n\n TASK [ios show commands] \n *******************************************************\n ok: [R1]\n ok: [R2]\n\n TASK [show output in output[\"end_state\"][\"contact\"]] \n ***************************\n ok: [R1] => {\n \"output\": {\n \"changed\": false,\n \"stdout\": [\n \"Cisco IOS Software, 7200 Software (C7200-A3JK9S-M), Version \n 12.4(25g), RELEASE SOFTWARE (fc1)\",\n \"hostname R1\"\n ],\n \"stdout_lines\": [\n [\n \"Cisco IOS Software, 7200 Software (C7200-A3JK9S-M), Version \n 12.4(25g), RELEASE SOFTWARE (fc1)\"\n ],\n [\n \"hostname R1\"\n ]\n ]\n }\n }\n ok: [R2] => {\n \"output\": {\n \"changed\": false,\n \"stdout\": [\n \"Cisco IOS Software, 7200 Software (C7200-A3JK9S-M), Version \n 12.4(25g), RELEASE SOFTWARE (fc1)\",\n \"hostname R2\"\n ],\n \"stdout_lines\": [\n [\n \"Cisco IOS Software, 7200 Software (C7200-A3JK9S-M), Version \n 12.4(25g), RELEASE SOFTWARE (fc1)\"\n ],\n [\n \"hostname R2\"\n ]\n ]\n }\n }\n\n PLAY RECAP \n *********************************************************************\n R1 : ok=2 changed=0 unreachable=0 failed=0\n R2 : ok=2 changed=0 unreachable=0 failed=0\n```", "```py\n$ cat hosts\n[ios-devices]\niosv-1\niosv-2\n```", "```py\n$ ls -a host_vars/\n. .. iosv-1 iosv-2\n```", "```py\n$ cat host_vars/iosv-1\n---\nansible_host: 172.16.1.20\nansible_user: cisco\nansible_ssh_pass: cisco\n***ansible_connection: network_cli***\nansible_network_os: ios\nansbile_become: yes\nansible_become_method: enable\nansible_become_pass: cisco\n\n$ cat host_vars/iosv-2\n---\nansible_host: 172.16.1.21\nansible_user: cisco\nansible_ssh_pass: cisco\n***ansible_connection: network_cli***\nansible_network_os: ios\nansbile_become: yes\nansible_become_method: enable\nansible_become_pass: cisco\n```", "```py\n$ cat my_playbook.yml\n---\n- name: Chapter 4 Ansible 2.5 Best Practice Demonstration\n ***connection: network_cli***\n gather_facts: false\n hosts: all\n tasks:\n - name: backup\n ios_config:\n backup: yes\n register: backup_ios_location\n ***when: ansible_network_os == 'ios'***\n```", "```py\n$ ansible-playbook -i hosts my_playbook.yml\n\nPLAY [Chapter 4 Ansible 2.5 Best Practice Demonstration] ***********************\n\nTASK [backup] ******************************************************************\nok: [iosv-2]\nok: [iosv-1]\n\nPLAY RECAP *********************************************************************\niosv-1 : ok=1 changed=0 unreachable=0 failed=0\niosv-2 : ok=1 changed=0 unreachable=0 failed=0\n\n$ ls -l backup/\ntotal 8\n-rw-rw-r-- 1 echou echou 3996 Jul 11 19:01 iosv-1_config.2018-07-11@19:01:55\n-rw-rw-r-- 1 echou echou 3996 Jul 11 19:01 iosv-2_config.2018-07-11@19:01:55\n\n$ cat backup/iosv-1_config.2018-07-11@19\\:01\\:55\nBuilding configuration...\n\nCurrent configuration : 3927 bytes\n!\n! Last configuration change at 01:46:00 UTC Thu Jul 12 2018 by cisco\n!\nversion 15.6\nservice timestamps debug datetime msec\nservice timestamps log datetime msec\n...\n```", "```py\n$ sudo pip install jxmlease\n```", "```py\n[junos_devices]\nJ1 ansible_host=192.168.24.252\n\n[junos_devices:vars]\nusername=juniper\npassword=juniper!\n```", "```py\n    ---\n    - name: Get Juniper Device Facts\n      hosts: \"junos_devices\"\n      gather_facts: false\n      connection: local\n\n      vars:\n        netconf:\n          host: \"{{ ansible_host }}\"\n          username: \"{{ username }}\"\n          password: \"{{ password }}\"\n          port: 830\n          transport: netconf\n\n      tasks:\n        - name: collect default set of facts\n          junos_facts:\n            provider: \"{{ netconf }}\"\n\n          register: output\n\n        - name: show output\n          debug:\n            var: output\n```", "```py\nPLAY [Get Juniper Device Facts] \n************************************************\n\nTASK [collect default set of facts] \n********************************************\nok: [J1]\n\nTASK [show output] \n*************************************************************\nok: [J1] => {\n\"output\": {\n\"ansible_facts\": {\n\"HOME\": \"/var/home/juniper\",\n\"domain\": \"python\",\n\"fqdn\": \"master.python\",\n\"has_2RE\": false,\n\"hostname\": \"master\",\n\"ifd_style\": \"CLASSIC\",\n\"model\": \"olive\",\n\"personality\": \"UNKNOWN\",\n\"serialnumber\": \"\",\n\"switch_style\": \"NONE\",\n\"vc_capable\": false,\n\"version\": \"12.1R1.9\",\n\"version_info\": {\n\"build\": 9,\n\"major\": [\n12,\n1\n],\n\"minor\": \"1\",\n\"type\": \"R\"\n}\n},\n\"changed\": false\n }\n}\n\nPLAY RECAP \n*********************************************************************\nJ1 : ok=2 changed=0 unreachable=0 failed=0\n```", "```py\n[eos_devices]\nA1 ansible_host=192.168.199.158\n```", "```py\n    ---\n - name: EOS Show Commands\n hosts: \"eos_devices\"\n gather_facts: false\n connection: local\n\n vars:\n cli:\n host: \"{{ ansible_host }}\"\n username: \"arista\"\n password: \"arista\"\n authorize: true\n transport: cli\n\n tasks:\n - name: eos show commands\n eos_command:\n commands:\n - show version | i Arista\n provider: \"{{ cli }}\"\n register: output\n\n - name: show output\n debug:\n var: output\n```", "```py\n PLAY [EOS Show Commands] \n *******************************************************\n\n TASK [eos show commands] \n *******************************************************\n ok: [A1]\n\n TASK [show output] \n *************************************************************\n ok: [A1] => {\n \"output\": {\n \"changed\": false,\n \"stdout\": [\n \"Arista DCS-7050QX-32-F\"\n ],\n \"stdout_lines\": [\n [\n \"Arista DCS-7050QX-32-F\"\n ]\n ],\n \"warnings\": []\n }\n }\n\n PLAY RECAP \n *********************************************************************\n A1 : ok=2 changed=0 unreachable=0 failed=0\n```"]