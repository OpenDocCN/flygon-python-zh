["```py\nimport datetime\n\ndef now():\n    return datetime.datetime.utcnow().replace(tzinfo=datetime.timezone.utc)\n```", "```py\ndef astimezone(d, offset):\n    return d.astimezone(datetime.timezone(datetime.timedelta(hours=offset)))\n```", "```py\n>>> d = now()\n>>> print(d)\n2018-03-19 21:35:43.251685+00:00\n\n>>> d = astimezone(d, 1)\n>>> print(d)\n2018-03-19 22:35:43.251685+01:00\n```", "```py\nimport datetime\n\ndef parse_iso8601(strdate):\n    date, time = strdate.split('T', 1)\n    if '-' in time:\n        time, tz = time.split('-')\n        tz = '-' + tz\n    elif '+' in time:\n        time, tz = time.split('+')\n        tz = '+' + tz\n    elif 'Z' in time:\n        time = time[:-1]\n        tz = '+0000'\n    date = date.replace('-', '')\n    time = time.replace(':', '')\n    tz = tz.replace(':', '')\n    return datetime.datetime.strptime('{}T{}{}'.format(date, time, tz), \n                                      \"%Y%m%dT%H%M%S%z\")\n```", "```py\n>>> parse_iso8601('2018-03-19T22:00Z')\ndatetime.datetime(2018, 3, 19, 22, 0, tzinfo=datetime.timezone.utc)\n>>> parse_iso8601('2018-03-19T2200Z')\ndatetime.datetime(2018, 3, 19, 22, 0, tzinfo=datetime.timezone.utc)\n>>> parse_iso8601('2018-03-19T22:00:03Z')\ndatetime.datetime(2018, 3, 19, 22, 0, 3, tzinfo=datetime.timezone.utc)\n>>> parse_iso8601('20180319T22:00:03Z')\ndatetime.datetime(2018, 3, 19, 22, 0, 3, tzinfo=datetime.timezone.utc)\n>>> parse_iso8601('20180319T22:00:03+05:00')\ndatetime.datetime(2018, 3, 19, 22, 0, 3, tzinfo=datetime.timezone(datetime.timedelta(0, 18000)))\n>>> parse_iso8601('20180319T22:00:03+0500')\ndatetime.datetime(2018, 3, 19, 22, 0, 3, tzinfo=datetime.timezone(datetime.timedelta(0, 18000)))\n```", "```py\nimport datetime\n\ndef asutc(d):\n    return d.astimezone(datetime.timezone.utc)\n```", "```py\n>>> now = datetime.datetime.now().replace(\n...    tzinfo=datetime.timezone(datetime.timedelta(hours=1))\n... )\n>>> now\ndatetime.datetime(2018, 3, 22, 0, 49, 45, 198483, \n                  tzinfo=datetime.timezone(datetime.timedelta(0, 3600)))\n>>> asutc(now)\ndatetime.datetime(2018, 3, 21, 23, 49, 49, 742126, tzinfo=datetime.timezone.utc)\n```", "```py\n>>> import datetime\n>>> ts = 1521588268\n\n>>> d = datetime.datetime.utcfromtimestamp(ts)\n>>> print(repr(d))\ndatetime.datetime(2018, 3, 20, 23, 24, 28)\n\n>>> newts = d.timestamp()\n>>> print(newts)\n1521584668.0\n```", "```py\n>>> datetime.datetime(1300, 1, 1)\ndatetime.datetime(1300, 1, 1, 0, 0)\n>>> datetime.datetime(1300, 1, 1).timestamp()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nOverflowError: timestamp out of range\n```", "```py\n>>> datetime.datetime.utcfromtimestamp(253402214400)\ndatetime.datetime(9999, 12, 31, 0, 0)\n>>> datetime.datetime.utcfromtimestamp(253402214400+(3600*24))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nValueError: year is out of range\n```", "```py\nimport locale\nimport contextlib\n\n@contextlib.contextmanager\ndef switchlocale(name):\n    prev = locale.getlocale()\n    locale.setlocale(locale.LC_ALL, name)\n    yield\n    locale.setlocale(locale.LC_ALL, prev)\n\ndef format_date(loc, d):\n    with switchlocale(loc):\n        fmt = locale.nl_langinfo(locale.D_T_FMT)\n        return d.strftime(fmt)\n```", "```py\n>>> format_date('de_DE', datetime.datetime.utcnow())\n'Mi 21 M\u00e4r 00:08:59 2018'\n>>> format_date('en_GB', datetime.datetime.utcnow())\n'Wed 21 Mar 00:09:11 2018'\n```", "```py\nimport datetime\n\ndef shiftdate(d, days):\n    return (\n        d.replace(hour=0, minute=0, second=0, microsecond=0) + \n        datetime.timedelta(days=days)\n    )\n```", "```py\n>>> now = datetime.datetime.utcnow()\n>>> now\ndatetime.datetime(2018, 3, 21, 21, 55, 5, 699400)\n```", "```py\n>>> shiftdate(now, 1)\ndatetime.datetime(2018, 3, 22, 0, 0)\n```", "```py\n>>> shiftdate(now, -1)\ndatetime.datetime(2018, 3, 20, 0, 0)\n```", "```py\n>>> shiftdate(now, 11)\ndatetime.datetime(2018, 4, 1, 0, 0)\n```", "```py\nimport datetime\n\ndef shiftmonth(d, months):\n    for _ in range(abs(months)):\n        if months > 0:\n            d = d.replace(day=5) + datetime.timedelta(days=28)\n        else:\n            d = d.replace(day=1) - datetime.timedelta(days=1)\n    d = d.replace(day=1, hour=0, minute=0, second=0, microsecond=0)\n    return d\n```", "```py\n>>> now = datetime.datetime.utcnow()\n>>> now\ndatetime.datetime(2018, 3, 21, 21, 55, 5, 699400)\n```", "```py\n>>> shiftmonth(now, 1)\ndatetime.datetime(2018, 4, 1, 0, 0)\n```", "```py\n>>> shiftmonth(now, -1)\ndatetime.datetime(2018, 2, 1, 0, 0)\n```", "```py\n>>> shiftmonth(now, 10)\ndatetime.datetime(2019, 1, 1, 0, 0)\n```", "```py\nd = d.replace(day=1, hour=0, minute=0, second=0, microsecond=0)\n```", "```py\nimport datetime\n\ndef monthweekdays(month, weekday):\n    now = datetime.datetime.utcnow()\n    d = now.replace(day=1, month=month, hour=0, minute=0, second=0, \n                    microsecond=0)\n    days = []\n    while d.month == month:\n        if d.isoweekday() == weekday:\n            days.append(d)\n        d += datetime.timedelta(days=1)\n    return days\n```", "```py\n>>> monthweekdays(3, 1)\n[datetime.datetime(2018, 3, 5, 0, 0), \n datetime.datetime(2018, 3, 12, 0, 0), \n datetime.datetime(2018, 3, 19, 0, 0), \n datetime.datetime(2018, 3, 26, 0, 0)]\n```", "```py\n>>> monthweekdays(3, 1)[2]\ndatetime.datetime(2018, 3, 19, 0, 0)\n```", "```py\ndef workdays(d, end, excluded=(6, 7)):\n    days = []\n    while d.date() < end.date():\n        if d.isoweekday() not in excluded:\n            days.append(d)\n        d += datetime.timedelta(days=1)\n    return days\n```", "```py\n>>> workdays(datetime.datetime(2018, 3, 22), datetime.datetime(2018, 3, 26))\n[datetime.datetime(2018, 3, 22, 0, 0), \n datetime.datetime(2018, 3, 23, 0, 0)]\n```", "```py\n>>> t = datetime.time(13, 30)\n>>> d = datetime.date(2018, 1, 11)\n```", "```py\n>>> datetime.datetime.combine(d, t)\ndatetime.datetime(2018, 1, 11, 13, 30)\n```", "```py\n>>> t = datetime.time(13, 30, tzinfo=datetime.timezone.utc)\n>>> datetime.datetime.combine(d, t)\ndatetime.datetime(2018, 1, 11, 13, 30, tzinfo=datetime.timezone.utc)\n```", "```py\n>>> t = datetime.time(13, 30)\n>>> datetime.datetime.combine(d, t, tzinfo=datetime.timezone.utc)\n```"]