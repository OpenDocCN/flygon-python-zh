- en: Chapter 10. Creating Amazing 3D GUIs with PyOpenGL and PyGLet
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章。使用PyOpenGL和PyGLet创建令人惊叹的3D GUI
- en: In this chapter we will create amazing Python GUIs that display true 3-Dimensional
    images that can be rotated around themselves so that we can look at them from
    all sides.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将创建令人惊叹的Python GUI，显示真正的可以旋转的三维图像，这样我们可以从各个角度观察它们。
- en: PyOpenGL transforms our GUI
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyOpenGL转换了我们的GUI
- en: Our GUI in 3D!
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的3D GUI！
- en: Using bitmaps to make our GUI pretty
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用位图使我们的GUI更漂亮
- en: PyGLet transforms our GUI more easily than PyOpenGL
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyGLet比PyOpenGL更容易地转换了我们的GUI
- en: Our GUI in amazing colors
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们的GUI有惊人的颜色
- en: Creating a slide show using tkinter
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用tkinter创建幻灯片放映
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In this chapter, we will transform our GUI by giving it true 3-dimensional capabilities.
    We will use two Python third-party packages. PyOpenGL is a Python binding to the
    OpenGL standard, which is a graphics library that comes built-in with all major
    operating systems. This gives the resulting widgets a native look and feel.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将通过赋予它真正的三维能力来转换我们的GUI。我们将使用两个Python第三方包。PyOpenGL是OpenGL标准的Python绑定，它是一个内置于所有主要操作系统中的图形库。这使得生成的小部件具有本地的外观和感觉。
- en: Pyglet is another Python binding to the OpenGL library, but it can also create
    GUI applications, which can make coding using Pyglet easier than using PyOpenGL.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Pyglet是另一个Python绑定到OpenGL库，但它也可以创建GUI应用程序，这使得使用Pyglet编码比使用PyOpenGL更容易。
- en: PyOpenGL transforms our GUI
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyOpenGL转换了我们的GUI
- en: In this recipe, we will successfully create a Python GUI that imports PyOpenGL
    modules and does actually work!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将成功创建一个导入PyOpenGL模块并实际工作的Python GUI！
- en: In order to do so, we need to overcome some initial challenges.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我们需要克服一些最初的挑战。
- en: This recipe will show one proven way that does work. If you experiment on your
    own and get stuck, remember the famous words from Thomas A. Edison.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个教程将展示一个已经被证明有效的方法。如果你自己尝试并卡住了，记住托马斯·爱迪生的著名话语。
- en: Note
  id: totrans-15
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Thomas Edison, inventor of the light bulb, answered a question from a reporter
    who talked about Edison''s failures. Edison replied:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 发明家托马斯·爱迪生在回答一位记者关于爱迪生的失败的问题时说：
- en: '*"I have not failed. I''ve just found 10,000 ways that won''t work."*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*"我并没有失败。我只是找到了一万种行不通的方法。"*'
- en: First, we have to install the PyOpenGL extension module.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们必须安装PyOpenGL扩展模块。
- en: After successfully installing the PyOpenGL modules that match our OS architecture,
    we will create some example code.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 成功安装与我们的操作系统架构匹配的PyOpenGL模块后，我们将创建一些示例代码。
- en: Getting ready
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will install the PyOpenGL package. In this book, we are using Windows 7 64-bit
    OS and Python 3.4\. The screenshot of downloads that follows is for this configuration.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将安装PyOpenGL包。在本书中，我们使用的是Windows 7 64位操作系统和Python 3.4。接下来的下载截图是针对这个配置的。
- en: We will also be using wxPython. If you do not have wxPython installed, you can
    read some recipes from the previous chapter about how to install wxPython and
    how to use this GUI framework.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用wxPython。如果你没有安装wxPython，你可以阅读前一章关于如何安装wxPython以及如何使用这个GUI框架的一些教程。
- en: Note
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We are using the wxPython Phoenix release, which is the newest release and is
    intended to replace the original Classic wxPython release in the future.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在使用wxPython Phoenix版本，这是最新版本，旨在将原始的Classic wxPython版本替换掉。
- en: How to do it...
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'In order to use PyOpenGL, we have to first install it. The following URL is
    the official Python package installer website:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用PyOpenGL，我们必须首先安装它。以下URL是官方的Python包安装程序网站：
- en: '[https://pypi.python.org/pypi/PyOpenGL/3.0.2#downloads](https://pypi.python.org/pypi/PyOpenGL/3.0.2#downloads)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://pypi.python.org/pypi/PyOpenGL/3.0.2#downloads](https://pypi.python.org/pypi/PyOpenGL/3.0.2#downloads)'
- en: '![How to do it...](graphics/B04829_10_01.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_01.jpg)'
- en: This seems to be the correct installation but, as it turns out, it doesn't work
    with Windows 7 64-bit OS with Python 3.4.3 64-bit.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这似乎是正确的安装，但事实证明，它在Windows 7 64位操作系统和Python 3.4.3 64位上不起作用。
- en: A better place to look for Python installation packages was mentioned in a recipe
    in a previous chapter. You are probably already familiar with it. We download
    the package that matches both our OS and our Python version. It comes with the
    new `.whl` format, so we have to install the Python wheel package first.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一章的教程中提到了一个更好的查找Python安装包的地方。你可能已经很熟悉了。我们下载与我们的操作系统和Python版本匹配的包。它使用新的`.whl`格式，所以我们首先要安装Python轮式包。
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: How to install the Python wheel package is described in a previous recipe.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如何安装Python轮式包的方法在之前的教程中有描述。
- en: Installing PyOpenGL via the `PyOpenGL-3.1.1a1-cp34-none-win_amd64.whl` file
    using the `pip` command is both successful and installs all of the 64-bit modules
    we require.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pip`命令通过`PyOpenGL-3.1.1a1-cp34-none-win_amd64.whl`文件安装PyOpenGL既成功又安装了我们需要的所有64位模块。
- en: Replace `<your full path>` with the full path you downloaded the wheel installer
    to.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 用下载的轮式安装程序的完整路径替换`<your full path>`。
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we now try to import some PyOpenGL modules, it works, as can be seen in
    this code example:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们尝试导入一些PyOpenGL模块时，它可以工作，就像在这个代码示例中所看到的那样：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: All this code is doing is importing several of the OpenGL Python modules. It
    does not do anything else but, when we run our Python module, we do not get any
    errors.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些代码都在做的是导入几个OpenGL Python模块。它除此之外什么也不做，但是当我们运行我们的Python模块时，我们不会收到任何错误。
- en: This proves that we have successfully installed the OpenGL bindings to Python.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这证明我们已成功将OpenGL绑定到Python中。
- en: Now our development environment has been successfully set up and we can try
    it out using wxPython.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的开发环境已经成功设置，我们可以使用wxPython来尝试它。
- en: Note
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Many online examples are restricted to using Python 2.x, as well as using the
    Classic version of wxPython. We are using Python 3 and Phoenix.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 许多在线示例都限制在使用Python 2.x，以及使用Classic版本的wxPython。我们使用的是Python 3和Phoenix。
- en: Using the code based on the wxPython demo examples creates a working 3D cube.
    In comparison, running the cone example did not work, but this example got us
    started on the right track.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用基于wxPython演示示例的代码创建了一个工作的3D立方体。相比之下，运行圆锥体示例没有成功，但这个示例让我们在正确的轨道上开始了。
- en: 'Here is the URL:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这是URL：
- en: '[http://wiki.wxpython.org/GLCanvas%20update](http://wiki.wxpython.org/GLCanvas%20update)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://wiki.wxpython.org/GLCanvas%20update](http://wiki.wxpython.org/GLCanvas%20update)'
- en: 'Here are some modifications to the code:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是对代码的一些修改：
- en: '[PRE2]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We now can create the following GUI:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以创建以下GUI：
- en: '![How to do it...](graphics/B04829_10_02.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_02.jpg)'
- en: In the Classic version of wxPython `SetCurrent()` did not require a context.
    Here is some code we might find when searching online.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在wxPython的经典版本中，`SetCurrent()`不需要上下文。这是我们在网上搜索时可能会找到的一些代码。
- en: '[PRE3]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The preceding code does not work when using wxPython Phoenix. We can look up
    the correct syntax for Phoenix online.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用wxPython Phoenix时，前面的代码不起作用。我们可以在网上查找Phoenix的正确语法。
- en: '![How to do it...](graphics/B04829_10_03.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_03.jpg)'
- en: How it works...
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we had our first experiences of OpenGL with PyOpenGL Python
    bindings. While OpenGL can create truly amazing images in true 3D, we ran into
    some challenges along the way and then found solutions to these challenges that
    made it work.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们首次使用了PyOpenGL Python绑定的OpenGL。虽然OpenGL可以创建真正惊人的真3D图像，但我们在这个过程中遇到了一些挑战，然后找到了解决这些挑战的方法，使其工作起来。
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We are coding in Python, creating 3D images!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们正在用Python编写3D图像！
- en: Our GUI in 3D!
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们的GUI是3D的！
- en: In this recipe we will create our own GUI using wxPython. We are reusing some
    code from the wxPython demo examples, which we have reduced to the minimum code
    required to display OpenGL in 3D.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将使用wxPython创建自己的GUI。我们正在重用一些来自wxPython演示示例的代码，我们已经将其减少到显示3D OpenGL所需的最少代码。
- en: Note
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: OpenGL is a very large library. We will not go into detailed explanations of
    this library. There are a lot of books and online documentation available if you
    want to study OpenGL further. It has its own shading language.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: OpenGL是一个非常庞大的库。我们不会详细解释这个库。如果你想进一步学习OpenGL，有很多书籍和在线文档可供参考。它有自己的着色语言。
- en: Getting ready
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Reading the previous recipe is probably good preparation for this recipe.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读前面的配方可能是准备这个配方的好方法。
- en: How to do it...
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: As the entire Python code is a little bit long here, we will show just a little
    bit of the code.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 由于整个Python代码有点长，我们只会展示一小部分代码。
- en: 'The entire code is available online and this Python module is called:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 整个代码都可以在线获得，这个Python模块被称为：
- en: '[PRE4]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![How to do it...](graphics/B04829_10_04.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_04.jpg)'
- en: The preceding screenshot shows our wxPython GUI. When we click the button widget,
    the following second window appears.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的屏幕截图显示了我们的wxPython GUI。当我们点击按钮小部件时，会出现以下第二个窗口。
- en: '![How to do it...](graphics/B04829_10_05.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_05.jpg)'
- en: Note
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We can now use the mouse to turn the cube around to see all of its six sides.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以使用鼠标将立方体转动起来，看到它的所有六个面。
- en: '![How to do it...](graphics/B04829_10_06.jpg)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_06.jpg)'
- en: We can also maximize this window and the coordinates will scale and we can spin
    this cube around in this much larger window!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以最大化这个窗口，坐标会缩放，我们可以在这个更大的窗口中旋转这个立方体！
- en: '![How to do it...](graphics/B04829_10_07.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_07.jpg)'
- en: The cube could also be a Star Trek space ship!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这个立方体也可以是一艘星际迷航太空飞船！
- en: We just have to become an advanced programmer in this technology if this is
    what we want to develop.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这是我们想要开发的内容，我们只需要成为这项技术的高级程序员。
- en: Note
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Many video games are being developed using OpenGL.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 许多视频游戏正在使用OpenGL开发。
- en: How it works...
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We first created a regular wxPython GUI and placed a button widget onto it.
    Clicking this button invokes the imported OpenGL 3D libraries. The code used is
    part of the wxPython demo examples, which we slightly modified to make it work
    with Phoenix.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先创建了一个常规的wxPython GUI，并在上面放置了一个按钮小部件。单击此按钮会调用导入的OpenGL 3D库。使用的代码是wxPython演示示例的一部分，我们稍微修改了它以使其与Phoenix一起工作。
- en: Note
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This recipe glued our own GUI to this library.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将我们自己的GUI与这个库粘合在一起。
- en: OpenGL is such a huge and impressive library. This recipe gave a taste of how
    to create a working example in Python.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: OpenGL是一个如此庞大和令人印象深刻的库。这个配方让我们体验了如何在Python中创建一个工作示例。
- en: Note
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Often a working example is all we need to get started on our journey.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个工作示例就足以让我们开始我们的旅程。
- en: Using bitmaps to make our GUI pretty
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用位图使我们的GUI漂亮
- en: This recipe was inspired by a wxPython IDE builder framework that, at some point
    in time, used to work.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方受到了一个wxPython IDE构建框架的启发，该框架在某个时候曾经起作用。
- en: It does not work with Python 3 and wxPython Phoenix, but the code is very cool.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 它不能在Python 3和wxPython Phoenix中工作，但这段代码非常酷。
- en: We will reuse a bitmap image from the large amount of code this project supplies.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将重用这个项目提供的大量代码中的一个位图图像。
- en: Before time runs out, you can fork the Google code on GitHub.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在时间耗尽之前，你可以在GitHub上fork Google代码。
- en: '![Using bitmaps to make our GUI pretty](graphics/B04829_10_08.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![使用位图使我们的GUI漂亮](graphics/B04829_10_08.jpg)'
- en: Getting ready
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will continue to use wxPython in this recipe, so reading at least parts of
    the previous chapter might be useful as a preparation for this recipe.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将继续使用wxPython，因此阅读至少前一章的部分可能对准备这个配方有用。
- en: How to do it...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: After reverse-engineering the gui2py code and making other changes to this code,
    we might achieve the following window widget, which displays a nice, tiled background.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在反向工程gui2py代码并对此代码进行其他更改后，我们可能会实现以下窗口小部件，它显示了一个漂亮的平铺背景。
- en: '![How to do it...](graphics/B04829_10_09.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_09.jpg)'
- en: Of course, we lost a lot of widgets refactoring the code from the website mentioned
    previously, yet it does give us a cool background, and clicking the **Quit** button
    still works.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们在重构之前的网站代码时丢失了很多小部件，但它确实给了我们一个很酷的背景，点击“退出”按钮仍然有效。
- en: The next step is to figure out how to integrate the interesting part of the
    code into our own GUI.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是弄清楚如何将代码的有趣部分集成到我们自己的GUI中。
- en: We do this by adding the following code to the GUI of the previous recipe.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过将以下代码添加到上一个教程的GUI中来实现这一点。
- en: '[PRE5]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We have to bind to parent, not self, otherwise our bitmap will not show up.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须绑定到父级，而不是self，否则我们的位图将不会显示出来。
- en: Running our improved code now tiles a bitmap as the background of our GUI.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 现在运行我们改进的代码会将位图平铺为GUI的背景。
- en: '![How to do it...](graphics/B04829_10_10.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_10.jpg)'
- en: Clicking the button still invokes our OpenGL 3D drawing, so we did not lose
    any functionality.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 点击按钮仍然会调用我们的OpenGL 3D绘图，所以我们没有失去任何功能。
- en: '![How to do it...](graphics/B04829_10_11.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_11.jpg)'
- en: How it works...
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we enhanced our GUI by using a bitmap as a background. We tiled
    the bitmap image and when we resized the GUI window, the bitmap automatically
    adjusted itself to fill in the entire area of the Canvas we were painting on using
    the device context.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们通过使用位图作为背景来增强了我们的GUI。我们平铺了位图图像，当我们调整GUI窗口的大小时，位图会自动调整以填充我们正在使用设备上绘制的画布的整个区域。
- en: Note
  id: totrans-110
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The preceding wxPython code can load different image file formats.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 上述wxPython代码可以加载不同的图像文件格式。
- en: PyGLet transforms our GUI more easily than PyOpenGL
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyGLet比PyOpenGL更容易地转换我们的GUI
- en: In this recipe, we will use the PyGLet GUI development framework to create our
    GUIs.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将使用PyGLet GUI开发框架来创建我们的GUI。
- en: PyGLet is easier to use than PyOpenGL as it comes with its own GUI event loop,
    so we do not need to use tkinter or wxPython to create our GUI.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: PyGLet比PyOpenGL更容易使用，因为它自带了自己的GUI事件循环，所以我们不需要使用tkinter或wxPython来创建我们的GUI。
- en: How to do it...
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: In order to use Pyglet, we first have to install this third-party Python plugin.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用Pyglet，我们首先必须安装这个第三方Python插件。
- en: 'Using the `pip` command, we can easily install the library and a successful
    installation looks like this in our `site-packages` Python folder:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pip`命令，我们可以轻松安装这个库，成功安装在我们的`site-packages` Python文件夹中看起来像这样：
- en: '![How to do it...](graphics/B04829_10_12.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_12.jpg)'
- en: 'The online documentation is located at this website for the current release:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在线文档位于当前版本的这个网站：
- en: '[https://pyglet.readthedocs.org/en/pyglet-1.2-maintenance/](https://pyglet.readthedocs.org/en/pyglet-1.2-maintenance/)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://pyglet.readthedocs.org/en/pyglet-1.2-maintenance/](https://pyglet.readthedocs.org/en/pyglet-1.2-maintenance/)'
- en: '![How to do it...](graphics/B04829_10_13.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_13.jpg)'
- en: 'A first experience using the Pyglet library may look like this:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Pyglet库的第一次体验可能是这样的：
- en: '[PRE6]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The preceding code is from the official pyglet.org website and results in the
    following fully functional GUI:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码来自官方网站pyglet.org，并导致以下完全功能的GUI：
- en: '![How to do it...](graphics/B04829_10_14.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_14.jpg)'
- en: How it works...
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we used another third-party Python module that wraps the OpenGL
    library.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们使用了另一个包装了OpenGL库的第三方Python模块。
- en: This library comes with its own event loop processing power, which enables us
    to avoid having to rely on yet another library to create a running Python GUI.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库自带了自己的事件循环处理能力，这使我们不必依赖另一个库来创建一个运行中的Python GUI。
- en: We have explored the official website that shows us how to install and use this
    fantastic GUI library.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经探索了官方网站，它向我们展示了如何安装和使用这个奇妙的GUI库。
- en: Our GUI in amazing colors
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们GUI中惊人的颜色
- en: In this recipe, we will extend our GUI written using Pyglet from the previous
    recipe, by turning it into true 3D.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将扩展我们使用Pyglet编写的GUI，将其转变为真正的3D。
- en: We will also add some fancy colors to it. This recipe was inspired by some sample
    code from the *OpenGL SuperBible* book series. It creates a very colorful cube,
    which we can turn around in 3-dimensional space using the keyboard up, down, left,
    and right buttons.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将为其添加一些花哨的颜色。这个教程受到了*OpenGL SuperBible*图书系列中一些示例代码的启发。它创建了一个非常丰富多彩的立方体，我们可以使用键盘上、下、左、右按钮在三维空间中旋转它。
- en: We have slightly improved the sample code by making the image turn when holding
    down one of the keys instead of having to press and release the key.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍微改进了示例代码，使图像在按住一个键时转动，而不是必须按下并释放键。
- en: Getting ready
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: The previous recipe explains how to install PyGLet and gives you an introduction
    to this library. If you have not done so, it is probably a good idea to browse
    through that chapter.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 上一个教程解释了如何安装PyGLet，并为您介绍了这个库。如果您还没有这样做，浏览一下那一章可能是个好主意。
- en: Note
  id: totrans-136
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In the online documentation, PyGLet is usually spelled in all lower-case. While
    this might be a Pythonic way, we capitalize the first letter of a class and we
    use lower case for variable, method, and function names to start each name.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在在线文档中，PyGLet通常以全小写拼写。虽然这可能是一种Pythonic的方式，但我们会将类的第一个字母大写，并且我们使用小写来开始每个变量、方法和函数名。
- en: We do not use underscores in this book unless necessary to clarify code.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 除非必要澄清代码，否则本书不使用下划线。
- en: How to do it...
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: The following code creates the 3-dimensional colored cube shown below it. This
    time, we will use the keyboard arrow keys to rotate the image, instead of the
    mouse.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码创建了下面显示的3D彩色立方体。这次，我们将使用键盘箭头键来旋转图像，而不是鼠标。
- en: '[PRE7]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![How to do it...](graphics/B04829_10_15.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_15.jpg)'
- en: Using the keyboard arrow keys, we can spin the 3D cube around.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 使用键盘箭头键，我们可以旋转3D立方体。
- en: '![How to do it...](graphics/B04829_10_16.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_16.jpg)'
- en: How it works...
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In this recipe, we have used pyglet to create a colorful cube, which we can
    rotate in 3-dimensional space using the keyboard arrow keys.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们使用pyglet创建了一个丰富多彩的立方体，我们可以使用键盘箭头键在三维空间中旋转它。
- en: We have defined several colors for the six faces of our cube and we have used
    pyglet to create our main window frame.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经为我们的立方体的六个面定义了几种颜色，并且我们已经使用pyglet创建了我们的主窗口框架。
- en: The code is similar to a previous recipe in this chapter, in which we used the
    wxPython library to create a cube. The reason for this is that underneath the
    hood, both wxPython and pyglet use the OpenGL library.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码与本章中以前的一个食谱类似，在那个食谱中，我们使用wxPython库创建了一个立方体。原因是在底层，wxPython和pyglet都使用OpenGL库。
- en: Creating a slideshow using tkinter
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用tkinter创建幻灯片
- en: In this recipe, we will create a nice working slideshow GUI using pure Python.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我们将使用纯Python创建一个漂亮的幻灯片GUI。
- en: We will see the limitations the core Python built-ins have, and then we will
    explore another third-party module available called Pillow, which extends tkinter's
    built-in functionality in regards to image processing.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到核心Python内置功能的限制，然后我们将探索另一个可用的第三方模块Pillow，它扩展了tkinter在图像处理方面的内置功能。
- en: While the name Pillow might sound a little bit strange at first, it actually
    comes with a lot of history behind it.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然一开始Pillow这个名字听起来有点奇怪，但它实际上有很多历史背景。
- en: Note
  id: totrans-153
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We are only using Python 3.4 and above in this book.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们只使用Python 3.4及以上版本。
- en: We are not going back to Python 2.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会回到Python 2。
- en: Guido has expressed his decision to intentionally break backwards compatibility
    and has decided that Python 3 is the future of Python programming.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: Guido已经表达了他有意打破向后兼容性的决定，并决定Python 3是Python编程的未来。
- en: For GUIs and images, the older line of Python 2 has this very powerful module
    named PIL, which stands for Python Image Library. This library comes with a very
    large amount of functionality, which several years after the very successful creation
    of Python 3 has not been translated for Python 3.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 对于GUI和图像，Python 2的旧线有一个非常强大的模块，名为PIL，代表Python图像库。这个库具有非常多的功能，在Python 3非常成功创建几年后，这些功能仍未被翻译成Python
    3。
- en: Many developers still choose to use Python 2 instead of the future, as designed
    by the Benevolent Dictator of Python, because Python 2 still has more libraries
    available.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 许多开发人员仍然选择使用Python 2而不是未来版本，因为Python 2仍然有更多的可用库。
- en: That is a little bit sad.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 这有点令人伤感。
- en: Fortunately, another imaging library has been created to work with Python 3
    and it is named PIL plus something.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，另一个图像处理库已经被创建出来，可以与Python 3一起使用，它的名字是PIL加一些东西。
- en: Note
  id: totrans-161
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Pillow is not compatible with the Python 2 PIL library.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: Pillow与Python 2的PIL库不兼容。
- en: Getting ready
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备就绪
- en: In the first part of this recipe, we will use pure Python. In order to improve
    the code, we will install another Python module using pip functionality. So, while
    you are most likely familiar with pip, a little knowledge of how to use it might
    be useful.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱的第一部分中，我们将使用纯Python。为了改进代码，我们将使用pip功能安装另一个Python模块。因此，虽然您很可能熟悉pip，但了解如何使用它可能会有用。
- en: How to do it...
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: First, we will create a working GUI that shuffles slides within a window frame
    using pure Python.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将使用纯Python创建一个工作的GUI，在窗口框架内对幻灯片进行洗牌。
- en: 'Here is the working code and following it are some screenshots of the results
    of running this code:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 这是工作代码，接下来是运行此代码的一些截图的结果：
- en: '[PRE8]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![How to do it...](graphics/B04829_10_21.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_21.jpg)'
- en: Here is another moment in time in the unfolding slideshow.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这是幻灯片展示中的另一个时刻。
- en: '![How to do it...](graphics/B04829_10_22.jpg)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_22.jpg)'
- en: While the slides sliding are truly impressive, the built-in capabilities of
    pure Python tkinter GUIs do not support the very popular `.jpg` format, so we
    have to reach out to another Python library.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然幻灯片的滑动确实令人印象深刻，但纯Python tkinter GUI的内置功能不支持非常流行的`.jpg`格式，因此我们必须使用另一个Python库。
- en: In order to use Pillow, we first have to install it using the `pip` command.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用Pillow，我们首先必须使用`pip`命令安装它。
- en: 'A successful installation looks like this:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 成功的安装看起来像这样：
- en: '![How to do it...](graphics/B04829_10_23.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](graphics/B04829_10_23.jpg)'
- en: Pillow supports `.jpg` formats and, in order to use it, we to have to slightly
    change our syntax.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: Pillow支持`.jpg`格式，并且为了使用它，我们必须稍微改变我们的语法。
- en: Using Pillow is an advanced topic that will not be covered in this edition of
    the book.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Pillow是一个高级主题，在本书的这一版本中不会涉及。
- en: How it works...
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Python is a very wonderful tool, and in this recipe, we have explored several
    ways to use and extend it.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Python是一个非常棒的工具，在这个食谱中，我们已经探索了几种使用和扩展它的方法。
- en: Note
  id: totrans-180
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When a finger points at the moon, it is not the moon itself, just a pointer.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 当手指指向月亮时，它并不是月亮本身，只是一个指针。
