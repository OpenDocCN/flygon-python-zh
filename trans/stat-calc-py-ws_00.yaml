- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: About the Book
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于本书
- en: Are you looking to start developing artificial intelligence applications? Do
    you need a refresher on key mathematical concepts? Full of engaging practical
    exercises, *The Statistics and Calculus with Python Workshop* will show you how
    to apply your understanding of advanced mathematics in the context of Python.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否想要开始开发人工智能应用程序？您是否需要对关键数学概念进行复习？充满有趣的实践练习，《Python统计学和微积分工作坊》将向您展示如何在Python环境中应用您对高级数学的理解。
- en: The book begins by giving you a high-level overview of the libraries you'll
    use while performing statistics with Python. As you progress, you'll perform various
    mathematical tasks using the Python programming language, such as solving algebraic
    functions with Python starting with basic functions, and then working through
    transformations and solving equations. Later chapters in the book will cover statistics
    and calculus concepts and how to use them to solve problems and gain useful insights.
    Finally, you'll study differential equations with an emphasis on numerical methods
    and learn about algorithms that directly calculate values of functions.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书首先概述了在使用Python进行统计时将使用的库。随着学习的深入，您将使用Python编程语言执行各种数学任务，例如使用Python解决代数函数，从基本函数开始，然后进行变换和解方程。本书的后几章将涵盖统计学和微积分概念，以及如何使用它们来解决问题并获得有用的见解。最后，您将学习重点是数值方法的微分方程，并了解直接计算函数值的算法。
- en: By the end of this book, you'll have learned how to apply essential statistics
    and calculus concepts to develop robust Python applications that solve business challenges.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本书，您将学会如何将基本统计学和微积分概念应用于开发解决业务挑战的强大Python应用程序。
- en: Audience
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 受众
- en: If you are a Python programmer who wants to develop intelligent solutions that
    solve challenging business problems, then this book is for you. To better grasp
    the concepts explained in this book, you must have a thorough understanding of
    advanced mathematical concepts, such as Markov chains, Euler's formula, and Runge-Kutta
    methods as the book only explains how these techniques and concepts can be implemented
    in Python.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是一名希望开发解决具有挑战性的业务问题的智能解决方案的Python程序员，那么本书适合您。为了更好地理解本书中解释的概念，您必须对高级数学概念有透彻的理解，例如马尔可夫链、欧拉公式和龙格-库塔方法，因为本书只解释了这些技术和概念如何在Python中实现。
- en: About the Chapters
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于章节
- en: '*Chapter 1*, *Fundamentals of Python*, introduces you to the Python language.
    You will learn how to use Python''s most integral data structures and control
    flows, as well as picking up best practices for programming-specific tasks such
    as debugging, testing, and version control.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '*第1章*《Python基础》介绍了Python语言。您将学习如何使用Python最基本的数据结构和控制流程，以及掌握针对编程特定任务的最佳实践，如调试、测试和版本控制。'
- en: '*Chapter 2*, *Python''s Main Tools for Statistics*, introduces the ecosystem
    of scientific computing and visualization in Python. These discussions will revolve
    around the specific Python libraries that facilitate these tasks, such as NumPy,
    pandas, and Matplotlib. Hands-on exercises will help you practice their usage.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*第2章*《Python统计学的主要工具》介绍了Python中科学计算和可视化的生态系统。这些讨论将围绕着促进这些任务的特定Python库展开，如NumPy、pandas和Matplotlib。动手练习将帮助您练习它们的使用。'
- en: '*Chapter 3*, *Python''s Statistical Toolbox*, describes the theoretical basics
    of statistical analysis. You will learn about the fundamental components in the
    field of statistics, namely the various types of statistics and statistical variables.
    This chapter also includes a brief overview of a wide range of different Python
    libraries and tools that can help to facilitate specialized tasks, such as SymPy,
    PyMC3, and Bokeh.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*第3章*《Python统计工具箱》描述了统计分析的理论基础。您将了解统计学领域的基本组成部分，即各种类型的统计和统计变量。本章还包括对各种不同Python库和工具的简要概述，这些库和工具可以帮助简化专门任务，如SymPy、PyMC3和Bokeh。'
- en: '*Chapter 4*, *Functions and Algebra with Python*, discusses the theoretical
    foundation of mathematical functions and algebraic equations. These discussions
    are also accompanied by interactive exercises that present corresponding tools
    in Python that can streamline and/or automate various procedures, such as drawing
    function graphs and solving equations and systems of equations.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*第4章*《Python函数和代数》讨论了数学函数和代数方程的理论基础。这些讨论还伴随着交互式练习，展示了Python中相应的工具，可以简化和/或自动化各种过程，如绘制函数图形和解方程组。'
- en: '*Chapter 5*, *More Mathematics with Python*, teaches you the basics of sequences,
    series, trigonometry, and complex numbers. While these can prove to be challenging
    theoretical topics, we will consider them from a different practical perspective,
    specifically via practical applications such as financial analysis and 401(k)/retirement calculations.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*第5章*《Python更多数学知识》教授您序列、级数、三角学和复数的基础知识。虽然这些可能是具有挑战性的理论主题，但我们将从不同的实际角度考虑它们，特别是通过实际应用，如财务分析和401(k)/退休计算。'
- en: '*Chapter 6*, *Matrices and Markov Chains with Python*, introduces you to the
    concepts of matrices and Markov chains. These are mathematical objects commonly
    used in some of the most popular applications of mathematics, such as artificial
    intelligence and machine learning. The chapter is coupled with the hands-on activity
    of developing a word predictor.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*第6章*《Python矩阵和马尔可夫链》介绍了矩阵和马尔可夫链的概念。这些是数学对象，在人工智能和机器学习等一些最流行的数学应用中常用。本章配有动手实践活动，开发一个单词预测器。'
- en: '*Chapter 7*, *Doing Basic Statistics with Python*, marks the start of the portion
    of this book where we specifically focus on statistics and statistical analysis.
    This chapter introduces the process of exploratory data analysis and, in general,
    using simple statistical techniques to interpret a dataset.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章《Python基础统计学》标志着本书重点讨论统计和统计分析的部分的开始。本章介绍了探索性数据分析的过程，以及一般使用简单的统计技术来解释数据集。
- en: '*Chapter 8*, *Foundational Probability Concepts and Their Applications*, dives
    deeper into complex statistical concepts, such as randomness, random variables,
    and using simulations as a technique to analyze randomness. This chapter will
    help you become more comfortable working with statistical problems that involve
    randomness.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章《Python基础概率概念及其应用》深入探讨了复杂的统计概念，如随机性，随机变量以及使用模拟作为分析随机性的技术。本章将帮助您更加熟练地处理涉及随机性的统计问题。
- en: '*Chapter 9*, *Intermediate Statistics with Python*, wraps up the topic of statistics
    by iterating over the most important theories in the field, such as the law of
    large numbers and central limit theorem, as well as commonly used techniques,
    including confidence intervals, hypothesis testing, and linear regression. With
    the knowledge you''ll gain in this chapter, you will be ready to tackle many real-life
    statistical problems using Python.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章《Python中级统计学》总结了统计学的主题，重点介绍了该领域中最重要的理论，如大数定律和中心极限定理，以及常用的技术，包括置信区间，假设检验和线性回归。通过本章获得的知识，您将能够使用Python解决许多现实生活中的统计问题。
- en: '*Chapter 10*, *Foundational Calculus with Python*, begins the topic of calculus
    by discussing more involved concepts, such as the slope of a function, the area
    under a curve, optimization, and solids of revolution. Typically considered as
    complicated problems in mathematics, these concepts are explained in an intuitive
    and hands-on manner with the help of Python.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章《Python基础微积分》开始讨论微积分的主题，包括更多涉及的概念，如函数的斜率，曲线下的面积，优化和旋转体。这些通常被认为是数学中复杂的问题，但本书通过Python以直观和实用的方式解释这些概念。
- en: '*Chapter 11*, *More Calculus with Python*, tackles more complex topics in calculus,
    namely, the calculation of arc lengths and surface areas, partial derivatives,
    and series expansions. Once again, we will be able to see the power of Python
    in helping us approach these advanced topics, which normally can be quite challenging
    for many students.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章《Python更多微积分》涉及微积分中更复杂的主题，包括弧长和表面积的计算，偏导数和级数展开。再次，我们将看到Python在帮助我们处理这些高级主题方面的强大力量，这些通常对许多学生来说可能非常具有挑战性。
- en: '*Chapter 12*, *Intermediate Calculus with Python*, concludes the book with
    some of the most interesting topics in calculus, such as differential equations,
    the Euler method, and the Runge-Kutta method. These methods present an algorithmic
    approach to solving differential equations, which is particularly applicable in
    Python as a computational tool.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章《Python中级微积分》总结了本书中最有趣的微积分主题，如微分方程，欧拉方法和Runge-Kutta方法。这些方法提供了解微分方程的算法方法，特别适用于Python作为计算工具。
- en: Conventions
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 约定
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词，数据库表名，文件夹名，文件名，文件扩展名，路径名，虚拟URL，用户输入和Twitter句柄显示如下：
- en: '"To do this, we can use the `with` keyword together with the `open()` function
    to interact with the text file."'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: “为此，我们可以使用`with`关键字和`open()`函数与文本文件交互。”
- en: 'A block of code is set as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In some cases, a line of code is immediately followed by its output. These
    cases are presented as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，一行代码紧接着它的输出。这些情况如下所示：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this example, the executed code is the line which begins with `>>>`, and
    the output is the second line (`6`).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，执行的代码是以`>>>`开头的行，输出是第二行（`6`）。
- en: In other cases, the output is shown separately from the code block, for ease
    of reading.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在其他情况下，输出与代码块分开显示，以便阅读。
- en: 'Words that you see on the screen, for example, in menus or dialog boxes, also
    appear in the text like this: "When you click on the `Fetch Images` button, the
    images appear with authors'' names."'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上显示的单词，例如菜单或对话框中的单词，也会出现在文本中，如：“当您单击`获取图像`按钮时，图像将显示作者的名称。”
- en: 'New terms and important words are shown like this: "Write the returned list
    to the same input file in a new line in the same **comma-separated values** (**CSV**)
    format".'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 新术语和重要单词显示如下：“将返回的列表以相同的**逗号分隔值**（**CSV**）格式写入同一输入文件的新行中”。
- en: Code Presentation
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码演示
- en: Lines of code that span multiple lines are split using a backslash ( `\` ).
    When the code is executed, Python will ignore the backslash, and treat the code
    on the next line as a direct continuation of the current line.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 跨多行的代码使用反斜杠（`\`）进行分割。当代码执行时，Python将忽略反斜杠，并将下一行的代码视为当前行的直接延续。
- en: 'For example:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Comments are added into code to help explain specific bits of logic. Single-line
    comments are denoted using the `#` symbol, as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码中添加了注释以帮助解释特定的逻辑部分。单行注释使用`#`符号表示，如下所示：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Multi-line comments are enclosed by triple quotes, as shown below:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 多行注释使用三重引号括起来，如下所示：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Setting up Your Environment
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置您的环境
- en: Before we explore the book in detail, we need to set up specific software and
    tools. In the following section, we shall see how to do that.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们详细探讨本书之前，我们需要设置特定的软件和工具。在接下来的部分中，我们将看到如何做到这一点。
- en: Software Requirements
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件要求
- en: 'You''ll also need the following software installed in advance:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要预先安装以下软件：
- en: 'OS: Windows 7 SP1 64-bit, Windows 8.1 64-bit or Windows 10 64-bit, macOS, or
    Linux'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作系统：Windows 7 SP1 64位，Windows 8.1 64位或Windows 10 64位，macOS或Linux
- en: 'Browser: Latest version of Google Chrome, Firefox, or Microsoft Edge'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览器：最新版本的Google Chrome，Firefox或Microsoft Edge
- en: Python 3.7
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.7
- en: Jupyter Notebook
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Jupyter笔记本
- en: Installation and Setup
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和设置
- en: Before you start this book, you will need to install Python (3.7 or above) and
    Jupyter, which are the main tools that we will be using throughout the chapters.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本书之前，您需要安装Python（3.7或更高版本）和Jupyter，这是我们将在整个章节中使用的主要工具。
- en: Installing Python
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Python
- en: The best method to install Python is via the environment manager Anaconda, which
    can be downloaded from [https://docs.anaconda.com/anaconda/install/](https://docs.anaconda.com/anaconda/install/).
    Once Anaconda has been successfully installed, you can follow the instructions
    at [https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html)
    to create a virtual environment for this project within which Python can be run.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 安装Python的最佳方法是通过环境管理器Anaconda，可以从[https://docs.anaconda.com/anaconda/install/](https://docs.anaconda.com/anaconda/install/)下载。一旦成功安装了Anaconda，您可以按照[https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html](https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html)上的说明创建一个虚拟环境，其中可以运行Python。
- en: Unlike other methods of installing Python, Anaconda offers an easy-to-navigate
    interface that also takes care of most low-level processes when Python and its
    libraries are to be installed.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他安装Python的方法不同，Anaconda提供了一个易于导航的界面，当安装Python及其库时，它还负责大部分低级过程。
- en: Following the instructions above, you can create a new environment named `workshop`
    using the command `conda create -n workshop python=3.7`. To activate the new environment,
    run `conda activate workshop`. For the next steps, you will need to activate this
    environment every time you need to test the code.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 按照上述说明，您可以使用命令`conda create -n workshop python=3.7`创建一个名为`workshop`的新环境。要激活新环境，请运行`conda
    activate workshop`。在接下来的步骤中，您需要每次需要测试代码时激活此环境。
- en: In this workshop, every time a new library is used that has not already been
    installed, that library can be installed using the `pip install [library_name]`
    or `conda install [library_name]` commands.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在本研讨会中，每次使用尚未安装的新库时，可以使用`pip install [library_name]`或`conda install [library_name]`命令来安装该库。
- en: Project Jupyter
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Jupyter项目
- en: Project Jupyter is open source, free software that gives you the ability to
    run code written in Python and some other languages interactively from a special
    notebook, similar to a browser interface. It was born in 2014 from the **IPython**
    project and has since become the default choice for the entire data science workforce.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter项目是开源的免费软件，它使您能够从特殊的笔记本中以交互方式运行用Python和其他一些语言编写的代码，类似于浏览器界面。它诞生于2014年的**IPython**项目，自那时起就成为整个数据科学工作人员的默认选择。
- en: 'To install the Jupyter Notebook inside the `workshop` environment, just run
    `conda install -c conda-forge notebook`. For more information about Jupyter installation,
    go here: [https://jupyter.org/install](https://jupyter.org/install).'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 要在`workshop`环境中安装Jupyter Notebook，只需运行`conda install -c conda-forge notebook`。有关Jupyter安装的更多信息，请访问：[https://jupyter.org/install](https://jupyter.org/install)。
- en: At [https://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html](https://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html),
    you will find all the details you need to know how to start the Jupyter Notebook
    server. In this book, we use the classic notebook interface.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html](https://jupyterlab.readthedocs.io/en/stable/getting_started/starting.html)上，您将找到所有关于如何启动Jupyter
    Notebook服务器的详细信息。在本书中，我们使用经典的笔记本界面。
- en: Usually, we start a notebook from the Anaconda Prompt with the `jupyter notebook`
    command.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们从Anaconda Prompt使用`jupyter notebook`命令启动笔记本。
- en: Start the notebook from the directory where you choose to download the code
    files to in the following *Installing the Code Bundle* section.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 从您选择下载代码文件的目录开始笔记本，参见*安装代码包*部分。
- en: 'For example, if you have installed the files in the macOS directory `/Users/YourUserName/Documents/`
    `The-Statistics-and-Calculus-with-Python-Workshop`, then in the CLI you can type
    `cd /Users/YourUserName/Documents/The-Statistics-and-Calculus-with-Python-Workshop`
    and run the `jupyter notebook` command. The Jupyter server will start and you
    will see the Jupyter browser console:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果您已将文件安装在macOS目录`/Users/YourUserName/Documents/` `The-Statistics-and-Calculus-with-Python-Workshop`中，那么在CLI中，您可以输入`cd
    /Users/YourUserName/Documents/The-Statistics-and-Calculus-with-Python-Workshop`并运行`jupyter
    notebook`命令。Jupyter服务器将启动，您将看到Jupyter浏览器控制台：
- en: '![Figure 0.1: Jupyter browser console'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '![图0.1：Jupyter浏览器控制台'
- en: '](image/B15968_Preface_01.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B15968_Preface_01.jpg)'
- en: 'Figure 0.1: Jupyter browser console'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图0.1：Jupyter浏览器控制台
- en: 'Once you are running the Jupyter server, click on `New` and choose `Python
    3`. A new browser tab will open with a new and empty notebook. Rename the Jupyter
    file:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您运行了Jupyter服务器，点击`New`，选择`Python 3`。一个新的浏览器标签页将打开一个新的空白笔记本。重命名Jupyter文件：
- en: '![Figure 0.2: Jupyter server interface'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '![图0.2：Jupyter服务器界面'
- en: '](image/B15968_Preface_02.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B15968_Preface_02.jpg)'
- en: 'Figure 0.2: Jupyter server interface'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图0.2：Jupyter服务器界面
- en: 'The main building blocks of Jupyter notebooks are cells. There are two types
    of cells: `In` (short for input) and `Out` (short for output). You can write code,
    normal text, and Markdown in `In` cells, press *Shift* + *Enter* (or *Shift* +
    *Return*), and the code written in that particular `In` cell will be executed.
    The result will be shown in an `Out` cell, and you will land in a new `In` cell,
    ready for the next block of code. Once you get used to this interface, you will
    slowly discover the power and flexibility it offers.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: Jupyter笔记本的主要构建模块是单元格。有两种类型的单元格：`In`（输入的缩写）和`Out`（输出的缩写）。您可以在`In`单元格中编写代码、普通文本和Markdown，按*Shift*
    + *Enter*（或*Shift* + *Return*），那个特定`In`单元格中编写的代码将被执行。结果将显示在`Out`单元格中，然后您将进入一个新的`In`单元格，准备好下一个代码块。一旦您习惯了这个界面，您将慢慢发现它提供的强大和灵活性。
- en: 'When you start a new cell, by default, it is assumed that you will write code
    in it. However, if you want to write text, then you have to change the type. You
    can do that using the following sequence of keys: *Esc* | *M* | *Enter*. This
    will convert the selected cell to the **Markdown** (**M**) cell type:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 当您开始一个新的单元格时，默认情况下假定您将在其中编写代码。但是，如果您想要编写文本，那么您必须更改类型。您可以使用以下键序列来执行此操作：*Esc*
    | *M* | *Enter*。这将将所选单元格转换为**Markdown**（**M**）单元格类型：
- en: '![Figure 0.3: Jupyter Notebook'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '![图0.3：Jupyter Notebook'
- en: '](image/B15968_Preface_03.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '](image/B15968_Preface_03.jpg)'
- en: 'Figure 0.3: Jupyter Notebook'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图0.3：Jupyter Notebook
- en: When you are done with writing some text, execute it using *Shift* + *Enter*.
    Unlike the case with code cells, the result of the compiled Markdown will be shown
    in the same place as the `In` cell.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当您完成编写一些文本时，请使用*Shift* + *Enter*执行它。与代码单元格不同，编译后的Markdown的结果将显示在与`In`单元格相同的位置。
- en: To get a *cheat sheet* of all the handy key shortcuts in Jupyter, go to [https://packt.live/33sJuB6](https://packt.live/33sJuB6).
    With this basic introduction, we are ready to embark on an exciting and enlightening
    journey.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要获取Jupyter中所有方便的快捷键的*备忘单*，请访问[https://packt.live/33sJuB6](https://packt.live/33sJuB6)。通过这个基本介绍，我们准备开始一段激动人心和启发人心的旅程。
- en: Installing Libraries
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装库
- en: '`pip` comes pre-installed with Anaconda. Once Anaconda is installed on your
    machine, all the required libraries can be installed using `pip`, for example,
    `pip install numpy`. Alternatively, you can install all the required libraries
    using `pip install –r requirements.txt`. You can find the `requirements.txt` file
    at [https://packt.live/3gv0zhb](https://packt.live/3gv0zhb).'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`pip`已经预装在Anaconda中。一旦在您的计算机上安装了Anaconda，所有所需的库都可以使用`pip`安装，例如`pip install
    numpy`。或者，您可以使用`pip install –r requirements.txt`安装所有所需的库。您可以在[https://packt.live/3gv0zhb](https://packt.live/3gv0zhb)找到`requirements.txt`文件。'
- en: The exercises and activities will be executed in Jupyter Notebooks. Jupyter
    is a Python library and can be installed in the same way as the other Python libraries
    – that is, with `pip install jupyter`, but fortunately, it comes pre-installed
    with Anaconda. To open a notebook, simply run the command `jupyter notebook` in
    the Terminal or Command Prompt.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 练习和活动将在Jupyter笔记本中执行。Jupyter是一个Python库，可以像其他Python库一样安装-即使用`pip install jupyter`，但幸运的是，它已经预装在Anaconda中。要打开笔记本，只需在终端或命令提示符中运行`jupyter
    notebook`命令。
- en: Accessing the Code Files
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 访问代码文件
- en: You can find the complete code files of this book at [https://packt.live/3kcWZe6](https://packt.live/3kcWZe6).
    You can also run many activities and exercises directly in your web browser by
    using the interactive lab environment at [https://packt.live/2PpqDOX](https://packt.live/2PpqDOX).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在[https://packt.live/3kcWZe6](https://packt.live/3kcWZe6)找到本书的完整代码文件。您还可以通过使用[https://packt.live/2PpqDOX](https://packt.live/2PpqDOX)上的交互式实验室环境直接在Web浏览器中运行许多活动和练习。
- en: We've tried to support interactive versions of all activities and exercises,
    but we recommend a local installation as well for instances where this support
    isn't available.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经尝试支持所有活动和练习的交互式版本，但我们也建议在不支持此功能的情况下进行本地安装。
- en: If you have any issues or questions about installation, please email us at `workshops@packt.com`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在安装过程中遇到任何问题或有任何问题，请发送电子邮件至`workshops@packt.com`与我们联系。
