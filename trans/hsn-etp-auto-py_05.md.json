["```py\nline = '30 acd3.b2c6.aac9 FastEthernet0/1' \nmatch = re.search('(\\d+) +([0-9a-f.]+) +(\\S+)', line)\nprint match.group(1)\nprint match.group(2)\n```", "```py\nimport re\n```", "```py\nmatch = re.search('regex pattern', 'string')\n```", "```py\nimport re\nintf_ip = 'Gi0/0/0.911            10.200.101.242   YES NVRAM  up                    up' match = re.search('10.200.101.242', intf_ip)    if match:\n  print match.group()\n```", "```py\nimport re\nintf_ip = '''Gi0/0/0.705            10.103.17.5      YES NVRAM  up                    up Gi0/0/0.900            86.121.75.31  YES NVRAM  up                    up Gi0/0/0.911            10.200.101.242   YES NVRAM  up                    up Gi0/0/0.7000           unassigned      YES unset  up                    up ''' match = re.search(\"\\d+\\.\\d+\\.\\d+\\.\\d+\", intf_ip)   if match:\n  print match.group()\n```", "```py\nimport re\nlog_msg = 'Dec 20 12:11:47.417: %LINK-3-UPDOWN: Interface GigabitEthernet0/0/4, changed state to down' match = re.search(\"(\\w+\\s\\d+\\s\\S+):\\s(\\S+): Interface (\\S+), changed state to (\\S+)\", log_msg) if match:\n  print match.groups() \n```", "```py\n\nimport re\n\nshow_ip_int_br_full = \"\"\" GigabitEthernet0/0/0        110.110.110.1   YES NVRAM  up                    up GigabitEthernet0/0/1        107.107.107.1   YES NVRAM  up                    up GigabitEthernet0/0/2        108.108.108.1   YES NVRAM  up                    up GigabitEthernet0/0/3        109.109.109.1   YES NVRAM  up                    up GigabitEthernet0/0/4   unassigned      YES NVRAM  up                    up GigabitEthernet0/0/5             10.131.71.1     YES NVRAM  up                    up GigabitEthernet0/0/6          10.37.102.225   YES NVRAM  up                    up GigabitEthernet0/1/0            unassigned      YES unset  up                    up GigabitEthernet0/1/1           57.234.66.28   YES manual up                    up GigabitEthernet0/1/2           10.10.99.70   YES manual up                    up GigabitEthernet0/1/3           unassigned      YES manual deleted               down GigabitEthernet0/1/4           192.168.200.1   YES manual up                    up GigabitEthernet0/1/5   unassigned      YES manual down                  down GigabitEthernet0/1/6         10.20.20.1      YES manual down                  down GigabitEthernet0/2/0         10.30.40.1      YES manual down                  down GigabitEthernet0/2/1         57.20.20.1      YES manual down                  down  \"\"\" for line in show_ip_int_br_full.split(\"\\n\"):\n  match = re.search(r\"(?P<interface>\\w+\\d\\/\\d\\/\\d)\\s+(?P<ip>\\d+.\\d+.\\d+.\\d+)\", line)\n  if match:\n  intf_ip = match.groupdict()\n  if intf_ip[\"ip\"].startswith(\"57\"):\n  print \"Subnet is configured on \" + intf_ip[\"interface\"] + \" and ip is \" + intf_ip[\"ip\"]\n```", "```py\nimport re\nfrom pprint import pprint\nshow_ip_int_br_full = \"\"\" GigabitEthernet0/0/0        110.110.110.1   YES NVRAM  up                    up GigabitEthernet0/0/1        107.107.107.1   YES NVRAM  up                    up GigabitEthernet0/0/2        108.108.108.1   YES NVRAM  up                    up GigabitEthernet0/0/3        109.109.109.1   YES NVRAM  up                    up GigabitEthernet0/0/4   unassigned      YES NVRAM  up                    up GigabitEthernet0/0/5             10.131.71.1     YES NVRAM  up                    up GigabitEthernet0/0/6          10.37.102.225   YES NVRAM  up                    up GigabitEthernet0/1/0            unassigned      YES unset  up                    up GigabitEthernet0/1/1           57.234.66.28   YES manual up                    up GigabitEthernet0/1/2           10.10.99.70   YES manual up                    up GigabitEthernet0/1/3           unassigned      YES manual deleted               down GigabitEthernet0/1/4           192.168.200.1   YES manual up                    up GigabitEthernet0/1/5   unassigned      YES manual down                  down GigabitEthernet0/1/6         10.20.20.1      YES manual down                  down GigabitEthernet0/2/0         10.30.40.1      YES manual down                  down GigabitEthernet0/2/1         57.20.20.1      YES manual down                  down \"\"\"    intf_ip = re.findall(r\"(?P<interface>\\w+\\d\\/\\d\\/\\d)\\s+(?P<ip>57.\\d+.\\d+.\\d+)\", show_ip_int_br_full) pprint(intf_ip) \n```", "```py\npip install ciscoconfparse\n```", "```py\npip install matplotlib\n```", "```py\nimport matplotlib.pyplot as plt\n```", "```py\nplt.plot([0, 1, 2, 3, 4], [0, 10, 20, 30, 40])\n```", "```py\nplt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nplt.plot([0, 1, 2, 3, 4], [0, 10, 20, 30, 40]) plt.xlabel(\"numbers\") plt.ylabel(\"numbers multiplied by ten\") plt.title(\"Generated Graph\\nCheck it out\") plt.show()\n```", "```py\nimport matplotlib.pyplot as plt\nplt.plot([0, 1, 2, 3, 4], [0, 10, 20, 30, 40], label=\"First Line\")\nplt.plot([5, 6, 7, 8, 9], [50, 60, 70, 80, 90], label=\"Second Line\") plt.xlabel(\"numbers\") plt.ylabel(\"numbers multiplied by ten\") plt.title(\"Generated Graph\\nCheck it out\") plt.legend() plt.show()\n```", "```py\nfrom pysnmp.entity.rfc3413.oneliner import cmdgen\nimport time\nimport matplotlib.pyplot as plt    cmdGen = cmdgen.CommandGenerator()   snmp_community = cmdgen.CommunityData('public') snmp_ip = cmdgen.UdpTransportTarget(('10.10.88.110', 161)) snmp_oids = [\".1.3.6.1.4.1.9.2.2.1.1.6.3\",\".1.3.6.1.4.1.9.2.2.1.1.8.3\"]   slots = 0 input_rates = [] output_rates = [] while slots <= 50:\n  errorIndication, errorStatus, errorIndex, varBinds = cmdGen.getCmd(snmp_community, snmp_ip, *snmp_oids)    input_rate = str(varBinds[0]).split(\"=\")[1].strip()\n  output_rate = str(varBinds[1]).split(\"=\")[1].strip()    input_rates.append(input_rate)\n  output_rates.append(output_rate)    time.sleep(6)\n  slots = slots + 1\n  print slots\n\ntime_range = range(0, slots)   print input_rates\nprint output_rates\n# plt.figure() plt.plot(time_range, input_rates, label=\"input rate\") plt.plot(time_range, output_rates, label=\"output rate\") plt.xlabel(\"time slot\") plt.ylabel(\"Traffic Measured in bps\") plt.title(\"Interface gig0/0/2 Traffic\") \n```", "```py\nplt.legend() plt.show()\n```"]