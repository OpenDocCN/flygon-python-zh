- en: Designing GUI Applications with Tkinter
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Tkinter设计GUI应用程序
- en: 'Software applications are developed in three repeating phases: understanding
    a problem, designing a solution, and implementing the solution. These phases repeat
    throughout the life of an application, refining and honing it until it is either
    optimal or obsolete.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 软件应用程序的开发分为三个重复阶段：理解问题、设计解决方案和实施解决方案。这些阶段在应用程序的整个生命周期中重复，不断完善和改进，直到它变得最佳或过时。
- en: 'In this chapter, we''ll learn about the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Introducing and analyzing a scenario in the workplace that will need a software
    solution
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍和分析工作场所中需要软件解决方案的场景
- en: Documenting the requirements of the solution
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录解决方案的要求
- en: Developing a design for a piece of software that implements the solution
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为实施解决方案的软件设计一个设计
- en: A problem at ABQ AgriLabs
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ABQ AgriLabs的问题
- en: 'Congratulations! Your Python skills have landed you a great data analyst job
    at ABQ AgriLabs. So far, your job is fairly simple: collating and doing simple
    data analysis on the CSV files sent to you daily from the lab''s data entry staff.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你的Python技能让你在ABQ AgriLabs找到了一份出色的数据分析师工作。到目前为止，你的工作相当简单：整理并对每天从实验室数据录入人员那里收到的CSV文件进行简单的数据分析。
- en: There is a problem, though. You've noted with frustration that the quality of
    the CSV files from the lab is sadly inconsistent. Data is missing, typos abound,
    and often the files have to be re-entered in a time-consuming process. The lab
    director has noticed this as well and, knowing that you are a skilled Python programmer,
    she thinks you might be able to help.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有一个问题。你沮丧地注意到实验室的CSV文件质量非常不一致。数据缺失，错别字丛生，而且文件经常需要重新输入，耗费大量时间。实验室主任也注意到了这一点，并且知道你是一位技艺高超的Python程序员，她认为你可能能够提供帮助。
- en: You've been enlisted to program a solution that will allow the data entry staff
    to enter lab data into a CSV file with fewer mistakes. Your application needs
    to be simple and allow as little room for error as possible.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你被委托编写一个解决方案，允许数据录入人员将实验室数据输入到CSV文件中，减少错误。你的应用程序需要简单，并且尽量减少错误的可能性。
- en: Assessing the problem
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估问题
- en: 'Spreadsheets are often the first stop for computer users who need to keep track
    of data. Their table-like layouts and computational features seem to make them
    ideal for the task. However, as a set of data grows and is added to by multiple
    users, the shortcomings of spreadsheets become apparent: they don''t enforce data
    integrity, their table-like layout can be visually confusing when dealing with
    long rows of sparse or ambiguous data, and users can easily delete or overwrite
    data if they aren''t being careful.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 电子表格通常是需要跟踪数据的计算机用户的第一站。它们的表格布局和计算功能似乎使它们成为完成任务的理想选择。然而，随着数据集的增长和多个用户的添加，电子表格的缺点变得明显：它们不能强制数据完整性，它们的表格布局在处理稀疏或模糊数据的长行时可能会造成视觉混乱，如果用户不小心的话，他们可以轻松地删除或覆盖数据。
- en: 'To improve this situation, you propose to implement a simple GUI data entry
    form that appends data to a CSV file in the format we need. Forms can help to
    improve data integrity in several ways:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改善这种情况，你建议实现一个简单的GUI数据输入表单，将数据以我们需要的格式追加到CSV文件中。表单可以在多种方式上帮助改善数据完整性：
- en: Allowing only the correct type of data to be entered (for example, only allowing
    numerals in a number field)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只允许输入正确类型的数据（例如，只允许在数字字段中输入数字）
- en: Limiting choices to only valid options
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制选择只能是有效的选项
- en: Auto-filling information like current dates, times, and so on
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动填充当前日期、时间等信息
- en: Verifying that entered data is within expected ranges or matches expected patterns
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 验证输入的数据是否在预期范围内或与预期模式匹配
- en: Ensuring that all data has been filled in
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保所有数据都已填写
- en: By implementing such a form, we can greatly reduce the number of errors being
    entered by the data entry staff.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实施这样的表单，我们可以大大减少数据录入人员输入的错误数量。
- en: Gathering information about the problem
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集有关问题的信息
- en: 'To build the data entry form application, you need to gather details about
    what it needs to accomplish. Fortunately, you already know the output part of
    the equation: you need a CSV file containing data about the plants growing in
    the plots of each laboratory and the environmental conditions at each plot. You
    work with these files every day, so you''re pretty familiar with the field layout.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建数据输入表单应用程序，你需要收集关于它需要完成的任务的详细信息。幸运的是，你已经知道了等式的输出部分：你需要一个包含每个实验室地块上植物生长和每个地块的环境条件数据的CSV文件。你每天都在使用这些文件，所以你对字段布局非常熟悉。
- en: However, you don't know everything about the data or the process of entering
    it; you'll need to talk to the other staff involved to find out more information.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你并不知道关于数据或输入过程的一切；你需要与其他相关人员交谈，以获取更多信息。
- en: First, you'll need to find out more detail about the data being recorded. This
    isn't always as easy as it sounds. The software needs absolute, black-and-white
    rules when dealing with data; people, on the other hand, tend to think in generalities
    about their data, and they often don't consider the exact details of limits or
    edge cases without some prompting.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你需要更详细地了解正在记录的数据。这并不总是那么容易。软件在处理数据时需要绝对的、黑白分明的规则；而人们往往倾向于以一般性的方式思考他们的数据，并且通常在没有一些提示的情况下不考虑限制或边缘情况的确切细节。
- en: As a programmer, it's your job to come up with questions that will bring out
    the information you need.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 作为程序员，你的工作是提出问题，以获取你所需要的信息。
- en: 'You decide you should start with the lab technicians and learn more about the
    data they''re collecting. You come up with the following questions:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你决定应该从实验室技术人员开始，了解他们正在收集的数据。你提出了以下问题：
- en: What values are acceptable for each field? Are any fields constrained to a set
    of values?
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个字段的可接受值是什么？是否有任何字段受限于一组值？
- en: What units are represented by each of the numeric fields?
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数字字段代表什么单位？
- en: Are numeric fields truly number-only fields? Would they ever need letters or
    symbols?
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字字段是否真的只是数字字段？它们是否会需要字母或符号？
- en: What range of numbers is acceptable for each numeric field?
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数字字段的可接受范围是多少？
- en: How do you record data and how long does it take?
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你是如何记录数据的，需要多长时间？
- en: Data isn't the only consideration. If we're making a program to help reduce
    user error, we also have to understand those users and how they work. In the case
    of this application, our users will be the data entry staff. We need to ask them
    questions about their needs and workflow to understand how to create an application
    that works well for them.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 数据不是唯一的考虑因素。如果我们正在制作一个帮助减少用户错误的程序，我们还必须了解这些用户以及他们的工作方式。在这个应用程序的情况下，我们的用户将是数据录入人员。我们需要向他们询问关于他们的需求和工作流程的问题，以了解如何为他们创建一个良好运行的应用程序。
- en: 'We come up with the following list of questions:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们列出了以下问题清单：
- en: In what format do you get the data you're entering?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你输入的数据是以什么格式？
- en: When is the data received and how soon is it entered? What's the latest it might
    be entered?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据是何时接收并且多快被输入？最晚可能是什么时候输入？
- en: Are there fields that could be automatically populated? Should users be able
    to override the auto values?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有字段可以自动填充？用户是否能够覆盖自动值？
- en: What's the overall technical ability of the users?
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户的整体技术能力如何？
- en: What do you like about the current solution? What do you dislike?
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你喜欢当前解决方案的什么？你不喜欢什么？
- en: Do users have visual or manual impairments that should be accommodated?
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户是否有视觉或手动障碍需要考虑？
- en: Finally, we need to understand the technology involved with operating our application—the
    computers, networks, servers, and platforms being used to accomplish the task.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要了解与操作我们的应用程序相关的技术——用于完成任务的计算机、网络、服务器和平台。
- en: 'You decide to add the following questions, which you''ll assess yourself when
    you meet with the data entry staff:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 你决定添加以下问题，当你与数据录入人员会面时，你将自己评估：
- en: What kind of computer does data entry use?
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据录入使用什么样的计算机？
- en: What platform does it run?
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它运行在什么平台上？
- en: How fast or powerful is it?
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有多快或多强大？
- en: Is Python available on these systems?
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些系统上是否有Python可用？
- en: Which Python libraries are available?
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有哪些Python库可用？
- en: What you found out
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 你发现了什么
- en: 'You start by writing down the following basics about ABQ that you know:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先写下你知道的关于ABQ的基本信息：
- en: Your ABQ facility has five greenhouses, each operating with a different climate,
    marked A, B, C, D, and E
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的ABQ设施有五个温室，每个温室都有不同的气候，标记为A、B、C、D和E
- en: Each greenhouse has 20 plots (labeled 1 through 20)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个温室有20个地块（标记为1到20）
- en: There are currently four seed samples, each coded with a six-character label
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目前有四个种子样本，每个都用一个六位字符标签编码
- en: Each plot has 20 seeds of a given sample planted in it, as well as its own environmental
    sensor unit
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个样本的每个地块都种植了20颗种子，以及自己的环境传感器单元
- en: Information about the data being collected
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 正在收集的数据的信息
- en: Your talk with the lab technicians revealed a lot about the data. Four times
    a day, at 8:00, 12:00, 16:00, and 20:00, each technician checks the plots in one
    or two labs. They use a paper form to record values at each plot, recording all
    values to two decimal places. This usually takes 30 to 40 minutes per lab, and
    the whole process typically takes 90 minutes.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你与实验室技术人员的交谈揭示了很多关于数据的信息。每天四次，分别在8:00、12:00、16:00和20:00，每个技术人员检查一两个实验室的地块。他们使用纸质表格记录每个地块的值，将所有值记录到小数点后两位。这通常需要每个实验室30到40分钟，整个过程通常需要90分钟。
- en: Each plot has an environmental sensor that detects the light, temperature, and
    humidity at the plot. Unfortunately, these devices are prone to failure, indicated
    by an `Equipment` `Fault` light on the unit. Technicians record if this light
    is lit, since it invalidates the environmental data.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 每个地块都有一个环境传感器，用于检测地块的光线、温度和湿度。不幸的是，这些设备容易出现故障，单位上的`设备` `故障`指示灯会亮起。技术人员记录这个灯是否亮起，因为它会使环境数据无效。
- en: 'Finally, the technicians tell you about the units and acceptable ranges for
    the fields, which you record in the following chart:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，技术人员告诉你有关单位和字段的可接受范围，你记录在以下图表中：
- en: '| **Field** | **Data type** | **Notes** |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| **字段** | **数据类型** | **备注** |'
- en: '| `Date` | `Date` | The data collection date. Almost always the current date
    |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `日期` | `日期` | 数据收集日期。几乎总是当前日期 |'
- en: '| `Time` | `Time` | The start of the period during which measurements were
    taken. One of 8:00, 12:00, 16:00, or 20:00 |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `时间` | `时间` | 测量期间的开始时间。8:00、12:00、16:00或20:00之一 |'
- en: '| `Lab` | `Character` | The lab ID, which will be A to E |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `实验室` | `字符` | 实验室ID，将是A到E |'
- en: '| `Technician` | `Text` | The name of the technician recording data |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `技术人员` | `文本` | 记录数据的技术人员的姓名 |'
- en: '| `Plot` | `Int` | The plot ID, which will be 1 through 20 |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| `地块` | `整数` | 地块ID，从1到20 |'
- en: '| `Seed Sample` | `Text` | ID string for seed sample. Always a six-character
    code containing digits 0 to 9 and capital letters A to Z |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| `种子样本` | `文本` | 种子样本的ID字符串。始终是包含数字0到9和大写字母A到Z的六位字符代码 |'
- en: '| `Fault` | `Boolean` | True if environmental equipment registered a failure,
    otherwise false |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `故障` | `布尔` | 如果环境设备注册了故障，则为真，否则为假 |'
- en: '| `Humidity` | `Decimal` | Absolute humidity in g/m³, roughly between 0.5 and
    52.0 |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `湿度` | `小数` | 每立方米的绝对湿度，大约在0.5到52.0之间 |'
- en: '| `Light` | `Decimal` | Amount of sunlight at the plot center in kilolux, between
    0 and 100 |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `光线` | `小数` | 地块中心的阳光量，单位为千勒克斯，介于0和100之间 |'
- en: '| `Temperature` | `Decimal` | Degrees C, should not go below 4 or above 40
    |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `温度` | `小数` | 摄氏度，不应低于4或高于40 |'
- en: '| `Blossoms` | `Int` | The number of blossoms in the plot must be 0 or more,
    but unlikely to ever approach 1,000 |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `开花` | `整数` | 地块上的花朵数量必须是0或更多，但不太可能接近1000 |'
- en: '| `Fruit` | `Int` | The number of fruits in the plot must be 0 or more, but
    unlikely to ever approach 1,000 |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `水果` | `整数` | 地块上的水果数量必须是0或更多，但不太可能接近1000 |'
- en: '| `Plants` | `Int` | The number of growing plants, between 0 and 20. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `植物` | `整数` | 生长植物的数量，介于0和20之间。 |'
- en: '| `Max height` | `Decimal` | The height of the tallest plant in cm. At least
    0, unlikely to approach 1,000. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `最大高度` | `小数` | 植物的最大高度（厘米）。至少为0，不太可能接近1,000。'
- en: '| `Median height` | `Decimal` | The median height of plants in the plot, in
    cm. At least 0, unlikely to approach 1,000 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `中位高度` | `小数` | 样地内植物的中位高度（厘米）。至少为0，不太可能接近1,000 |'
- en: '| `Min height` | `Decimal` | The height of the smallest plant in cm. At least
    0, unlikely to approach 1,000 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| `最小高度` | `小数` | 植物的最小高度（厘米）。至少为0，不太可能接近1,000 |'
- en: '| `Notes` | `Long Text` | Additional observations about the plant, data, instruments,
    and so on |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| `备注` | `长文本` | 关于植物、数据、仪器等的其他观察。'
- en: Information about the users of the application
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用程序用户的信息
- en: Your session with the data entry staff yielded good information about their
    workflow, requirements, and technology.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 您与数据录入人员的会话为您提供了关于他们的工作流程、要求和技术的有用信息。
- en: The lab technicians drop off their paper forms as they're completed. The data
    is typically entered right away and usually on the same day as it's handed in.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 实验室技术人员在完成后交接他们的纸质表格。数据通常会立即输入，并且通常在交接当天就会完成。
- en: The technicians are currently using LibreOffice on a Debian Linux workstation
    to enter the data. Using copy and paste, they can bulk-fill fields with repeated
    data like date, time, and technician. The autocompletion feature of LibreOffice
    is often helpful in text fields, but sometimes causes accidental data errors in
    the number fields.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 技术人员目前正在使用Debian Linux工作站上的LibreOffice进行数据输入。使用复制和粘贴，他们可以批量填写重复数据，如日期、时间和技术人员。LibreOffice的自动完成功能在文本字段中通常很有帮助，但有时会在数字字段中导致意外的数据错误。
- en: The workstation being used is several years old, but performs adequately. You
    get a chance to look at it and find that Python and Tkinter are already installed.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 正在使用的工作站已经使用了几年，但性能仍然良好。您有机会查看它，并发现Python和Tkinter已经安装。
- en: There are four data entry clerks in total, but only one working at any one time;
    while interviewing the clerks, you learn that one has red-green color blindness,
    and another has trouble using a mouse due to RSI issues. All are reasonably computer
    literate.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有四名数据录入员，但一次只有一名工作；在采访这些员工时，您了解到其中一名员工有红绿色盲，另一名员工由于RSI问题难以使用鼠标。所有员工都具有合理的计算机素养。
- en: Documenting specification requirements
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 记录规格要求
- en: Now that you've assembled your data about the application, it's time to write
    up a **specification**. Software specifications can range from very formal, contractual
    documents that include time estimates and deadlines, to a simple set of descriptions
    of what the programmer intends to build. The purpose of the specification is to
    give everyone involved in the project a point of reference for what the developer
    will create. It spells out the problem to be solved, the functionality required,
    and the scope of what the program should and shouldn't do.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经收集了关于应用程序的数据，是时候撰写一份**规格说明**了。软件规格说明可以从非常正式的、包括时间估计和截止日期的合同文件，到程序员打算构建的简单描述集合。规格说明的目的是为项目中的所有参与者提供开发人员将创建的参考点。它详细说明了要解决的问题、所需的功能以及程序应该做什么和不应该做什么的范围。
- en: Your scenario is rather informal and your application is simple, so you do not
    need a detailed formal specification in this case. However, a basic write-up of
    what you know will make sure that you, your boss, and the users are all on the
    same page.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 您的情景相当非正式，您的应用程序很简单，因此在这种情况下您不需要详细的正式规格说明。然而，对您所知道的基本描述将确保您、您的老板和用户都在同一页面上。
- en: Contents of a simple specification
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简要规格说明的内容
- en: 'We''ll start our specification with the following outline of the items we need
    to write:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从以下项目的概述开始撰写我们需要的内容：
- en: '**Description**: This is one or two sentences that describe the primary purpose,
    function, and goals of the application.  Think of it as the program''s mission
    statement.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：这是描述应用程序的主要目的、功能和目标的一两句话。将其视为程序的使命宣言。'
- en: '**Functionality required**: This section is a list of specific things the program
    needs to be able to do to be minimally functional. It can include both hard requirements,
    such as detailed output and input formats, and soft requirements—goals that are
    not quantifiably attainable, but that the program should strive toward (for example,
    "reduce user errors as much as possible").'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**所需功能**：这一部分是程序需要具备的最基本功能的具体列表。它可以包括硬性要求，如详细的输出和输入格式，以及软性要求——无法量化实现的目标，但程序应该努力实现（例如，“尽量减少用户错误”）。'
- en: '**Functionality not required**: This section is a list of things the program
    does not need to do; it exists to clarify the scope of the software and make sure
    nobody expects unreasonable things from the application.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不需要的功能**：这一部分是程序不需要执行的功能的列表；它存在的目的是澄清软件的范围，并确保没有人对应用程序期望不合理的事情。'
- en: '**Limitations**: This is a list of constraints under which the program must
    operate, both technological and human.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制**：这是程序必须在其中运行的技术和人为约束的列表。'
- en: '**Data dictionary**: This is a detailed list of the data fields the application
    will deal with and their parameters. These can get quite lengthy but are a critical
    reference as the application expands and the data gets utilized in other contexts.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据字典**：这是应用程序将处理的数据字段及其参数的详细列表。这些内容可能会变得非常冗长，但在应用程序扩展和数据在其他上下文中被利用时，它们是关键的参考。'
- en: Writing the ABQ data entry program specification
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写ABQ数据录入程序规格说明
- en: You could write a specification in your favorite word processor, but ideally
    the specification is a part of your code; it will need to be kept with the code
    and synchronized with any changes to the application. For that reason, we're going
    to write it in our text editor using the **reStructuredText** markup language.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在您喜欢的文字处理器中编写规格说明，但理想情况下，规格说明应该是代码的一部分；它需要与代码一起保存，并与应用程序的任何更改同步。因此，我们将使用**reStructuredText**标记语言在我们的文本编辑器中编写它。
- en: For Python documentation, reStructuredText, or reST, is the  official markup
    language. The Python community encourages the use of reST to document Python projects,
    and many packaging and publication tools used in the Python community expect the
    reST format. We'll cover reST in more depth in Chapter 5, *Planning for the Expansion
    of Our Application*, but you can find the official documentation at [http://docutils.sourceforge.net/rst.html](http://docutils.sourceforge.net/rst.html).
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python文档，reStructuredText或reST是官方的标记语言。Python社区鼓励使用reST来记录Python项目，并且Python社区中使用的许多打包和发布工具都期望reST格式。我们将在第5章“规划我们应用程序的扩展”中更深入地介绍reST，但您可以在[http://docutils.sourceforge.net/rst.html](http://docutils.sourceforge.net/rst.html)找到官方文档。
- en: 'Let''s begin writing our specification, one section at a time as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始逐个部分编写我们的规范：
- en: 'Begin the specification with the name of the application and a short description.
    This should contain a summary of the program''s purpose, as follows:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '以应用程序的名称和简短描述开始规范。这应该包含程序目的的摘要，如下： '
- en: '[PRE0]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now, let's list the requirements. Remember that hard requirements are objectively
    attainable goals—input and output requirements, calculations that must be done,
    features that must be present, whereas our soft requirements are subjective or
    best-effort goals. Look through your findings from the last section, and consider
    which needs are which.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们列出要求。请记住，硬性要求是客观可实现的目标——输入和输出要求、必须进行的计算、必须存在的功能，而我们的软性要求是主观或尽力而为的目标。浏览上一节的发现，并考虑哪些需求属于哪种需求。
- en: 'You should come up with something like the following:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该得出类似以下的结论：
- en: '[PRE1]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we''ll reign in the scope of the program with the `Functionality Not
    Required` section. Remember that this is only an entry form for now; editing or
    deletion will be handled in the spreadsheet application. We''ll clarify this as
    follows:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将通过`Functionality Not Required`部分限制程序的范围。请记住，目前这只是一个输入表单；编辑或删除将在电子表格应用程序中处理。我们将明确如下：
- en: '[PRE2]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For the `Limitations` section, remember that we have some users with physical
    constraints, as well has hardware and operating system constraints. Add it as
    follows:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于`Limitations`部分，请记住我们有一些具有身体限制的用户，还有硬件和操作系统的限制。添加如下：
- en: '[PRE3]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, the data dictionary, this is essentially the table we''ve made previously,
    but we''ll break out range, data types, and units for quick reference, as follows:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，数据字典，这本质上是我们之前制作的表格，但我们将分解范围、数据类型和单位以供快速参考，如下：
- en: '[PRE4]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: That's our specification for now! The specification is very likely to grow,
    change, or evolve in complexity as we discover new needs.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们目前的规范！随着我们发现新的需求，规范很可能会增长、改变或发展复杂性。
- en: Designing the application
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计应用程序
- en: With our specification in hand and our requirements clear, it's time to start
    designing our solution. We'll start with the form GUI component itself.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 有了我们手头的规范和清晰的要求，现在是时候开始设计我们的解决方案了。我们将从表单GUI组件本身开始。
- en: 'We''re going to create a basic design for our form in the following three steps:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '| `ttk.Combobox` | 带有可选文本输入的下拉列表 | 在几个值之间进行选择以及文本输入 |'
- en: Determine the appropriate `input` widget for each data field
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定每个数据字段的适当`input`小部件
- en: Group together related items to create a sense of organization
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将相关项目分组以创建组织感
- en: Layout our widgets in their groups on a form sheet
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表单上将我们的小部件分组布局
- en: Exploring Tkinter input widgets
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索Tkinter输入小部件
- en: 'Like all toolkits, Tkinter offers a variety of `input` widgets for different
    kinds of data. However, `ttk` offers additional widget types and enhances some
    (but not all!) of Tkinter''s native widgets. The following table offers advice
    on which widgets are most appropriate for different kinds of data entry:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 与所有工具包一样，Tkinter为不同类型的数据提供了各种`input`小部件。然而，`ttk`提供了额外的小部件类型，并增强了Tkinter的一些（但不是全部！）原生小部件。以下表格提供了关于哪些小部件最适合不同类型的数据输入的建议：
- en: '| **Widget** | **Description** | **Used for** |'
  id: totrans-113
  prefs: []
  type: TYPE_TB
  zh: '| **小部件** | **描述** | **用于** |'
- en: '| `ttk.Entry` | Basic text entry | Single-line strings |'
  id: totrans-114
  prefs: []
  type: TYPE_TB
  zh: '| `ttk.Entry` | 基本文本输入 | 单行字符串 |'
- en: '| `ttk.Spinbox` | Text entry with increment/decrement arrows | Numbers |'
  id: totrans-115
  prefs: []
  type: TYPE_TB
  zh: '| `ttk.Spinbox` | 具有增量/减量箭头的文本输入 | 数字 |'
- en: '| `Tkinter.Listbox` | Box with a list of choices | Choice between several values
    |'
  id: totrans-116
  prefs: []
  type: TYPE_TB
  zh: '| `Tkinter.Listbox` | 带有选择列表的框 | 在几个值之间进行选择 |'
- en: '| `Tkinter.OptionMenu` | Drop-down list with choices | Choice between several
    values |'
  id: totrans-117
  prefs: []
  type: TYPE_TB
  zh: '| `Tkinter.OptionMenu` | 带有选择列表的下拉列表 | 在几个值之间进行选择 |'
- en: '| `ttk.Combobox` | Drop-down list with optional text entry | Choice between
    several values plus text entry |'
  id: totrans-118
  prefs: []
  type: TYPE_TB
  zh: 我们将按照以下三个步骤为我们的表单创建一个基本设计：
- en: '| `ttk.Checkbutton` | Checkbox with label | Boolean values |'
  id: totrans-119
  prefs: []
  type: TYPE_TB
  zh: '| `ttk.Checkbutton` | 带标签的复选框 | 布尔值 |'
- en: '| `ttk.Radiobutton` | Like checkbox, but only one of a set can be selected
    | Choice between small set of values |'
  id: totrans-120
  prefs: []
  type: TYPE_TB
  zh: '| `ttk.Radiobutton` | 类似复选框，但只能选择一组中的一个 | 在一组小部件中选择 |'
- en: '| `Tkiner.Text` | Multiline text entry box | Long, multiline strings |'
  id: totrans-121
  prefs: []
  type: TYPE_TB
  zh: '| `Tkiner.Text` | 多行文本输入框 | 长、多行字符串 |'
- en: '| `Tkinter.Scale` | Mouse-operated slider | Bounded number data |'
  id: totrans-122
  prefs: []
  type: TYPE_TB
  zh: '| `Tkinter.Scale` | 鼠标操作滑块 | 有界数值数据 |'
- en: 'Let''s consider which of these widgets are appropriate for the data that needs
    to be entered:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑哪些小部件适合需要输入的数据：
- en: There are several `Decimal` fields, many with clear boundary ranges with `Min
    height`, `Max height`, `Median height`, `Humidity`, `Temperature`, and `Light`.
    You could use a `Scale` widget for these, but it's not really appropriate for
    precise data entry, since it requires careful positioning to get an exact value.
    It's also mouse-operated and that violates your specification requirements. Instead,
    use the `Spinbox` widget for these.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有几个`Decimal`字段，其中许多具有明确的边界范围，包括`Min height`，`Max height`，`Median height`，`Humidity`，`Temperature`和`Light`。您可以使用`Scale`小部件进行操作，但对于精确的数据输入来说并不是很合适，因为它需要仔细的定位才能获得精确的值。它也是鼠标操作的，这违反了您的规范要求。相反，对于这些字段，请使用`Spinbox`小部件。
- en: There are also some `Int` fields, such as `Plants`, `Blossoms`, and `Fruit`.
    Again, the `Spinbox` widget is the right choice.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有一些`Int`字段，例如`植物`，`花朵`和`水果`。同样，`Spinbox`小部件是正确的选择。
- en: There are a couple of fields with a limited set of possible values—`Time` and
    `Lab`. The `Radiobutton` or `Listbox` widgets could work for these, but both take
    up a lot of space and are less keyboard-friendly as they require selection with
    arrow keys. There is also `OptionMenu`, but it is also mouse or arrow keys only.
    For these, use the `Combobox` widget instead.
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一些字段具有一组可能值—`时间`和`实验室`。`Radiobutton`或`Listbox`小部件可能适用于这些字段，但两者都占用大量空间，并且不太友好，因为它们需要使用箭头键进行选择。还有`OptionMenu`，但它也只能使用鼠标或箭头键。对于这些字段，应使用`Combobox`小部件。
- en: Plot is a tricky case. At face value, it looks like an `Int` field, but think
    about it. The plots could just as well be identified by letters, or symbols, or
    names. Numbers just happen to be an easy set of values with which to assign arbitrary
    identifiers. The `Plot ID`, like the `Lab ID`, is a constrained set of values;
    so, it would make more sense to use a `Combobox` widget here.
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表是一个棘手的情况。乍一看，它看起来像一个`Int`字段，但仔细想想。图表也可以用字母、符号或名称来标识。数字只是一组易于分配任意标识符的值。`图表ID`，就像`实验室ID`一样，是一组受限制的值；因此，在这里使用`Combobox`小部件更合理。
- en: The `Notes` field is multiline text, so the `Text` widget is appropriate here.
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`注释`字段是多行文本，因此在这里使用`Text`小部件是合适的。'
- en: There is one `Boolean` field, `Fault`. It could be handled with `Radiobutton`
    or `Combobox`, but `Checkbutton` is the optimal choice—it's compact and reasonably
    keyboard-friendly.
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个`Boolean`字段，`故障`。它可以使用`Radiobutton`或`Combobox`来处理，但`Checkbutton`是最佳选择—它紧凑且相对键盘友好。
- en: The remaining lines are simple, one-line character fields. We'll use `Entry`
    for those fields.
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其余行都是简单的单行字符字段。我们将使用`Entry`来处理这些字段。
- en: You might be wondering about the `Date` field. Tkinter has no special widget
    for dates; so, we'll use a generic `Entry` widget here for the time being.
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可能会对`日期`字段感到困惑。Tkinter没有专门用于日期的小部件；因此，我们暂时将在这里使用通用的`Entry`小部件。
- en: 'Our final analysis will be as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的最终分析将如下所示：
- en: '| **Field** | **Widget type** |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| **字段** | **小部件类型** |'
- en: '| `Blossoms` | `ttk.Spinbox` |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '`花朵` | `ttk.Spinbox`'
- en: '| `Date` | `ttk.Entry` |'
  id: totrans-135
  prefs: []
  type: TYPE_TB
  zh: '| `日期` | `ttk.Entry` |'
- en: '| `Fault` | `ttk.Checkbutton` |'
  id: totrans-136
  prefs: []
  type: TYPE_TB
  zh: '`故障` | `ttk.Checkbutton`'
- en: '| `Fruit` | `ttk.Spinbox` |'
  id: totrans-137
  prefs: []
  type: TYPE_TB
  zh: '| `水果` | `ttk.Spinbox` |'
- en: '| `Humidity` | `ttk.Spinbox` |'
  id: totrans-138
  prefs: []
  type: TYPE_TB
  zh: '`湿度` | `ttk.Spinbox`'
- en: '| `Lab` | `ttk.Combobox` |'
  id: totrans-139
  prefs: []
  type: TYPE_TB
  zh: '`实验室` | `ttk.Combobox`'
- en: '| `Light` | `ttk.Spinbox` |'
  id: totrans-140
  prefs: []
  type: TYPE_TB
  zh: '`光线` | `ttk.Spinbox`'
- en: '| `Max height` | `ttk.Spinbox` |'
  id: totrans-141
  prefs: []
  type: TYPE_TB
  zh: '`最大高度` | `ttk.Spinbox`'
- en: '| `Median height` | `ttk.Spinbox` |'
  id: totrans-142
  prefs: []
  type: TYPE_TB
  zh: '`中位高度` | `ttk.Spinbox`'
- en: '| `Min height` | `ttk.Spinbox` |'
  id: totrans-143
  prefs: []
  type: TYPE_TB
  zh: '`最小高度` | `ttk.Spinbox`'
- en: '| `Notes` | `Tkinter.Text` |'
  id: totrans-144
  prefs: []
  type: TYPE_TB
  zh: '`注释` | `Tkinter.Text`'
- en: '| `Plants` | `ttk.Spinbox` |'
  id: totrans-145
  prefs: []
  type: TYPE_TB
  zh: '`植物` | `ttk.Spinbox`'
- en: '| `Plot` | `ttk.Combobox` |'
  id: totrans-146
  prefs: []
  type: TYPE_TB
  zh: '`图表` | `ttk.Combobox`'
- en: '| `Seed Sample` | `ttk.Entry` |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '`种子样本` | `ttk.Entry`'
- en: '| `Technician` | `ttk.Entry` |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| `技术人员` | `ttk.Entry` |'
- en: '| `Temperature` | `ttk.Spinbox` |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '`温度` | `ttk.Spinbox`'
- en: '| `Time` | `ttk.Combobox` |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '`时间` | `ttk.Combobox`'
- en: Grouping our fields
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对我们的字段进行分组
- en: Humans tend to get confused when staring at a huge wall of inputs in no particular
    order. You can do your users a big favor by breaking up the input form into sets
    of related fields. Of course, that assumes that your data has related sets of
    fields, doesn't it?
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 人们在没有特定顺序的大量输入面前往往会感到困惑。通过将输入表单分成相关字段的集合，您可以为用户做出很大的帮助。当然，这假设您的数据具有相关字段的集合，不是吗？
- en: 'After looking over your fields, you identify the following related groups:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 在查看了您的字段后，您确定了以下相关组：
- en: The `Date`, `Lab`, `Plot`, `Seed Sample`, `Technician`, and `Time` fields are
    identifying data or metadata about the record itself. You could group these together
    under a heading like `Record information`.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`日期`，`实验室`，`图表`，`种子样本`，`技术人员`和`时间`字段是关于记录本身的标识数据或元数据。您可以将它们组合在一个标题下，如`记录信息`。'
- en: The `Blossoms`, `Fruit`, three `Height` fields, and `Plants` fields are all
    measurements that have to do with the plants in the `Plot` field. You could group
    these together as `Plant data`.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`花朵`，`水果`，三个`高度`字段和`植物`字段都是与`图表`字段中的植物有关的测量值。您可以将它们组合在一起，称为`植物数据`。'
- en: The `Humidity`, `Light`, `Temperature`, and `Equipment` `Fault` fields, are
    all information from the environmental sensor. You could group these as `Environmental
    data`.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`湿度`，`光线`，`温度`和`设备故障`字段都是来自环境传感器的信息。您可以将它们组合为`环境数据`。'
- en: The `Notes` field could be related to anything, so it's in a category of its
    own.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`注释`字段可能与任何事物有关，因此它属于自己的类别。'
- en: 'To group the preceding fields in Tkinter, we could just insert labels between
    each set of fields, but it''s worth exploring the various options we have for
    grouping widgets together:'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在Tkinter中对前面的字段进行分组，我们可以在每组字段之间插入标签，但值得探索将小部件组合在一起的各种选项：
- en: '| **Widget** | **Description** |'
  id: totrans-159
  prefs: []
  type: TYPE_TB
  zh: '| **小部件** | **描述** |'
- en: '| `ttk.LabelFrame` | Frame with label text and an optional border |'
  id: totrans-160
  prefs: []
  type: TYPE_TB
  zh: '`ttk.LabelFrame` | 带有标签文本和可选边框的框架'
- en: '| `ttk.NoteBook` | Tabbed widget that allows multiple pages |'
  id: totrans-161
  prefs: []
  type: TYPE_TB
  zh: '| `ttk.NoteBook` | 允许多个页面的选项卡小部件 |'
- en: '| `Tkinter.PanedWindow` | Allows for multiple re-sizable frames in horizontal
    or vertical arrangement |'
  id: totrans-162
  prefs: []
  type: TYPE_TB
  zh: '`Tkinter.PanedWindow` | 允许在水平或垂直排列中有多个可调整大小的框架'
- en: We don't want our form on multiple pages, nor will users need to resize the
    sections, but the `LabelFrame` widget sounds perfect for our needs.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不希望我们的表单跨多个页面，用户也不需要调整各个部分的大小，但`LabelFrame`小部件非常适合我们的需求。
- en: Laying out the form
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 布置表单
- en: 'So far, we know that we have 17 inputs, which are grouped as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们知道我们有17个输入，分组如下：
- en: Six fields under `Record information`
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`记录信息`下的六个字段'
- en: Four fields under `Environmental data`
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`环境数据`下的四个字段'
- en: Six fields under `Plant data`
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`植物数据`下的六个字段'
- en: One large `Notes` field
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个大的`注释`字段
- en: We want to group the preceding inputs using `LabelFrame`.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望使用`LabelFrame`来对前面的输入进行分组。
- en: Notice that two of the first three sections have widgets in multiples of three.
    That suggests that we could arrange them in a grid with three items across. How
    should we order the fields within each group?
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，前三个部分中的两个有三个小部件。这表明我们可以将它们排列在一个三个项目横向的网格中。我们应该如何对每个组内的字段进行排序？
- en: Ordering of fields seems like a trivial item, but for the user it can make a
    significant difference in usability. Users who have to jump around a form haphazardly
    to match their workflow are more likely to make mistakes.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 字段的排序似乎是一个微不足道的事项，但对于用户来说，它可能在可用性上产生重大影响。必须在表单中随意跳转以匹配其工作流程的用户更有可能出错。
- en: 'As you learned, the data is entered from paper forms filled out by the lab
    technicians. You obtained a copy of the form, as shown in the following screenshot:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所了解的，数据是由实验室技术人员填写的纸质表格输入的。您已经获得了表格的副本，如下截图所示：
- en: '![](assets/5c9481da-4be5-4b0d-ae11-c269df173e16.png)'
  id: totrans-174
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5c9481da-4be5-4b0d-ae11-c269df173e16.png)'
- en: It looks like items are mostly grouped the way our records are grouped, so we'll
    use the ordering on this form to order our fields. That way, data entry clerks
    can zip right through the form without having to bounce around the screen.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来项目大多按照我们的记录分组的方式进行分组，因此我们将使用此表单上的顺序来对我们的字段进行排序。这样，数据输入员就可以直接通过表单，而不必在屏幕上来回跳动。
- en: When designing a new application to replace some part of an existing workflow,
    it's important to learn and respect that workflow. While we'll have to adjust
    that workflow to actually improve it, we don't want to make another part of someone's
    job harder just to make the part we're working on simpler.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计新应用程序以替换现有工作流程的某个部分时，了解和尊重该工作流程是很重要的。虽然我们必须调整工作流程以实际改进它，但我们不希望使某人的工作变得更加困难，只是为了使我们正在处理的部分更简单。
- en: 'One last consideration in our design is where to place field labels in relation
    to the fields. There is a good deal of debate in the UI design community over
    the best placement of labels, but the consensus is that one of the following two
    options is best:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设计中的最后一个考虑是标签与字段的相对位置。在UI设计社区中，关于标签的最佳放置位置存在很多争论，但共识是以下两种选项中的一种最佳：
- en: Labels above fields
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段上方的标签
- en: Labels to the left of fields
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段左侧的标签
- en: 'You might try sketching out both to see which you prefer, but for this application
    labels above fields will probably work better for the following reasons:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以尝试绘制两者，看看哪个更适合您，但对于此应用程序，字段上方的标签可能会更好，原因如下：
- en: Since both fields and labels are rectangular in shape, our form will be more
    compact by stacking them
  id: totrans-181
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于字段和标签都是矩形形状，我们的表单将通过将它们堆叠在一起更加紧凑。
- en: It's a lot easier to make the layout work, since we don't have to find a label
    width that works for all the labels without distancing them too far from the fields
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这样做起来要容易得多，因为我们不必找到适用于所有标签的标签宽度，而不会使它们与字段之间的距离太远
- en: The one exception is the check button field; check buttons are typically labeled
    to the right of the widget.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的例外是复选框字段；复选框通常标记在小部件的右侧。
- en: 'Take a moment to make a mockup of your form, using paper and pencil, or a drawing
    program. Your form should look as follows:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 花点时间用纸和铅笔或绘图程序制作一个表单的草图。您的表单应如下所示：
- en: '![](assets/b492e61c-f61f-4088-882b-c2e5aec87a18.png)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b492e61c-f61f-4088-882b-c2e5aec87a18.png)'
- en: Laying out the application
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 布局应用程序
- en: 'With your form designed, it''s time to consider the rest of the application''s
    GUI:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 设计好您的表单后，现在是考虑应用程序GUI的其余部分的时候了：
- en: You'll need a save button to trigger storage of the entered data
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要一个保存按钮来触发输入数据的存储
- en: Sometimes, we might need to provide status information to the user; applications
    typically have a status bar that displays these kinds of messages
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时，我们可能需要向用户提供状态信息；应用程序通常有一个状态栏，用于显示这些类型的消息
- en: Finally, it might be good to have a header indicating what the form is
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，最好有一个标题来指示表单是什么
- en: 'Adding the following things to our sketch, we have something like the following
    screenshot:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下内容添加到我们的草图中，我们得到了以下截图：
- en: '![](assets/35e3cd90-956d-490f-9e44-a3ca0524ceb4.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/35e3cd90-956d-490f-9e44-a3ca0524ceb4.png)'
- en: Looks good! This is definitely a form we can implement in Tkinter. Your final
    step is to show these designs to your users and the director for any feedback
    or approval.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错！这绝对是一个我们可以在Tkinter中实现的表单。您的最后一步是向用户和主管展示这些设计，以获取任何反馈或批准。
- en: Keep stakeholders involved as much as possible in your application design process.
    This reduces the possibility that you'll have to go back and redesign your application
    later.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 尽量让利益相关者参与到应用程序设计过程中。这样可以减少您以后不得不回头重新设计应用程序的可能性。
- en: Summary
  id: totrans-195
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'In this chapter, you worked through the first two phases of application development:
    understanding the problem and designing a solution. You learned how to develop
    an application specification by interviewing users and examining the data and
    requirements, creating an optimal form layout for your users, and learned which
    widgets are available in Tkinter for dealing with different kinds of input data.
    Most importantly, you learned that developing an application doesn''t begin with
    code, but with research and planning.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，您已经完成了应用程序开发的前两个阶段：了解问题和设计解决方案。您学会了如何通过采访用户和检查数据和要求来开发应用程序规范，为用户创建最佳的表单布局，并了解了Tkinter中可用的小部件，用于处理不同类型的输入数据。最重要的是，您学会了开发应用程序不是从编码开始，而是从研究和规划开始。
- en: In the next chapter, you'll create a basic implementation of your designs with
    Tkinter and Python. We will get familiar with the Tkinter widgets required to
    create our form, build the form, and place the form within the application. We'll
    also learn how to make our form trigger callback actions and discover how to structure
    our code to ensure efficiency and consistency.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将使用Tkinter和Python创建您设计的基本实现。我们将熟悉创建表单所需的Tkinter小部件，构建表单，并将表单放置在应用程序中。我们还将学习如何使我们的表单触发回调操作，并发现如何构建我们的代码以确保效率和一致性。
