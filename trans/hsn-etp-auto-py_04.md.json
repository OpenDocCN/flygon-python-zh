["```py\npip install paramiko\n```", "```py\n#!/usr/bin/python __author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"   import paramiko\nimport time\nChannel = paramiko.SSHClient()  Channel.set_missing_host_key_policy(paramiko.AutoAddPolicy()) Channel.connect(hostname=\"10.10.88.112\", username='admin', password='access123', look_for_keys=False,allow_agent=False)   shell = Channel.invoke_shell()  \n```", "```py\nshell.send(\"enable\\n\") shell.send(\"access123\\n\") shell.send(\"terminal length 0\\n\") shell.send(\"show ip int b\\n\") shell.send(\"show arp \\n\") time.sleep(2) print shell.recv(5000)  Channel.close()\n```", "```py\npip install netmiko\n```", "```py\n$python\n>>>import netmiko\n```", "```py\nR1 = {\n  'device_type': 'cisco_ios',\n  'ip': '10.10.88.110',\n  'username': 'admin',\n  'password': 'access123',\n  'secret': 'access123',  }\n```", "```py\nfrom netmiko import ConnectHandler\nconnection = ConnectHandler(**R1)  connection.enable()  output = connection.send_command(\"show ip int b\") print output\n```", "```py\noutput = connection.send_command(\"show ip int b\",strip_command=False,strip_prompt=False) \n```", "```py\nfrom netmiko import ConnectHandler\n\nSW2 = {\n  'device_type': 'cisco_ios',\n  'ip': '10.10.88.112',\n  'username': 'admin',\n  'password': 'access123',\n  'secret': 'access123', }   core_sw_config = [\"int range gig0/1 - 2\",\"switchport trunk encapsulation dot1q\",\n  \"switchport mode trunk\",\"switchport trunk allowed vlan 1,2\"]     print \"########## Connecting to Device {0} ############\".format(SW2['ip']) net_connect = ConnectHandler(**SW2) net_connect.enable()    print \"***** Sending Configuration to Device *****\" net_connect.send_config_set(core_sw_config) \n```", "```py\n\nfrom netmiko import ConnectHandler\nfrom netmiko.ssh_exception import AuthenticationException, NetMikoTimeoutException\n\ndevice = {\n  'device_type': 'cisco_ios',\n  'ip': '10.10.88.112',\n  'username': 'admin',\n  'password': 'access123',\n  'secret': 'access123', }     print \"########## Connecting to Device {0} ############\".format(device['ip']) try:\n  net_connect = ConnectHandler(**device)\n  net_connect.enable()    print \"***** show ip configuration of Device *****\"\n  output = net_connect.send_command(\"show ip int b\")\n  print output\n\n    net_connect.disconnect()   except NetMikoTimeoutException:\n  print \"=========== SOMETHING WRONG HAPPEN WITH {0} ============\".format(device['ip'])   except AuthenticationException:\n  print \"========= Authentication Failed with {0} ============\".format(device['ip'])   except Exception as unknown_error:\n  print \"============ SOMETHING UNKNOWN HAPPEN WITH {0} ============\"\n```", "```py\n#!/usr/local/bin/python __author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"     from netmiko import SSHDetect, Netmiko\n\ndevice = {\n  'device_type': 'autodetect',\n  'host': '10.10.88.110',\n  'username': 'admin',\n  'password': \"access123\", }   detect_device = SSHDetect(**device) device_type = detect_device.autodetect() print(device_type)  print(detect_device.potential_matches)    device['device_type'] = device_type\nconnection = Netmiko(**device)\n```", "```py\nimport telnetlib\nusername = \"admin\" password = \"access123\" enable_password = \"access123\"\n```", "```py\ncnx = telnetlib.Telnet(host=\"10.10.88.110\") #here we're telnet to Gateway \n```", "```py\ncnx.read_until(\"Username:\") cnx.write(username + \"\\n\") cnx.read_until(\"Password:\") cnx.write(password + \"\\n\") cnx.read_until(\">\") cnx.write(\"en\" + \"\\n\") cnx.read_until(\"Password:\") cnx.write(enable_password + \"\\n\")  \n```", "```py\ncnx.read_until(\"#\") cnx.write(\"show ip int b\" + \"\\n\") output = cnx.read_until(\"#\") print output\n```", "```py\ncleaned_output = output.replace(\"show ip int b\",\"\").replace(\"R1#\",\"\")\nprint cleaned_output \n```", "```py\n#!/usr/bin/python import telnetlib\nimport getpass\nimport time\n\nswitch_ips = [\"10.10.88.111\", \"10.10.88.112\", \"10.10.88.113\", \"10.10.88.114\"] username = raw_input(\"Please Enter your username:\") password = getpass.getpass(\"Please Enter your Password:\") enable_password = getpass.getpass(\"Please Enter your Enable Password:\")   for sw_ip in switch_ips:\n  print \"\\n#################### Working on Device \" + sw_ip + \" ####################\"\n  connection = telnetlib.Telnet(host=sw_ip.strip())\n  connection.read_until(\"Username:\")\n  connection.write(username + \"\\n\")\n  connection.read_until(\"Password:\")\n  connection.write(password + \"\\n\")\n  connection.read_until(\">\")\n  connection.write(\"enable\" + \"\\n\")\n  connection.read_until(\"Password:\")\n  connection.write(enable_password + \"\\n\")\n  connection.read_until(\"#\")\n  connection.write(\"config terminal\" + \"\\n\") # now i'm in config mode\n  vlans = range(300,400)\n  for vlan_id in vlans:\n  print \"\\n********* Adding VLAN \" + str(vlan_id) + \"**********\"\n  connection.read_until(\"#\")\n  connection.write(\"vlan \" + str(vlan_id) + \"\\n\")\n  time.sleep(1)\n  connection.write(\"exit\" + \"\\n\")\n  connection.read_until(\"#\")\n  connection.close()\n```", "```py\nnet.network\n129.183.0.\nnet.broadcast\n129.183.0.0\n```", "```py\npip install netaddr\n```", "```py\npython\n>>>import netaddr\n```", "```py\n#!/usr/bin/python __author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"  from netaddr import IPNetwork,IPAddress\ndef check_ip_address(ipaddr):\n  ip_attributes = []\n  ipaddress = IPAddress(ipaddr)    if ipaddress.is_private():\n  ip_attributes.append(\"IP Address is Private\")   else:\n  ip_attributes.append(\"IP Address is public\")   if ipaddress.is_unicast():\n  ip_attributes.append(\"IP Address is unicast\")\n  elif ipaddress.is_multicast():\n  ip_attributes.append(\"IP Address is multicast\")   if ipaddress.is_loopback():\n  ip_attributes.append(\"IP Address is loopback\")    return \"\\n\".join(ip_attributes)   def operate_on_ip_network(ipnet):    net_attributes = []\n  net = IPNetwork(ipnet)   net_attributes.append(\"Network IP Address is \" + str(net.network) + \" and Netowrk Mask is \" + str(net.netmask))    net_attributes.append(\"The Broadcast is \" + str(net.broadcast) )   net_attributes.append(\"IP Version is \" + str(net.version) )\n  net_attributes.append(\"Information known about this network is \" + str(net.info) )   net_attributes.append(\"The IPv6 representation is \" + str(net.ipv6()))   net_attributes.append(\"The Network size is \" + str(net.size))   net_attributes.append(\"Generating a list of ip addresses inside the subnet\")   for ip in net:\n  net_attributes.append(\"\\t\" + str(ip))   return \"\\n\".join(net_attributes)  \nipaddr = raw_input(\"Please Enter the IP Address: \") print check_ip_address(ipaddr)    ipnet = raw_input(\"Please Enter the IP Network: \") print operate_on_ip_network(ipnet) \n```", "```py\nfrom netmiko import ConnectHandler\nfrom datetime import datetime\n\nwith open(\"/media/bassim/DATA/GoogleDrive/Packt/EnterpriseAutomationProject/Chapter5_Using_Python_to_manage_network_devices/UC1_devices.txt\") as devices_file:    devices = devices_file.readlines()   for line in devices:\n    line = line.strip(\"\\n\")\n  ipaddr = line.split(\",\")[0]\n  username = line.split(\",\")[1]\n  password = line.split(\",\")[2]\n  enable_password = line.split(\",\")[3]    vendor = line.split(\",\")[4]    if vendor.lower() == \"cisco\":\n  device_type = \"cisco_ios\"\n  backup_command = \"show running-config\"    elif vendor.lower() == \"juniper\":\n  device_type = \"juniper\"\n  backup_command = \"show configuration | display set\"   \n```", "```py\n\nprint str(datetime.now()) + \" Connecting to device {}\" .format(ipaddr)   net_connect = ConnectHandler(device_type=device_type,\n  ip=ipaddr,\n  username=username,\n  password=password,\n  secret=enable_password) net_connect.enable() running_config = net_connect.send_command(backup_command)   print str(datetime.now()) + \" Saving config from device {}\" .format(ipaddr)   f = open( \"dev_\" + ipaddr + \"_.cfg\", \"w\") f.write(running_config) f.close() print \"==============================================\"\n```", "```py\n#!/usr/bin/python __author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"   import telnetlib\n\nconnection = telnetlib.Telnet(host=\"10.10.88.110\") connection.read_until(\"Username:\") connection.write(\"admin\" + \"\\n\") connection.read_until(\"Password:\") connection.write(\"access123\" + \"\\n\") connection.read_until(\">\") connection.write(\"en\" + \"\\n\") connection.read_until(\"Password:\") connection.write(\"access123\" + \"\\n\") connection.read_until(\"#\") connection.write(\"terminal length 0\" + \"\\n\") connection.read_until(\"#\") while True:\n  command = raw_input(\"#:\")\n  if \"health\" in command.lower():\n  commands = [\"show ip int b\",\n  \"show ip route\",\n  \"show clock\",\n  \"show banner motd\"\n  ]    elif \"discover\" in command.lower():\n  commands = [\"show arp\",\n  \"show version | i uptime\",\n  \"show inventory\",   ]\n  else:\n  commands = [command]\n  for cmd in commands:\n  connection.write(cmd + \"\\n\")\n  output = connection.read_until(\"#\")\n  print output\n        print \"===================\"  \n```", "```py\npip install xlrd\n```", "```py\n__author__ = \"Bassim Aly\" __EMAIL__ = \"basim.alyy@gmail.com\"   from netmiko import ConnectHandler\nfrom netmiko.ssh_exception import AuthenticationException, NetMikoTimeoutException\nimport xlrd\nfrom pprint import pprint\n\nworkbook = xlrd.open_workbook(r\"/media/bassim/DATA/GoogleDrive/Packt/EnterpriseAutomationProject/Chapter4_Using_Python_to_manage_network_devices/UC3_devices.xlsx\")   sheet = workbook.sheet_by_index(0)   for index in range(1, sheet.nrows):\n  hostname = sheet.row(index)[0].value\n    ipaddr = sheet.row(index)[1].value\n    username = sheet.row(index)[2].value\n    password = sheet.row(index)[3].value\n    enable_password = sheet.row(index)[4].value\n    vendor = sheet.row(index)[5].value\n\n    device = {\n  'device_type': vendor,\n  'ip': ipaddr,\n  'username': username,\n  'password': password,\n  'secret': enable_password,    }\n  # pprint(device)    print \"########## Connecting to Device {0} ############\".format(device['ip'])\n  try:\n  net_connect = ConnectHandler(**device)\n  net_connect.enable()    print \"***** show ip configuration of Device *****\"\n  output = net_connect.send_command(\"show ip int b\")\n  print output\n\n        net_connect.disconnect()    except NetMikoTimeoutException:\n  print \"=======SOMETHING WRONG HAPPEN WITH {0}=======\".format(device['ip'])    except AuthenticationException:\n  print \"=======Authentication Failed with {0}=======\".format(device['ip'])   \n```", "```py\n  except Exception as unknown_error:\n  print \"=======SOMETHING UNKNOWN HAPPEN WITH {0}=======\"   \n```"]