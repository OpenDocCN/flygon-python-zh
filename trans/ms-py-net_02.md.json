["```py\nsudo apt-get install python-pip #Python2\nsudo apt-get install python3-pip\nsudo pip3 install pexpect\nsudo pip install pexpect #Python2\n```", "```py\n>>> import pexpect\n>>> dir(pexpect)\n['EOF', 'ExceptionPexpect', 'Expecter', 'PY3', \n 'TIMEOUT', '__all__', '__builtins__', '__cached__', \n '__doc__', '__file__', '__loader__', '__name__', \n '__package__', '__path__', '__revision__', \n '__spec__', '__version__', 'exceptions', 'expect', \n 'is_executable_file', 'pty_spawn', 'run', 'runu', \n 'searcher_re', 'searcher_string', 'spawn', \n 'spawnbase', 'spawnu', 'split_command_line', 'sys',\n 'utils', 'which']\n>>> \n```", "```py\nechou@ubuntu:~$ telnet 172.16.1.20\nTrying 172.16.1.20...\nConnected to 172.16.1.20.\nEscape character is '^]'.\n<skip>\nUser Access Verification\n\nUsername: cisco\nPassword:\n```", "```py\niosv-1#sh run | i cisco\nenable password cisco\nusername cisco privilege 15 secret 5 $1$Wiwq$7xt2oE0P9ThdxFS02trFw.\n password cisco\n password cisco\niosv-1#\n```", "```py\nline vty 0 4\n exec-timeout 720 0\n password cisco\n login local\n transport input telnet ssh\n```", "```py\nPython 3.5.2 (default, Nov 17 2016, 17:05:23)\n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pexpect\n>>> child = pexpect.spawn('telnet 172.16.1.20')\n>>> child.expect('Username')\n0\n>>> child.sendline('cisco')\n6\n>>> child.expect('Password')\n0\n>>> child.sendline('cisco')\n6\n>>> child.expect('iosv-1#')\n0\n>>> child.sendline('show version | i V')\n19\n>>> child.expect('iosv-1#')\n0\n>>> child.before\nb'show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrn'\n>>> child.sendline('exit')\n5\n>>> exit()\n```", "```py\n>>> child.sendline('show version | i V')\n19\n>>> child.expect('iosv-1#')\n0\n>>> child.before\nb'show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrn'\n>>> child.after\nb'iosv-1#'\n```", "```py\n>>> child.expect('[Uu]sername')\n```", "```py\n>>> child.expect(['Username', 'username'])\n```", "```py\n>>> child.sendline('show run | i hostname')\n22\n>>> child.expect('iosv-1')\n0\n>>> child.before\nb'show run | i hostnamernhostname '\n>>>\n```", "```py\niosv-1#show run | i hostname\nhostname iosv-1\niosv-1#\n```", "```py\n>>> child.sendline('show run | i hostname')\n22\n>>> child.expect('iosv-1#')\n0\n>>> child.before\nb'show run | i hostnamernhostname iosv-1rn'\n>>>\n```", "```py\n     #!/usr/bin/python3\n\n     import pexpect\n\n     devices = {'iosv-1': {'prompt': 'iosv-1#', 'ip': '172.16.1.20'}, 'iosv-2': {'prompt': 'iosv-2#', 'ip': '172.16.1.21'}}\n     username = 'cisco'\n     password = 'cisco'\n\n     for device in devices.keys():\n         device_prompt = devices[device]['prompt']\n         child = pexpect.spawn('telnet ' + devices[device]['ip'])\n         child.expect('Username:')\n         child.sendline(username)\n         child.expect('Password:')\n         child.sendline(password)\n         child.expect(device_prompt)\n         child.sendline('show version | i V')\n         child.expect(device_prompt)\n         print(child.before)\n         child.sendline('exit')\n```", "```py\n       devices = {'iosv-1': {'prompt': 'iosv-1#', 'ip': \n      '172.16.1.20'}, 'iosv-2': {'prompt': 'iosv-2#', \n      'ip': '172.16.1.21'}}\n```", "```py\n $ python3 chapter2_1.py\n b'show version | i VrnCisco IOS Software, IOSv\n Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, \n RELEASE SOFTWARE (fc2)rnProcessor board ID \n 9MM4BI7B0DSWK40KV1IIRrn'\n b'show version | i VrnCisco IOS Software, IOSv \n Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T,\n RELEASE SOFTWARE (fc2)rn'\n```", "```py\n>>> child.expect('Username', timeout=5)\n```", "```py\n>>> child.sendline('show version | i V')\n19\n>>> child.expect('iosv-1#')\n0\n>>> child.before\nb'show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrn'\n>>> child.interact()\niosv-1#show run | i hostname\nhostname iosv-1\niosv-1#exit\nConnection closed by foreign host.\n>>>\n```", "```py\n>>> str(child)\n\"<pexpect.pty_spawn.spawn object at 0x7fb01e29dba8>ncommand: /usr/bin/telnetnargs: ['/usr/bin/telnet', '172.16.1.20']nsearcher: Nonenbuffer (last 100 chars): b''nbefore (last 100 chars): b'NTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrn'nafter: b'iosv-1#'nmatch: <_sre.SRE_Match object; span=(164, 171), match=b'iosv-1#'>nmatch_index: 0nexitstatus: 1nflag_eof: Falsenpid: 2807nchild_fd: 5nclosed: Falsentimeout: 30ndelimiter: <class 'pexpect.exceptions.EOF'>nlogfile: Nonenlogfile_read: Nonenlogfile_send: Nonenmaxread: 2000nignorecase: Falsensearchwindowsize: Nonendelaybeforesend: 0.05ndelayafterclose: 0.1ndelayafterterminate: 0.1\"\n>>>\n```", "```py\n>>> child = pexpect.spawn('telnet 172.16.1.20')\n>>> child.logfile = open('debug', 'wb')\n```", "```py\n>>> from pexpect import pxssh\n>>> child = pxssh.pxssh()\n>>> child.login('172.16.1.20', 'cisco', 'cisco', auto_prompt_reset=False)\nTrue\n>>> child.sendline('show version | i V')\n19\n>>> child.expect('iosv-1#')\n0\n>>> child.before\nb'show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrn'\n>>> child.logout()\n>>>\n```", "```py\n  #!/usr/bin/python3\n\n  import getpass\n  from pexpect import pxssh\n\n  devices = {'iosv-1': {'prompt': 'iosv-1#', 'ip': '172.16.1.20'},\n  'iosv-2': {'prompt': 'iosv-2#', 'ip': '172.16.1.21'}}\n  commands = ['term length 0', 'show version', 'show run']\n\n  username = input('Username: ')\n  password = getpass.getpass('Password: ')\n\n  # Starts the loop for devices\n  for device in devices.keys():\n      outputFileName = device + '_output.txt'\n      device_prompt = devices[device]['prompt']\n      child = pxssh.pxssh()\n      child.login(devices[device]['ip'], username.strip(), password.strip(), auto_promp t_reset=False)\n      # Starts the loop for commands and write to output\n      with open(outputFileName, 'wb') as f:\n          for command in commands:\n              child.sendline(command)\n              child.expect(device_prompt)\n              f.write(child.before)\n\n      child.logout()\n```", "```py\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev\nsudo pip install cryptography\nsudo pip install paramiko\n$ python\nPython 2.7.12 (default, Nov 19 2016, 06:48:10)\n[GCC 5.4.0 20160609] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import paramiko\n>>> exit()\n```", "```py\nsudo apt-get install build-essential libssl-dev libffi-dev python3-dev\nsudo pip3 install cryptography\nsudo pip3 install paramiko\n$ python3\nPython 3.5.2 (default, Nov 17 2016, 17:05:23)\n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import paramiko\n>>>\n```", "```py\n>>> import paramiko, time\n>>> connection = paramiko.SSHClient()\n>>> connection.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n>>> connection.connect('172.16.1.20', username='cisco', password='cisco', look_for_keys=False, allow_agent=False)\n>>> new_connection = connection.invoke_shell()\n>>> output = new_connection.recv(5000)\n>>> print(output)\nb\"rn**************************************************************************rn* IOSv is strictly limited to use for evaluation, demonstration and IOS *rn* education. IOSv is provided as-is and is not supported by Cisco's *rn* Technical Advisory Center. Any use or disclosure, in whole or in part, *rn* of the IOSv Software or Documentation to any third party for any *rn* purposes is expressly prohibited except as otherwise authorized by *rn* Cisco in writing. *rn**************************************************************************rniosv-1#\"\n>>> new_connection.send(\"show version | i Vn\")\n19\n>>> time.sleep(3)\n>>> output = new_connection.recv(5000)\n>>> print(output)\nb'show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrniosv-1#'\n>>> new_connection.close()\n>>>\n```", "```py\n>>> import paramiko\n>>> connection = paramiko.SSHClient()\n>>> connection.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n>>> connection.connect('172.16.1.20', username='cisco', password='cisco', look_for_keys=False, allow_agent=False)\n```", "```py\niosv-1#who\n Line User Host(s) Idle Location\n*578 vty 0 cisco idle 00:00:00 172.16.1.1\n 579 vty 1 cisco idle 00:01:30 172.16.1.173\nInterface User Mode Idle Peer Address\niosv-1#\n```", "```py\n>>> connection.connect('172.16.1.20', username='cisco', password='cisco', look_for_keys=False, allow_agent=False)\n>>> stdin, stdout, stderr = connection.exec_command('show version | i V')\n>>> stdout.read()\nb'Cisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrn'\n>>> \n```", "```py\niosv-1#who\n Line User Host(s) Idle Location\n*578 vty 0 cisco idle 00:00:00 172.16.1.1\nInterface User Mode Idle Peer Address\niosv-1#\n```", "```py\n>>> stdin, stdout, stderr = connection.exec_command('show version | i V')\nTraceback (most recent call last):\n File \"<stdin>\", line 1, in <module>\n File \"/usr/local/lib/python3.5/dist-packages/paramiko/client.py\", line 435, in exec_command\n chan = self._transport.open_session(timeout=timeout)\n File \"/usr/local/lib/python3.5/dist-packages/paramiko/transport.py\", line 711, in open_session\n timeout=timeout)\n File \"/usr/local/lib/python3.5/dist-packages/paramiko/transport.py\", line 795, in open_channel\n raise SSHException('SSH session not active')\nparamiko.ssh_exception.SSHException: SSH session not active\n>>>\n```", "```py\n>>> new_connection.send(\"show version | i Vn\")\n19\n>>> new_connection.send(\"show version | i Vn\")\n19\n>>> new_connection.send(\"show version | i Vn\")\n19\n>>> new_connection.recv(5000)\nb'show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrniosv-1#show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrniosv-1#show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(2)T, RELEASE SOFTWARE (fc2)rnProcessor board ID 9MM4BI7B0DSWK40KV1IIRrniosv-1#'\n>>>\n```", "```py\ndevices = {'iosv-1': {'ip': '172.16.1.20'}, 'iosv-2': {'ip': '172.16.1.21'}}\n```", "```py\ncommands = ['show version', 'show run']\n```", "```py\ndef clear_buffer(connection):\n    if connection.recv_ready():\n        return connection.recv(max_buffer)\n```", "```py\noutput = clear_buffer(new_connection)\n```", "```py\ntime.sleep(2)\n```", "```py\nssh-keygen -t rsa\n```", "```py\n<Management Host with Pramiko>$ cat ~/.ssh/id_rsa.pub\nssh-rsa <your public key> echou@pythonicNeteng\n```", "```py\n<Remote Host>$ vim ~/.ssh/authorized_keys\nssh-rsa <your public key> echou@pythonicNeteng\n```", "```py\nPython 3.5.2 (default, Nov 17 2016, 17:05:23)\n[GCC 5.4.0 20160609] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import paramiko\n>>> key = paramiko.RSAKey.from_private_key_file('/home/echou/.ssh/id_rsa')\n>>> client = paramiko.SSHClient()\n>>> client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n>>> client.connect('192.168.199.182', username='echou', pkey=key)\n>>> stdin, stdout, stderr = client.exec_command('ls -l')\n>>> stdout.read()\nb'total 44ndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Desktopndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Documentsndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Downloadsn-rw-r--r-- 1 echou echou 8980 Jan 7 10:03 examples.desktopndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Musicndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Picturesndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Publicndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Templatesndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Videosn'\n>>> stdin, stdout, stderr = client.exec_command('pwd')\n>>> stdout.read()\nb'/home/echoun'\n>>> client.close()\n>>>\n```", "```py\n$ cat commands.txt\nconfig t\nlogging buffered 30000\nend\ncopy run start\n```", "```py\n$ cat devices.json\n{\n \"iosv-1\": {\"ip\": \"172.16.1.20\"},\n \"iosv-2\": {\"ip\": \"172.16.1.21\"}\n}\n```", "```py\n  with open('devices.json', 'r') as f:\n      devices = json.load(f)\n\n  with open('commands.txt', 'r') as f:\n      commands = [line for line in f.readlines()]\n```", "```py\n$ python3 chapter2_4.py\nUsername: cisco\nPassword:\nb'terminal length 0rniosv-2#config trnEnter configuration commands, one per line. End with CNTL/Z.rniosv-2(config)#'\nb'logging buffered 30000rniosv-2(config)#'\n...\n```", "```py\niosv-1#sh run | i logging\nlogging buffered 30000\niosv-1#sh start | i logging\nlogging buffered 30000\n```", "```py\niosv-2#sh run | i logging\nlogging buffered 30000\niosv-2#sh start | i logging\nlogging buffered 30000\n\n```"]