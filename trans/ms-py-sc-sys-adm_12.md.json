["```py\n$ sudo apt-get install telnetd\n```", "```py\n$ telnet ip_address_of_your_remote_server\n```", "```py\nconfigure terminal\nenable password 'set_Your_password_to_access_router'\nusername 'set_username' password 'set_password_for_remote_access'\nline vty 0 4 \nlogin local \ntransport input all \ninterface f0/0 \nip add 'set_ip_address_to_the_router' 'put_subnet_mask'\nno shut \nend \nshow ip interface brief \n```", "```py\nimport telnetlib\nimport getpass\nimport sys\n\nHOST_IP = \"your host ip address\"\nhost_user = input(\"Enter your telnet username: \")\npassword = getpass.getpass()\n\nt = telnetlib.Telnet(HOST_IP)\nt.read_until(b\"Username:\")\nt.write(host_user.encode(\"ascii\") + b\"\\n\")\nif password:\n t.read_until(b\"Password:\") t.write(password.encode(\"ascii\") + b\"\\n\")\n\nt.write(b\"enable\\n\")\nt.write(b\"enter_remote_device_password\\n\") #password of your remote device\nt.write(b\"conf t\\n\")\nt.write(b\"int loop 1\\n\")\nt.write(b\"ip add 10.1.1.1 255.255.255.255\\n\") t.write(b\"int loop 2\\n\") t.write(b\"ip add 20.2.2.2 255.255.255.255\\n\") t.write(b\"end\\n\") t.write(b\"exit\\n\") print(t.read_all().decode(\"ascii\") )\n```", "```py\nstudent@ubuntu:~$ python3 telnet_example.py Output: Enter your telnet username: student Password: \n\nserver>enable Password: server#conf t Enter configuration commands, one per line.  End with CNTL/Z. server(config)#int loop 1 server(config-if)#ip add 10.1.1.1 255.255.255.255 server(config-if)#int loop 23 server(config-if)#ip add 20.2.2.2 255.255.255.255 server(config-if)#end server#exit\n```", "```py\n$ sudo apt install ssh\n```", "```py\n$ ssh host_name@host_ip_address\n```", "```py\nclass subprocess.Popen(args, bufsize=0, executable=None, stdin=None, stdout=None,\n stderr=None, preexec_fn=None, close_fds=False, shell=False, cwd=None, env=None, universal_newlines=False, startupinfo=None, creationflags=0)\n```", "```py\nimport subprocess\nimport sys\n\nHOST=\"your host username@host ip\"\nCOMMAND= \"ls\"\n\nssh_obj = subprocess.Popen([\"ssh\", \"%s\" % HOST, COMMAND],\n shell=False,\n stdout=subprocess.PIPE,\n stderr=subprocess.PIPE)\n\nresult = ssh_obj.stdout.readlines()\nif result == []:\n err = ssh_obj.stderr.readlines()\n print(sys.stderr, \"ERROR: %s\" % err)\nelse:\n print(result)\n```", "```py\nstudent@ubuntu:~$ python3 ssh_using_sub.py Output : student@192.168.0.106's password: [b'Desktop\\n', b'Documents\\n', b'Downloads\\n', b'examples.desktop\\n', b'Music\\n', b'Pictures\\n', b'Public\\n', b'sample.py\\n', b'spark\\n', b'spark-2.3.1-bin-hadoop2.7\\n', b'spark-2.3.1-bin-hadoop2.7.tgz\\n', b'ssh\\n', b'Templates\\n', b'test_folder\\n', b'test.txt\\n', b'Untitled1.ipynb\\n', b'Untitled.ipynb\\n', b'Videos\\n', b'work\\n']\n```", "```py\n$ pip3 install fabric3\n```", "```py\nfrom fabric.api import * env.hosts=[\"host_name@host_ip\"] env.password='your password'  def dir(): run('mkdir fabric') print('Directory named fabric has been created on your host network') def diskspace():\n run('df') \n```", "```py\nstudent@ubuntu:~$ fab dir Output: [student@192.168.0.106] Executing task 'dir' [student@192.168.0.106] run: mkdir fabric\nDone. Disconnecting from 192.168.0.106... done.\n```", "```py\n$ sudo pip3 install paramiko\n```", "```py\nconfigure t\nip domain-name cciepython.com\ncrypto key generate rsa\nHow many bits in the modulus [512]: 1024\ninterface range f0/0 - 1\nswitchport mode access\nswitchport access vlan 1\nno shut\nint vlan 1\nip add 'set_ip_address_to_the_router' 'put_subnet_mask'\nno shut\nexit\nenable password 'set_Your_password_to_access_router'\nusername 'set_username' password 'set_password_for_remote_access'\nusername 'username' privilege 15\nline vty 0 4\nlogin local\ntransport input all\nend\n```", "```py\nimport paramiko\nimport time\n\nip_address = \"host_ip_address\"\nusr = \"host_username\"\npwd = \"host_password\"\n\nc = paramiko.SSHClient()\nc.set_missing_host_key_policy(paramiko.AutoAddPolicy())\nc.connect(hostname=ip_address,username=usr,password=pwd)\n\nprint(\"SSH connection is successfully established with \", ip_address)\nrc = c.invoke_shell() for n in range (2,6):\n print(\"Creating VLAN \" + str(n)) rc.send(\"vlan database\\n\") rc.send(\"vlan \" + str(n) +  \"\\n\") rc.send(\"exit\\n\") time.sleep(0.5) time.sleep(1) output = rc.recv(65535) print(output) c.close\n```", "```py\nstudent@ubuntu:~$ python3 pmiko.py Output: SSH connection is successfuly established with  192.168.0.70 Creating VLAN 2 Creating VLAN 3 Creating VLAN 4 Creating VLAN 5\n```", "```py\nfrom netmiko import ConnectHandler\n\nremote_device={\n 'device_type': 'cisco_ios',\n 'ip':  'your remote_device ip address',\n 'username': 'username',\n 'password': 'password',\n}\n\nremote_connection = ConnectHandler(**remote_device)\n#net_connect.find_prompt()\n\nfor n in range (2,6):\n print(\"Creating VLAN \" + str(n))\n commands = ['exit','vlan database','vlan ' + str(n), 'exit']\n output = remote_connection.send_config_set(commands)\n print(output)\n\ncommand = remote_connection.send_command('show vlan-switch brief')\nprint(command)\n```", "```py\nstudent@ubuntu:~$ python3 nmiko.py Output: Creating VLAN 2 config term Enter configuration commands, one per line.  End with CNTL/Z. server(config)#exit server #vlan database server (vlan)#vlan 2 VLAN 2 modified: server (vlan)#exit APPLY completed. Exiting.... server # .. .. .. .. switch# Creating VLAN 5 config term Enter configuration commands, one per line.  End with CNTL/Z. server (config)#exit server #vlan database server (vlan)#vlan 5 VLAN 5 modified: server (vlan)#exit APPLY completed. Exiting.... VLAN Name                             Status    Ports ---- -------------------------------- --------- ------------------------------- 1    default                          active    Fa0/0, Fa0/1, Fa0/2, Fa0/3, Fa0/4, Fa0/5, Fa0/6, Fa0/7, Fa0/8, Fa0/9, Fa0/10, Fa0/11, Fa0/12, Fa0/13, Fa0/14, Fa0/15 2    VLAN0002                         active 3    VLAN0003                         active 4    VLAN0004                         active 5    VLAN0005                         active 1002 fddi-default                    active 1003 token-ring-default         active 1004 fddinet-default               active 1005 trnet-default                    active\n```", "```py\n List = [\u2018a\u2019, \u2018b\u2019, \u2018c\u2019, \u2018d\u2019, \u2018e\u2019]\n Print(list [10:])\n```"]