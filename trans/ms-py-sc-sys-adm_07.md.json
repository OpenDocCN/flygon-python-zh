["```py\nimport textwrap\n\nsample_string = '''Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, Python has a design philosophy that emphasizes code readability, notably using significant whitespace.'''\n\nw = textwrap.wrap(text=sample_string, width=30)\nprint(w)\n```", "```py\nstudent@ubuntu:~/work$ python3 wrap_example.py\n['Python is an interpreted high-', 'level programming language for', 'general-purpose programming.', 'Created by Guido van Rossum', 'and first released in', '1991, Python has a design', 'philosophy that emphasizes', 'code readability,  notably', 'using significant whitespace.']\n```", "```py\ntextwrap.fill(text, width)\n```", "```py\nimport textwrap  sample_string = '''Python is an interpreted high-level programming language.'''  w = textwrap.fill(text=sample_string, width=50) print(w)\n```", "```py\nstudent@ubuntu:~/work$ python3 fill_example.py\nPython is an interpreted high-level programming\nlanguage.\n```", "```py\n textwrap.dedent(text)\n```", "```py\nimport textwrap  str1 = ''' Hello Python World \\tThis is Python 101 Scripting language\\n Python is an interpreted high-level programming language for general-purpose programming. ''' print(\"Original: \\n\", str1) print()  t = textwrap.dedent(str1) print(\"Dedented: \\n\", t)\n```", "```py\nstudent@ubuntu:~/work$ python3 dedent_example.py \nHello Python World   This is Python 101\nScripting language\n\nPython is an interpreted high-level programming language for general-purpose programming.\n```", "```py\n textwrap.indent(text, prefix)\n```", "```py\nimport textwrap  str1 = \"Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, \\n\\nPython has a design philosophy that emphasizes code readability, notably using significant whitespace.\"  w = textwrap.fill(str1, width=30) i = textwrap.indent(w, '*') print(i)\n```", "```py\nstudent@ubuntu:~/work$ python3 indent_example.py *Python is an interpreted high- *level programming language for *general-purpose programming. *Created by Guido van Rossum *and first released in 1991, *Python has a design philosophy *that emphasizes code *readability, notably using *significant whitespace.\n```", "```py\n            textwrap.shorten(text, width)\n```", "```py\nimport textwrap str1 = \"Python is an interpreted high-level programming language for general-purpose programming. Created by Guido van Rossum and first released in 1991, \\n\\nPython has a design philosophy that emphasizes code readability, notably using significant whitespace.\" s = textwrap.shorten(str1, width=50) print(s)\n```", "```py\nstudent@ubuntu:~/work$ python3 shorten_example.py Python is an interpreted high-level [...]\n```", "```py\nre.match(pattern, string)\n```", "```py\nimport re  str_line = \"This is python tutorial. Do you enjoy learning python ?\" obj = re.match(r'(.*) enjoy (.*?) .*', str_line) if obj:\n print(obj.groups())\n```", "```py\nstudent@ubuntu:~/work$ python3 re_match.py\n('This is python tutorial. Do you', 'learning')\n```", "```py\nre.search(pattern, string)\n```", "```py\nimport re pattern = ['programming', 'hello'] str_line = 'Python programming is fun' for p in pattern:\n print(\"Searching for %s in %s\" % (p, str_line)) if re.search(p, str_line): print(\"Match found\") else: print(\"No match found\")\n```", "```py\nstudent@ubuntu:~/work$ python3 re_search.py Searching for programming in Python programming is fun Match found Searching for hello in Python programming is fun No match found\n```", "```py\nimport re pattern = 'Red' colors = 'Red, Blue, Black, Red, Green' p = re.findall(pattern, colors) print(p) str_line = 'Peter Piper picked a peck of pickled peppers. How many pickled peppers did Peter Piper pick?' pt = re.findall('pe\\w+', str_line) pt1 = re.findall('pic\\w+', str_line) print(pt) print(pt1) line = 'Hello hello HELLO bye' p = re.findall('he\\w+', line, re.IGNORECASE) print(p)\n```", "```py\nstudent@ubuntu:~/work$ python3 re_findall_example.py\n['Red', 'Red']\n['per', 'peck', 'peppers', 'peppers', 'per']\n['picked', 'pickled', 'pickled', 'pick']\n['Hello', 'hello', 'HELLO']\n```", "```py\n   re.sub(pattern, repl_str, string, count=0)\n```", "```py\nimport re\n\nstr_line = 'Peter Piper picked a peck of pickled peppers. How many pickled peppers did Peter Piper pick?'\n\nprint(\"Original: \", str_line)\np = re.sub('Peter', 'Mary', str_line)\nprint(\"Replaced: \", p)\n\np = re.sub('Peter', 'Mary', str_line, count=1)\nprint(\"Replacing only one occurrence of Peter\u2026 \")\nprint(\"Replaced: \", p)\n```", "```py\nstudent@ubuntu:~/work$ python3 re_sub.py\nOriginal:  Peter Piper picked a peck of pickled peppers. How many pickled peppers did Peter Piper pick?\nReplaced:  Mary Piper picked a peck of pickled peppers. How many pickled peppers did Mary Piper pick?\nReplacing only one occurrence of Peter...\nReplaced:  Mary Piper picked a peck of pickled peppers. How many pickled peppers did Peter Piper pick?\n```", "```py\nimport re\n\nprint(\"str1:- \")\nstr1 = \"Sky is blue. Sky is beautiful.\"\n\nprint(\"Original: \", str1)\np = re.subn('beautiful', 'stunning', str1)\nprint(\"Replaced: \", p)\nprint()\n\nprint(\"str_line:- \")\nstr_line = 'Peter Piper picked a peck of pickled peppers. How many pickled peppers did Peter Piper pick?'\n\nprint(\"Original: \", str_line)\np = re.subn('Peter', 'Mary', str_line)\nprint(\"Replaced: \", p)\n```", "```py\nstudent@ubuntu:~/work$ python3 re_subn.py\nstr1:-\nOriginal:  Sky is blue. Sky is beautiful.\nReplaced:  ('Sky is blue. Sky is stunning.', 1)\n\nstr_line:-\nOriginal:  Peter Piper picked a peck of pickled peppers. How many pickled peppers did Peter Piper pick?\nReplaced:  ('Mary Piper picked a peck of pickled peppers. How many pickled peppers did Mary Piper pick?', 2)\n```", "```py\nstudent@ubuntu:~/work$ python3\nPython 3.6.6 (default, Sep 12 2018, 18:26:19)\n[GCC 8.0.1 20180414 (experimental) [trunk revision 259383]] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n>>> print ('\\u2713')\n\n>>> print ('\\u2724')\n\n>>> print ('\\u2750')\n\n>>> print ('\\u2780')\n\n>>> chinese = '\\u4e16\\u754c\\u60a8\\u597d!\n>>> chinese\n![](assets/5088de25-a7d1-4cde-8821-03151178533d.png) ----- (Meaning \u201cHello world!\u201d)\n>>>\n>>> s = '\\u092E\\u0941\\u0902\\u092C\\u0908'\n>>> s\n'\u092e\u0941\u0902\u092c\u0908'                            ------(Unicode translated in Marathi)\n>>>\n>>> s = '\\u10d2\\u10d0\\u10db\\u10d0\\u10e0\\u10ef\\u10dd\\u10d1\\u10d0'\n>>> s\n'\u10d2\u10d0\u10db\u10d0\u10e0\u10ef\u10dd\u10d1\u10d0'                 ------(Meaning \u201cHello\u201d in Georgian)\n>>>\n>>> s = '\\u03b3\\u03b5\\u03b9\\u03b1\\u03c3\\u03b1\\u03c2'\n>>> s\n'\u03b3\u03b5\u03b9\u03b1\u03c3\u03b1\u03c2'                     ------(Meaning \u201cHello\u201d in Greek)\n>>> \n```", "```py\n>>> str1 = u'Office'\n>>> for char in str1:\n... print('U+%04x' % ord(char))\n...\nU+004f\nU+0066\nU+0066\nU+0069\nU+0063\nU+0065\n>>> str2 = ![](assets/89322582-8eec-4421-a610-31da6e1876bf.png)\n>>> for char in str2:\n... print('U+%04x' % ord(char))\n...\nU+4e2d\nU+6587\n\n```", "```py\n>>> str = u'Office'\n>>> enc_str = type(str.encode('utf-8'))\n>>> enc_str\n<class 'bytes'>\n```", "```py\n>>> str = bytes('Office', encoding='utf-8')\n>>> dec_str = str.decode('utf-8')\n>>> dec_str\n'Office'\n```", "```py\n>>> str = b\"\\xaf\"\n>>> str.decode('utf-8', 'strict')\n Traceback (most recent call last):\n File \"<stdin>\", line 1, in <module>\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xaf in position 0: invalid start byte\n\n>>> str.decode('utf-8', \"replace\")\n'\\ufffd'\n>>> str.decode('utf-8', \"backslashreplace\")\n'\\\\xaf'\n>>> str.decode('utf-8', \"ignore\")\n' '\n```"]