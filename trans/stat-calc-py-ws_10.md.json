["```py\ndef f(x):\n\u00a0\u00a0\u00a0\u00a0return x**2\n```", "```py\ndef f(x):\n\u00a0\u00a0\u00a0\u00a0return x**2\ndef derivative(f,x):\n\u00a0\u00a0\u00a0\u00a0\"\"\"\n\u00a0\u00a0\u00a0\u00a0Returns the value of the derivative of\n\u00a0\u00a0\u00a0\u00a0the function at a given x-value.\n\u00a0\u00a0\u00a0\u00a0\"\"\"\n\u00a0\u00a0\u00a0\u00a0delta_x = 1/1000000\n\u00a0\u00a0\u00a0\u00a0return (f(x+delta_x) - f(x))/delta_x\n```", "```py\nfor i in range(-3,4):\n\u00a0\u00a0\u00a0\u00a0print(i,derivative(f,i))\n```", "```py\n-3 -5.999999000749767\n-2 -3.999998999582033\n-1 -1.999999000079633\n0 1e-06\n1 2.0000009999243673\n2 4.0000010006480125\n3 6.000001000927568\n```", "```py\nfor i in range(-3,4):\n\u00a0\u00a0\u00a0\u00a0print(i,round(derivative(f,i),1))\n```", "```py\n-3 -6.0\n-2 -4.0\n-1 -2.0\n0 0.0\n1 2.0\n2 4.0\n3 6.0\n```", "```py\n    from math import sqrt\n    ```", "```py\n    def f(x):\n    \u00a0\u00a0\u00a0\u00a0return 6*x**3\n    def g(x):\n    \u00a0\u00a0\u00a0\u00a0return sqrt(2*x + 5)\n    def h(x):\n    \u00a0\u00a0\u00a0\u00a0return 1/(x-3)**3\n    ```", "```py\n    def derivative(f,x):\n    \u00a0\u00a0\u00a0\u00a0\"\"\"Returns the value of the derivative of\n    \u00a0\u00a0\u00a0\u00a0the function at a given x-value.\"\"\"\n    \u00a0\u00a0\u00a0\u00a0delta_x = 1/1000000\n    \u00a0\u00a0\u00a0\u00a0return (f(x+delta_x) - f(x))/delta_x\n    ```", "```py\n    print(derivative(f,-2),derivative(g,3),derivative(h,5))\n    ```", "```py\n    71.99996399265274 0.30151133101341543 -0.18749981253729509\n    ```", "```py\n    def f(x):\n    \u00a0\u00a0\u00a0\u00a0return x**3 - 2*x**2 + 1\n    ```", "```py\n    def point_slope(m,x,y):\n    \u00a0\u00a0\u00a0\u00a0\"\"\"Finds the y-intercept of a line\n    \u00a0\u00a0\u00a0\u00a0given its slope m and a point (x,y)\"\"\"\n    \u00a0\u00a0\u00a0\u00a0return y-m*x\n    ```", "```py\n    def tangent_line(f,x):\n    \u00a0\u00a0\u00a0\u00a0\"\"\"Finds the equation of the line \n    \u00a0\u00a0\u00a0\u00a0tangent to f at x.\"\"\"\n    ```", "```py\n    \u00a0\u00a0\u00a0\u00a0m = derivative(f,x)\n    ```", "```py\n    \u00a0\u00a0\u00a0\u00a0y0 = f(x)\n    \u00a0\u00a0\u00a0\u00a0b = point_slope(m,x,y0)\n    \u00a0\u00a0\u00a0\u00a0print(\"y = \",round(m,2),\"x + \",round(b,2))\n    ```", "```py\n    for x in [-0.48,0.67]:\n    \u00a0\u00a0\u00a0\u00a0tangent_line(f,x)\n    ```", "```py\n    y =  2.61 x +  1.68\n    y =  -1.33 x +  1.3\n    ```", "```py\n    def f(x):\n    \u00a0\u00a0\u00a0\u00a0return x**2\n    number_of_rectangles = 20\n    ```", "```py\n    def integral(f,a,b,num):\n    \u00a0\u00a0\u00a0\u00a0\"\"\"Returns the sum of num rectangles\n    \u00a0\u00a0\u00a0\u00a0under f between a and b\"\"\"\n    \u00a0\u00a0\u00a0\u00a0width = (b-a)/num\n    ```", "```py\n    \u00a0\u00a0\u00a0\u00a0area = sum([width*f(a+width*n) for n in range(num)])\n    \u00a0\u00a0\u00a0\u00a0return area\n    ```", "```py\n    for i in range(1,21):\n    \u00a0\u00a0\u00a0\u00a0print(i,integral(f,0,1,i))\n    ```", "```py\n    1 0.0\n    2 0.125\n    3 0.18518518518518517\n    4 0.21875\n    5 0.24000000000000005\n    6 0.2546296296296296\n    7 0.26530612244897955\n    8 0.2734375\n    9 0.279835390946502\n    10 0.2850000000000001\n    11 0.2892561983471075\n    12 0.292824074074074\n    13 0.2958579881656805\n    14 0.29846938775510196\n    15 0.30074074074074075\n    16 0.302734375\n    17 0.3044982698961938\n    18 0.3060699588477366\n    19 0.3074792243767312\n    20 0.3087500000000001\n    ```", "```py\n    print(100,integral(f,0,1,100))\n    ```", "```py\n    100 0.32835000000000014\n    ```", "```py\n    print(1000,integral(f,0,1,1000))\n    ```", "```py\n    1000 0.33283350000000034\n    ```", "```py\n    def trap_integral(f,a,b,num):\n    \u00a0\u00a0\u00a0\u00a0\"\"\"Returns the sum of num trapezoids\n    \u00a0\u00a0\u00a0\u00a0under f between a and b\"\"\"\n    \u00a0\u00a0\u00a0\u00a0width = (b-a)/num\n    \u00a0\u00a0\u00a0\u00a0area = 0.5*width*(f(a) + f(b) + 2*sum([f(a+width*n) for n in range(1,num)]))\n    \u00a0\u00a0\u00a0\u00a0return area\n    ```", "```py\n    print(trap_integral(f,0,1,5))\n    ```", "```py\n    0.3400000000000001\n    ```", "```py\n    from math import cos,pi\n    def f(x):\n    \u00a0\u00a0\u00a0\u00a0return x**3 + 3\n    def g(x):\n    \u00a0\u00a0\u00a0\u00a0return 3*cos(x)\n    def h(x):\n    \u00a0\u00a0\u00a0\u00a0return ((x**2 - 1)*(x**2+1))/x**2\n    ```", "```py\n    print(trap_integral(f,3,4,100))\n    print(trap_integral(g,0,pi/4,100))\n    print(trap_integral(h,2,4,100))\n    ```", "```py\n    46.75017499999999\n    2.1213094390731206\n    18.416792708494786\n    ```", "```py\nfrom math import sqrt, pi\ndef f(x):\n\u00a0\u00a0\u00a0\u00a0return sqrt(x)\n```", "```py\ndef vol_solid(f,a,b):\n\u00a0\u00a0\u00a0\u00a0volume = 0\n\u00a0\u00a0\u00a0\u00a0num = 1000\n```", "```py\n\u00a0\u00a0\u00a0\u00a0width = (b-a)/num\n```", "```py\n\u00a0\u00a0\u00a0\u00a0for i in range(num):\n\u00a0\u00a0\u00a0\u00a0#     volume of cylindrical disk\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vol = pi*(f(a+i*width))**2*width\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volume += vol    \n\u00a0\u00a0\u00a0\u00a0return volume\n```", "```py\nprint(vol_solid(f,0,1))\n```", "```py\n1.5692255304681022\n```", "```py\n    def f(x):\n    \u00a0\u00a0\u00a0\u00a0return 4 -4*x**2\n    def g(x):\n    \u00a0\u00a0\u00a0\u00a0return 1-x**2\n    def h(x):\n    \u00a0\u00a0\u00a0\u00a0return f(x)**2-g(x)**2\n    ```", "```py\n    def vol_solid(f,a,b):\n    \u00a0\u00a0\u00a0\u00a0volume = 0\n    \u00a0\u00a0\u00a0\u00a0num = 10000\n    \u00a0\u00a0\u00a0\u00a0width = (b-a)/num\n    \u00a0\u00a0\u00a0\u00a0for i in range(num):\n    ```", "```py\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vol = pi*(f(a+i*width))*width\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0volume += vol    \n    \u00a0\u00a0\u00a0\u00a0return volume\n    ```", "```py\n    print(vol_solid(h,-1,1))\n    ```", "```py\n    50.26548245743666\n    ```", "```py\ndef f(x):\n\u00a0\u00a0\u00a0\u00a0return x**3-2.8*x**2+1.2*x+0.85\n```", "```py\ndef find_max_mins(f,start,stop,step=0.001):\n\u00a0\u00a0\u00a0\u00a0x = start\n\u00a0\u00a0\u00a0\u00a0deriv = derivative(f,x)\n\u00a0\u00a0\u00a0\u00a0while x < stop:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x += step\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#take derivative at new x:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0newderiv = derivative(f,x)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#if derivative changes sign\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if newderiv == 0 or deriv*newderiv < 0:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(\"Max/Min at x=\",x,\"y=\",f(x))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#change deriv to newderiv\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0deriv = newderiv\n```", "```py\nfind_max_mins(f,-100,100)\n```", "```py\nMax/Min at x= 0.247000000113438 y= 0.9906440229999803\nMax/Min at x= 1.6200000001133703 y= -0.3027919999998646\n```", "```py\n    from math import sqrt\n    def t(x):\n    \u00a0\u00a0\u00a0\u00a0return sqrt(x**2+36)/3 + (9-x)/5\n\n    find_max_mins(t,0,9)\n    ```", "```py\n    Max/Min at x= 4.4999999999998375 y= 3.4000000000000004\n    ```", "```py\n    def v(x):\n    \u00a0\u00a0\u00a0\u00a0return x*(10-2*x)*(12-2*x)\n    ```", "```py\n    find_max_mins(v,0,5)\n    ```", "```py\n    Max/Min at x= 1.8109999999999113 y= 96.77057492400002\n    ```", "```py\n    from math import pi\n    def surf_area(r):\n    \u00a0\u00a0\u00a0\u00a0return pi*r**2 + 710/r\n    find_max_mins(surf_area,0.1,10)\n    ```", "```py\n    Max/Min at x= 4.834999999999949 y= 220.28763352297025\n    ```", "```py\n    from math import sqrt\n    def d(t):\n    \u00a0\u00a0\u00a0\u00a0return sqrt((20-6*t)**2+(8*t)**2)\n    ```", "```py\n    find_max_mins(d,0,4)\n    ```", "```py\n    Max/Min at x= 1.1999999999999786 y= 16.0\n    ```"]