["```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoSignalSlot1 import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.show()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoCalculator import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonPlus.clicked.connect(self.addtwonum)\n        self.ui.pushButtonSubtract.clicked.connect\n        (self.subtracttwonum)\n        self.ui.pushButtonMultiply.clicked.connect\n        (self.multiplytwonum)\n        self.ui.pushButtonDivide.clicked.connect(self.dividetwonum)\n        self.show()\n    def addtwonum(self):\n        if len(self.ui.lineEditFirstNumber.text())!=0:\n                a=int(self.ui.lineEditFirstNumber.text())\n        else:\n                a=0\n        if len(self.ui.lineEditSecondNumber.text())!=0:\n                b=int(self.ui.lineEditSecondNumber.text())\n        else:\n                b=0\n                sum=a+b\n        self.ui.labelResult.setText(\"Addition: \" +str(sum))\n    def subtracttwonum(self):\n        if len(self.ui.lineEditFirstNumber.text())!=0:\n                a=int(self.ui.lineEditFirstNumber.text())\n        else:\n                a=0\n        if len(self.ui.lineEditSecondNumber.text())!=0:\n                b=int(self.ui.lineEditSecondNumber.text())\n        else:\n                b=0\n                diff=a-b\n        self.ui.labelResult.setText(\"Substraction: \" +str(diff))\n    def multiplytwonum(self):\n        if len(self.ui.lineEditFirstNumber.text())!=0:\n                a=int(self.ui.lineEditFirstNumber.text())\n        else:\n                a=0\n        if len(self.ui.lineEditSecondNumber.text())!=0:\n                b=int(self.ui.lineEditSecondNumber.text())\n        else:\n                b=0\n                mult=a*b\n        self.ui.labelResult.setText(\"Multiplication: \" +str(mult))\n    def dividetwonum(self):\n        if len(self.ui.lineEditFirstNumber.text())!=0:\n                a=int(self.ui.lineEditFirstNumber.text())\n        else:\n                a=0\n        if len(self.ui.lineEditSecondNumber.text())!=0:\n                b=int(self.ui.lineEditSecondNumber.text())\n        else:\n                b=0\n                division=a/b\n        self.ui.labelResult.setText(\"Division: \"+str(round\n        (division,2)))\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoSpinBox import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.spinBoxBookQty.editingFinished.connect(self.\n        result1)\n        self.ui.doubleSpinBoxSugarWeight.editingFinished.connect\n        (self.result2)\n        self.show()\n    def result1(self):\n        if len(self.ui.lineEditBookPrice.text())!=0:\n                bookPrice=int(self.ui.lineEditBookPrice.text())\n        else:\n                bookPrice=0\n                totalBookAmount=self.ui.spinBoxBookQty.value() * \n                bookPrice\n                self.ui.lineEditBookAmount.setText(str\n                (totalBookAmount))\n    def result2(self):\n        if len(self.ui.lineEditSugarPrice.text())!=0:\n                sugarPrice=float(self.ui.lineEditSugarPrice.\n                text())\n        else:\n                sugarPrice=0\n                totalSugarAmount=self.ui.\n                doubleSpinBoxSugarWeight.value() * sugarPrice\n                self.ui.lineEditSugarAmount.setText(str(round\n                (totalSugarAmount,2)))\n                totalBookAmount=int(self.ui.lineEditBookAmount.\n                text())\n                totalAmount=totalBookAmount+totalSugarAmount\n                self.ui.labelTotalAmount.setText(str(round\n                (totalAmount,2)))\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoScrollBar import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.horizontalScrollBarSugarLevel.valueChanged.connect\n        (self.scrollhorizontal)\n        self.ui.verticalScrollBarPulseRate.valueChanged.connect\n        (self.scrollvertical)\n        self.ui.horizontalSliderBloodPressure.valueChanged.connect\n        (self.sliderhorizontal)\n        self.ui.verticalSliderCholestrolLevel.valueChanged.connect\n        (self.slidervertical)\n        self.show()\n    def scrollhorizontal(self,value):\n        self.ui.lineEditResult.setText(\"Sugar Level : \"+str(value))\n    def scrollvertical(self, value):\n        self.ui.lineEditResult.setText(\"Pulse Rate : \"+str(value))\n    def sliderhorizontal(self, value):\n        self.ui.lineEditResult.setText(\"Blood Pressure :  \n        \"+str(value))\n    def slidervertical(self, value):\n        self.ui.lineEditResult.setText(\"Cholestrol Level : \n        \"+str(value))\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoListWidget1 import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.listWidgetDiagnosis.itemClicked.connect(self.\n        dispSelectedTest)\n        self.show()\n    def dispSelectedTest(self):\n        self.ui.labelTest.setText(\"You have selected \n        \"+self.ui.listWidgetDiagnosis.currentItem().text())\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoListWidget2 import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.listWidgetDiagnosis.itemSelectionChanged.connect\n        (self.dispSelectedTest)\n        self.show()\n    def dispSelectedTest(self):\n        self.ui.listWidgetSelectedTests.clear()\n        items = self.ui.listWidgetDiagnosis.selectedItems()\n        for i in list(items):\n            self.ui.listWidgetSelectedTests.addItem(i.text())\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoListWidget3 import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonAdd.clicked.connect(self.addlist)\n        self.show()\n    def addlist(self):\n        self.ui.listWidgetSelectedItems.addItem(self.ui.\n        lineEditFoodItem.text())\n        self.ui.lineEditFoodItem.setText('')\n        self.ui.lineEditFoodItem.setFocus()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication, QInputDialog, QListWidgetItem\nfrom demoListWidgetOp import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.listWidget.addItem('Ice Cream')\n        self.ui.listWidget.addItem('Soda')\n        self.ui.listWidget.addItem('Coffee')\n        self.ui.listWidget.addItem('Chocolate')\n        self.ui.pushButtonAdd.clicked.connect(self.addlist)\n        self.ui.pushButtonEdit.clicked.connect(self.editlist)\n        self.ui.pushButtonDelete.clicked.connect(self.delitem)\n        self.ui.pushButtonDeleteAll.clicked.connect\n        (self.delallitems)\n        self.show()\n    def addlist(self):\n        self.ui.listWidget.addItem(self.ui.lineEdit.text())\n        self.ui.lineEdit.setText('')\n        self.ui.lineEdit.setFocus()\n    def editlist(self):\n        row=self.ui.listWidget.currentRow()\n        newtext, ok=QInputDialog.getText(self, \"Enter new text\", \n        \"Enter new text\")\n        if ok and (len(newtext) !=0):\n                self.ui.listWidget.takeItem(self.ui.listWidget.\n                currentRow())\n                self.ui.listWidget.insertItem(row,\n                QListWidgetItem(newtext))\n    def delitem(self):\n        self.ui.listWidget.takeItem(self.ui.listWidget.\n        currentRow())\n    def delallitems(self):\n        self.ui.listWidget.clear()\nif __name__==\"__main__\":\n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoComboBox import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.comboBoxAccountType.currentIndexChanged.connect\n        (self.dispAccountType)\n        self.show()\n\n    def dispAccountType(self):\n        self.ui.labelAccountType.setText(\"You have selected \n        \"+self.ui.comboBoxAccountType.itemText(self.ui.\n        comboBoxAccountType.currentIndex())) \n\nif __name__==\"__main__\":   \n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoFontComboBox import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        myFont=QtGui.QFont(self.ui.fontComboBox.itemText(self.ui.\n        fontComboBox.currentIndex()),15)\n        self.ui.textEdit.setFont(myFont)\n        self.ui.fontComboBox.currentFontChanged.connect\n        (self.changeFont)\n        self.show()\n    def changeFont(self):\n        myFont=QtGui.QFont(self.ui.fontComboBox.itemText(self.ui.\n        fontComboBox.currentIndex()),15)\n        self.ui.textEdit.setFont(myFont)\nif __name__==\"__main__\":   \n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```", "```py\nimport sys\nfrom PyQt5.QtWidgets import QDialog, QApplication\nfrom demoProgressBar import *\nclass MyForm(QDialog):\n    def __init__(self):\n        super().__init__()\n        self.ui = Ui_Dialog()\n        self.ui.setupUi(self)\n        self.ui.pushButtonStart.clicked.connect(self.updateBar)\n        self.show()\n\n    def updateBar(self):\n        x = 0\n        while x < 100:\n            x += 0.0001\n            self.ui.progressBar.setValue(x)\n\nif __name__==\"__main__\":   \n    app = QApplication(sys.argv)\n    w = MyForm()\n    w.show()\n    sys.exit(app.exec_())\n```"]