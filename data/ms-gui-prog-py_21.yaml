- en: Answers to Questions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题的答案
- en: Chapter 1
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章
- en: '**Qt is written in C++, a language that is very different from Python. What
    are some of the major differences between the two languages? How might these differences
    come across as we use Qt in Python?**'
  id: totrans-2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Qt是用C++编写的，这种语言与Python非常不同。这两种语言之间有哪些主要区别？在我们使用Python中的Qt时，这些区别可能会如何体现？**'
- en: 'The C++ language differences impact PyQt in several ways, for example:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: C++语言的差异以多种方式影响PyQt，例如：
- en: Its static typing and type-safe functions mean that PyQt is fairly strict about
    which functions can be called and which variables can be passed, in some circumstances.
  id: totrans-4
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它的静态类型和类型安全的函数意味着在某些情况下，PyQt对可以调用的函数和可以传递的变量相当严格。
- en: The relative lack of built-in data types in C++ means that Qt provides a rich
    selection of data types, many of which we must use in Python due to type safety.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C++中缺乏内置数据类型意味着Qt提供了丰富的数据类型选择，其中许多我们必须在Python中使用，因为类型安全。
- en: The use of `enum` types, common in C++ but rare in Python, is pervasive in Qt.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在C++中常见但在Python中很少见的`enum`类型在Qt中普遍存在。
- en: '**GUIs are composed of widgets. Open some GUI applications on your computer
    and try to identify as many widgets as you can.**'
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: GUI由小部件组成。在计算机上打开一些GUI应用程序，尝试识别尽可能多的小部件。
- en: 'Some examples might include the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一些例子可能包括以下内容：
- en: Buttons
  id: totrans-9
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 按钮
- en: Checkboxes
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复选框
- en: Radio buttons
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单选按钮
- en: Labels
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签
- en: Text edits
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本编辑
- en: Sliders
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滑块
- en: Image areas
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像区域
- en: Comboboxes
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组合框
- en: '**Suppose that the following program crashes. Figure out why, and fix it so
    that it shows a window:**'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**假设以下程序崩溃。找出原因，并修复它以显示一个窗口：**'
- en: '[PRE0]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The code should read as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 代码应该如下所示：
- en: '[PRE1]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Remember that a `QApplication()` object must exist before any `QWidget` objects,
    and it must be created with a list as an argument.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 记住在任何`QWidget`对象之前必须存在一个`QApplication()`对象，并且它必须用列表作为参数创建。
- en: '**The `QWidget` class has a property called `statusTip`. Which of these are
    most likely to be the names of the accessor methods for this property:**'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**`QWidget`类有一个名为`statusTip`的属性。以下哪些最有可能是该属性的访问方法的名称：**'
- en: '`getStatusTip()` and `setStatusTip()`'
  id: totrans-23
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`getStatusTip()`和`setStatusTip()`'
- en: '`statusTip()` and `setStatusTip()`'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`statusTip()`和`setStatusTip()`'
- en: '`get_statusTip()` and `change_statusTip()`'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`get_statusTip()`和`change_statusTip()`'
- en: The answer **b** is correct. In most cases, the accessors for `property` are
    `property()` and `setProperty()`.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 答案**b**是正确的。在大多数情况下，`property`的访问器是`property()`和`setProperty()`。
- en: '`QDate` **is a class for wrapping a calendar date. In which of the three main
    Qt modules would you expect to find it?**'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`QDate`是用于包装日历日期的类。你期望在三个主要的Qt模块中的哪一个找到它？'
- en: '`QDate` is in `QtCore`. `QtCore` holds data type classes for things not necessarily
    related to a GUI.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`QDate`在`QtCore`中。`QtCore`保存了与GUI不一定相关的数据类型类。'
- en: '`QFont` **is a class that defines a screen font. In which of the three main
    Qt modules would you expect to find it?**'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`QFont`是定义屏幕字体的类。你期望在三个主要的Qt模块中的哪一个找到它？'
- en: '`QFont` is in `QtGui`. Fonts relate to GUIs but aren''t widgets or layouts,
    so you would expect it to be in `QtGui`.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`QFont`在`QtGui`中。字体与GUI相关，但不是小部件或布局，所以你期望它在`QtGui`中。'
- en: '**Can you recreate `hello_world.py` using Qt Designer? Make sure to set `windowTitle`.**'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你能使用Qt Designer重新创建`hello_world.py`吗？确保设置`windowTitle`。**'
- en: Create a new project based on `QWidget`. Then select the main widget and set `windowTitle`
    in the Properties pane.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 基于`QWidget`创建一个新项目。然后选择主窗口小部件，并在属性窗格中设置`windowTitle`。
- en: Chapter 2
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章
- en: '**How would you create a `QWidget` that is fullscreen, has no window frame,
    and uses the hourglass cursor?**'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你如何创建一个全屏的`QWidget`，没有窗口框架，并使用沙漏光标？**'
- en: 'The code looks like this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码看起来像这样：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Suppose that you''re asked to design a data-entry form for a computer inventory
    database. Choose the best widget to use for each of the following fields:**'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设你被要求为计算机库存数据库设计一个数据输入表单。为以下字段选择最佳的小部件：
- en: '**Computer make**: One of eight brands that your company purchases'
  id: totrans-38
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计算机制造**：公司购买的八个品牌之一'
- en: '**Processor speed**: The CPU speed in GHz'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**处理器速度**：CPU速度（GHz）'
- en: '**Memory amount**: The amount of RAM, in whole MB'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内存量**：RAM的数量，以MB为单位'
- en: '**Hostname**: The computer''s hostname'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**主机名**：计算机的主机名'
- en: '**Video make**: Whether the video hardware is Nvidia, AMD, or Intel'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**视频制造**：视频硬件是Nvidia、AMD还是Intel'
- en: '**OEM license**: Whether the computer uses an OEM license'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OEM许可**：计算机是否使用OEM许可'
- en: 'This table lists some possible answers:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个表格列出了一些可能的答案：
- en: '| Field | Widget(s) | Explanation |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 字段 | 小部件 | 解释 |'
- en: '| --- | --- | --- |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Computer make | `QComboBox` | For choosing between a list of many values,
    a combobox is ideal |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| 计算机制造 | `QComboBox` | 用于在许多值列表中进行选择，组合框是理想的选择 |'
- en: '| Processor Speed | `QDoubleSpinBox` | Best choice for decimal values |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| 处理器速度 | `QDoubleSpinBox` | 十进制值的最佳选择 |'
- en: '| Memory Amount | `QSpinBox` | Best choice for integer values |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| 内存量 | `QSpinBox` | 整数值的最佳选择 |'
- en: '| Hostname | `QLineEdit` | A hostname is just a one-line text string |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| 主机名 | `QLineEdit` | 主机名只是一个单行文本字符串 |'
- en: '| Video Make | `QComboBox`, `QRadioButton` | Combobox would work, but with
    only three choices, radio buttons are an option, too |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
  zh: '| 视频制造 | `QComboBox`，`QRadioButton` | 组合框可以工作，但只有三个选择，单选按钮也是一个选项 |'
- en: '| OEM License | `QCheckBox` | `QCheckBox` is a good choice for Boolean values
    |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| OEM许可 | `QCheckBox` | `QCheckBox`是布尔值的一个很好的选择 |'
- en: '**The data entry form includes an `inventory number` field that requires the `XX-999-9999X` format,
    where `X` is an uppercase letter from `A` to `Z`, excluding `O` and `I`, and `9` is
    a number from `0` to `9`. Can you create a validator class to validate this input?**'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据输入表单包括一个需要`XX-999-9999X`格式的`库存编号`字段，其中`X`是从`A`到`Z`的大写字母，不包括`O`和`I`，`9`是从`0`到`9`的数字。你能创建一个验证器类来验证这个输入吗？**'
- en: See `inventory_validator.py` in the example code.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 查看示例代码中的`inventory_validator.py`。
- en: '**Check out the following calculator form:**'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查看以下计算器表单：
- en: '![](assets/1ecc9365-5e6d-40b1-9764-b07adf8f0aff.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1ecc9365-5e6d-40b1-9764-b07adf8f0aff.png)'
- en: '**What layouts may have been used to create it?**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**可能使用了哪些布局来创建它？**'
- en: It is most likely either a `QVBoxLayout` with a nested `QGridLayout` layout
    for the button area, or a single `QGridLayout` layout using a column span for
    the first two rows.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 很可能是一个带有嵌套`QGridLayout`布局的`QVBoxLayout`，用于按钮区域，或者是一个使用列跨度的单个`QGridLayout`布局的前两行。
- en: '**Referring to the preceding calculator form, how would you make the button
    grid take up any extra space when the form is resized?**'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**参考前面的计算器表单，当表单被调整大小时，你如何使按钮网格占据任何额外的空间？**'
- en: Set the `sizePolicy` property on each widget to `QtWidgets.QSizePolicy.Expanding`
    for both vertical and horizontal.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在每个小部件上设置`sizePolicy`属性为`QtWidgets.QSizePolicy.Expanding`，垂直和水平都是。
- en: '**The topmost widget in the calculator form is a `QLCDNumber` widget. Can you
    find the Qt documentation on this widget? What unique properties does it have?
    When might you use it?**'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**计算器表单中最顶部的小部件是一个`QLCDNumber`小部件。你能找到关于这个小部件的Qt文档吗？它有哪些独特的属性？什么时候会用到它？**'
- en: The `QLCDNumber` documentation is at [https://doc.qt.io/qt-5/qlcdnumber.html](https://doc.qt.io/qt-5/qlcdnumber.html).
    Its unique properties are `digitCount`, `intValue`, `mode`, `segmentStyle`, `smallDecimalPoint`,
    and `value`. It's useful for displaying any kind of number, including octal, hexadecimal,
    and binary.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '`QLCDNumber`的文档在[https://doc.qt.io/qt-5/qlcdnumber.html](https://doc.qt.io/qt-5/qlcdnumber.html)。它的独特属性是`digitCount`、`intValue`、`mode`、`segmentStyle`、`smallDecimalPoint`和`value`。它适用于显示任何类型的数字，包括八进制、十六进制和二进制。'
- en: '**Starting with your template code, build the calculator form in code.**'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**从你的模板代码开始，在代码中构建计算器表单。**'
- en: See `calculator_form.py` in the example code.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例代码中查看`calculator_form.py`。
- en: '**Build the calculator form in Qt Designer.**'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在Qt Designer中构建计算器表单。**'
- en: See `calculator_form.ui` in the example code.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例代码中查看`calculator_form.ui`。
- en: Chapter 3
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章
- en: '**Look at the following table and determine which of the connections could
    actually be made, and which would result in an error. You may need to look up
    the signatures of these signals and slots in the documentation:**'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**查看下表，并确定哪些连接实际上可以被建立，哪些会导致错误。你可能需要在文档中查找这些信号和槽的签名：**'
- en: '| # | Signal | Slot |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| # | 信号 | 槽 |'
- en: '| --- | --- | --- |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 1 | `QPushButton.clicked` | `QLineEdit.clear` |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 1 | `QPushButton.clicked` | `QLineEdit.clear` |'
- en: '| 2 | `QComboBox.currentIndexChanged` | `QListWidget.scrollToItem` |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 2 | `QComboBox.currentIndexChanged` | `QListWidget.scrollToItem` |'
- en: '| 3 | `QLineEdit.returnPressed` | `QCalendarWidget.setGridVisible` |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 3 | `QLineEdit.returnPressed` | `QCalendarWidget.setGridVisible` |'
- en: '| 4 | `QLineEdit.textChanged` | `QTextEdit.scrollToAnchor` |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 4 | `QLineEdit.textChanged` | `QTextEdit.scrollToAnchor` |'
- en: 'The answers are as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 答案如下：
- en: Yes, because the Boolean argument of `clicked` can be ignored by `clear`
  id: totrans-76
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以，因为`clicked`的布尔参数可以被`clear`忽略
- en: No, because `currentIndexChanged` sends `int`, but `scrollToItem` expects an
    item and a scroll hint
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不行，因为`currentIndexChanged`发送的是`int`，但`scrollToItem`期望一个项目和一个滚动提示
- en: No, because `returnPressed` sends no arguments and `setGridVisible` expects
    one
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不行，因为`returnPressed`不发送任何参数，而`setGridVisible`期望一个参数
- en: Yes, because `textChanged` sends a string, which `scrollToAnchor` accepts
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以，因为`textChanged`发送一个字符串，而`scrollToAnchor`接受它
- en: '**The ****`emit()` method does not exist on a signal object until the signal
    has been bound (that is, connected to a slot). Rewrite the `CategoryWindow.onSubmit()` method
    from our first `calendar_app.py` file to protect against the possibility of `submitted` being
    unbound.**'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在信号对象上，`emit()`方法直到信号被绑定（即连接到槽）之前都不存在。重新编写我们第一个`calendar_app.py`文件中的`CategoryWindow.onSubmit()`方法，以防`submitted`未被绑定的可能性。**'
- en: 'We need to catch an `AttributeError`, like so:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要捕获`AttributeError`，像这样：
- en: '[PRE3]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**You find an object in the Qt documentation with a slot that requires `QString` as
    an argument. Can you connect your custom signal that sends a Python `str`** **object?**'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你在Qt文档中找到一个对象，它的槽需要`QString`作为参数。你能连接你自定义的信号，发送一个Python `str`对象吗？**'
- en: Yes, because PyQt automatically converts between `QString` and Python `str`
    objects.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 可以，因为PyQt会自动在`QString`和Python `str`对象之间转换。
- en: '**You find an object in the Qt documentation with a slot that requires `QVariant` as
    an argument. What built-in Python types could you sent to this slot?**'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你在Qt文档中找到一个对象，它的槽需要`QVariant`作为参数。你可以发送哪些内置的Python类型到这个槽？**'
- en: Any of them can be sent. `QVariant` is a generic object container that can hold
    any other type of object.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 任何一个都可以发送。`QVariant`是一个通用对象容器，可以容纳任何其他类型的对象。
- en: '**You''re trying to create a dialog window that takes time and emits it when
    the user has finished editing the value. You''re trying to use automatic slot
    connections, but your code isn''t doing anything. Determine what is missing from
    the following:**'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你正在尝试创建一个对话框窗口，它需要时间，并在用户完成编辑数值时发出信号。你试图使用自动槽连接，但你的代码没有做任何事情。确定以下代码缺少什么：**'
- en: '[PRE4]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'First, you''re missing a call to `connectSlotsByName()`. Also, you have not
    set the object name of `self.time_inp`. Your code should look like this:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，你忘记调用`connectSlotsByName()`。另外，你没有设置`self.time_inp`的对象名称。你的代码应该像这样：
- en: '[PRE5]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**You''ve created a `.ui` file in Qt Designer for a calculator application,
    and you''re trying to get it working in code, but it''s not. What are you doing
    wrong? See the following source code:**'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你在Qt Designer中为一个计算器应用程序创建了一个`.ui`文件，并尝试在代码中让它工作，但是没有成功。你做错了什么？查看以下源代码：**'
- en: '[PRE6]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'There are four things wrong here:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有四个问题：
- en: First, you've forgotten to call `super().__init__()`
  id: totrans-94
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，你忘记调用`super().__init__()`
- en: Second, you're passing `self` to `Ui_Calculator`, which doesn't need any arguments
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其次，你将`self`传递给`Ui_Calculator`，它不需要任何参数
- en: Third, you're calling `self.ui.setupGUI()`; it should be `self.ui.setupUi()`
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三，你调用了`self.ui.setupGUI()`；应该是`self.ui.setupUi()`
- en: Finally, you're passing `self.ui` into `setupUi()`; you should be passing in
    a reference to the containing widget, in this case, `self`
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，你将`self.ui`传递给`setupUi()`；你应该传递一个对包含小部件的引用，即`self`
- en: '**You''re trying to create a new button class that emits an integer value when
    clicked; unfortunately, nothing happens when you click on the button. Look at
    the following code and try to make it work:**'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你正在尝试创建一个新的按钮类，当点击按钮时会发出一个整数值；不幸的是，当你点击按钮时什么也不会发生。查看以下代码并尝试让它工作：**'
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The answer is to change the last line of `__init__()` to the following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是将`__init__()`的最后一行更改为以下内容：
- en: '[PRE8]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Because we've overridden the built-in `clicked` property with our own signal,
    `self.clicked` no longer points to the signal emitted when the button is clicked.
    We have to call `super().clicked` to get a reference to the parent class's `clicked`
    signal.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们用自己的信号覆盖了内置的`clicked`属性，`self.clicked`不再指向按钮被点击时发出的信号。我们必须调用`super().clicked`来获得对父类`clicked`信号的引用。
- en: Chapter 4
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章
- en: '**You want to use `QMainWindow` with the `calendar_app.py` script from [Chapter
    3](dbb86a9b-0050-490e-94da-1f4661d8bc66.xhtml), *Handling Events with Signals
    and Slots*. How would you go about converting it?**'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你想要使用`calendar_app.py`脚本中的`QMainWindow`，来自[第3章](dbb86a9b-0050-490e-94da-1f4661d8bc66.xhtml)，*使用信号和槽处理事件*。你会如何进行转换？**'
- en: 'The easiest approach would be the following:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的方法是以下：
- en: Rename `MainWindow` to something like `CalendarForm`
  id: totrans-106
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将`MainWindow`重命名为类似`CalendarForm`的东西
- en: Create a new `MainWindow` class based on `QMainWindow`
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于`QMainWindow`创建一个新的`MainWindow`类
- en: Create an instance of `CalendarForm` inside `MainWindow` and set it as the central
    widget
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`MainWindow`内创建一个`CalendarForm`的实例，并将其设置为中央小部件
- en: '**You''re working on an app and have added the sub-menu names to the menu bar
    but have not populated any of them with items. Your coworker says that none of
    the menu names are appearing on his desktop when he tests it. Your code looks
    correct; what is probably going on here?**'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你正在开发一个应用程序，并已将子菜单名称添加到菜单栏，但尚未填充任何子菜单。你的同事说在他测试时他的桌面上没有出现任何菜单名称。你的代码看起来是正确的；这里可能出了什么问题？**'
- en: Your coworker is using a platform (such as macOS) that doesn't display empty
    menu folders by default.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你的同事正在使用一个默认不显示空菜单文件夹的平台（如macOS）。
- en: '**You''re developing a code editor and want to create a sidebar panel for interacting
    with a debugger. Which `QMainWindow` feature would be most appropriate for this
    task?**'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你正在开发一个代码编辑器，并希望创建一个侧边栏面板与调试器进行交互。哪个`QMainWindow`特性对这个任务最合适？**'
- en: '`QDockWidget` would be most appropriate, since it allows you to build any kind
    of widget into a dockable window. The toolbar wouldn''t be a good choice, since
    it''s mainly designed for buttons.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`QDockWidget`是最合适的，因为它允许你将任何类型的小部件构建到可停靠窗口中。工具栏不是一个好选择，因为它主要设计用于按钮。'
- en: '**The following code isn''t working correctly; it proceeds no matter what is
    clicked. Why doesn''t it work, and how can you fix it?**'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以下代码无法正常工作；无论点击什么都会继续。为什么它不起作用，你如何修复它？**'
- en: '[PRE9]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`QMessageBox.question()` does not return a Boolean; it returns a constant matching
    the type of button that was clicked. The actual integer value of the constant
    matching the `No` button is `65536`, which evaluates to `True` in Python. The
    code should read as follows:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`QMessageBox.question()`不返回布尔值；它返回与点击的按钮类型匹配的常量。匹配`No`按钮的常量的实际整数值是`65536`，在Python中评估为`True`。代码应该如下所示：'
- en: '[PRE10]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '**You''re building a custom dialog by subclassing `QDialog`. You need to get
    the information entered into the dialog back to the main window object. Which
    of the following approaches will not work?**'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你正在通过子类化`QDialog`来构建一个自定义对话框。你需要将对话框中输入的信息传递回主窗口对象。以下哪种方法不起作用？**'
- en: '**Pass in a mutable object and use the dialog''s `accept()` method to alter
    its values.**'
  id: totrans-118
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**传入一个可变对象，并使用对话框的`accept()`方法来改变它的值。**'
- en: '******Override the objects `accept()` method and have it return a `dict` of
    the entered values.******'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**覆盖对象的`accept()`方法，并使其返回输入值的`dict`。**'
- en: '**Override the dialog''s `accepted` signal with one that passes along a `dict`
    of the entered values. Connect this signal to a callback in your main window class.**'
  id: totrans-120
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**覆盖对话框的`accepted`信号，使其传递输入值的`dict`。将此信号连接到主窗口类中的回调。**'
- en: Answers **a** and **c** will work. Answer **b** will not work, because the return
    value of `accept` is not returned by the dialog when `exec()` is called. `exec()`
    only returns a Boolean value indicating whether the dialog was accepted or rejected.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 答案**a**和**c**都可以。答案**b**不行，因为`accept`的返回值在调用`exec()`时对话框没有返回。`exec()`只返回一个布尔值，指示对话框是被接受还是被拒绝。
- en: '**You''re writing a photo editor called SuperPhoto on Linux. You''ve written
    the code and saved the user settings, but looking in `~/.config/`, you can''t
    find `SuperPhoto.conf`. Look at the code and determine what went wrong:**'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你正在Linux上开发一个名为SuperPhoto的照片编辑器。你已经编写了代码并保存了用户设置，但是在`~/.config/`中找不到`SuperPhoto.conf`。查看代码并确定出了什么问题：**'
- en: '[PRE11]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The configuration file (or registry key, on Windows) used by `QSettings` is
    determined by the company name and app name passed in as arguments to the constructor.
    The code should read as follows:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '`QSettings`使用的配置文件（或在Windows上的注册表键）由传递给构造函数的公司名称和应用程序名称确定。代码应该如下所示：'
- en: '[PRE12]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Also, note that `sync()` doesn't need to be called explicitly. It's automatically
    called by the Qt event loop.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，注意`sync()`不需要显式调用。它会被Qt事件循环自动调用。
- en: '**You''re saving preferences from a settings dialog, but for some reason, the
    settings being saved are coming back very strangely. What is wrong here? See the
    following code:**'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你正在从设置对话框保存偏好设置，但出于某种原因，保存的设置返回的结果非常奇怪。这里有什么问题？看看以下代码：**'
- en: '[PRE13]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The problem is that you're not actually calling the accessor functions for the
    widgets. As a result, `settings` is storing a reference to the accessor function.
    On the next program launch, these are meaningless, since new objects are created
    at new memory locations. Be aware that `settings` won't complain if you save function
    references.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于你实际上没有调用小部件的访问函数。因此，`settings`存储了访问函数的引用。在下一次程序启动时，这些引用是无意义的，因为新的对象被创建在新的内存位置。请注意，如果你保存函数引用，`settings`不会抱怨。
- en: Chapter 5
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章
- en: '**Assuming we have a well-designed model-view application, is the following
    code part of a model or a view?**'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**假设我们有一个设计良好的模型-视图应用程序，以下代码是模型还是视图的一部分？**'
- en: '[PRE14]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: It's view code, since it creates a GUI element (the file dialog) and seems to
    call back to what might be a model (`self.data`).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 这是视图代码，因为它创建了一个GUI元素（文件对话框），并似乎回调到可能是一个模型的东西（`self.data`）。
- en: '**Can you name at least two things that a model should never do, and two things
    that a view should never do?**'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您能否至少列举两件模型绝对不应该做的事情，以及视图绝对不应该做的两件事情？**'
- en: Examples of things models should never do are create or directly alter GUI elements,
    format data for presentation, or close the application. Examples of things views
    should never do are save data to disk, perform transformations on the stored data
    (such as sorting or arithmetic), or read data from anything other than the model.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 模型绝对不应该做的事情的例子包括创建或直接更改GUI元素，为演示格式化数据，或关闭应用程序。视图绝对不应该做的事情的例子包括将数据保存到磁盘，对存储的数据执行转换（如排序或算术），或从模型以外的任何地方读取数据。
- en: '**`QAbstractTableModel` and `QAbstractTreeModel` both have abstract in the
    name. What does abstract mean in this context? Does it mean something different
    in C++ from what it means in Python?**'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`QAbstractTableModel`和`QAbstractTreeModel`都在名称中带有`abstract`。在这种情况下，`abstract`是什么意思？在C++中，它的含义与Python中的含义不同吗？'
- en: In any programming language, abstract classes are classes that are not intended
    to be instantiated into objects; they should only be used by subclassing them
    and overriding required methods. In Python, this is implied but not enforced;
    in C++, classes marked `abstract` will fail to instantiate.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何编程语言中，抽象类是指不打算实例化为对象的类；它们只应该被子类化，并覆盖所需的方法。在Python中，这是暗示的，但不是强制的；在C++中，标记为`abstract`的类将无法实例化。
- en: '**Which model type—list, table, or tree—would best suit the following collections
    of data?**'
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以下哪种模型类型——列表、表格或树——最适合以下数据集？**'
- en: '**The user''s recent files**'
  id: totrans-139
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**用户的最近文件**'
- en: '**A Windows registry hive**'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Windows注册表**'
- en: '**Linux `syslog` records**'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Linux `syslog`记录**'
- en: '**Blog entries**'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**博客文章**'
- en: '**Personal salutations (for example, Mr., Mrs., or Dr.)**'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**个人称谓（例如，先生，夫人或博士）**'
- en: '**Distributed version control history**'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分布式版本控制历史**'
- en: 'Although it''s debatable, the most likely answers are as follows:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有争议，但最有可能的答案如下：
- en: List
  id: totrans-146
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列表
- en: Tree
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 树
- en: Table
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表
- en: Table
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表
- en: List
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 列表
- en: Tree
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 树
- en: '**Why is the following code failing?**'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**为什么以下代码失败了？**'
- en: '[PRE15]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The argument for `rowCount()` is a `QModelIndex` object pointing to a parent
    node. It cannot be compared to an integer (`if node > 2`).
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`rowCount()`的参数是指向父节点的`QModelIndex`对象。它不能与整数进行比较（`if node > 2`）。'
- en: '**Your table model isn''t working quite right when inserting columns. What
    is wrong with your `insertColumns()` method?**'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**当插入列时，您的表模型工作不正常。您的`insertColumns()`方法有什么问题？**'
- en: '[PRE16]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: You've neglected to call `self.beginInsertColumns()` before altering the data,
    and `self.endInsertColumns()` after doing it.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在修改数据之前，您忽略了调用`self.beginInsertColumns()`，并在完成后调用`self.endInsertColumns()`。
- en: '**You would like your views to display the item data as a tooltip when hovered.
    How would you accomplish this?**'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**当鼠标悬停时，您希望您的视图显示项目数据作为工具提示。您将如何实现这一点？**'
- en: 'You need to handle `QtCore.Qt.TooltipRole` in the model''s `data()` method.
    An example of the code would be as follows:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在模型的`data()`方法中处理`QtCore.Qt.TooltipRole`。代码示例如下：
- en: '[PRE17]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Chapter 6
  id: totrans-161
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章
- en: '**You are preparing to distribute your text editor application and want to
    ensure that the user is given a monospaced font by default, no matter what platform
    they use. What two methods can you use to accomplish this?**'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您正在准备分发您的文本编辑器应用程序，并希望确保用户无论使用什么平台，都会默认获得等宽字体。您可以使用哪两种方法来实现这一点？**'
- en: The first way is to set the `styleHint` of the default font to `QtGui.QFont.Monospace`.
    The second is to find an appropriately-licensed, monospaced font, bundle it in
    a Qt Resource file, and set the font to your bundled font.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是将默认字体的`styleHint`设置为`QtGui.QFont.Monospace`。第二种方法是找到一个适当许可的等宽字体，将其捆绑到Qt资源文件中，并将字体设置为您捆绑的字体。
- en: '**As closely as possible, try to mimic the following text using `QFont`:**'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**尽可能地，尝试使用`QFont`模仿以下文本：**'
- en: '![](assets/7bcc4ce2-2313-4c4a-81c0-6897c8e32149.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7bcc4ce2-2313-4c4a-81c0-6897c8e32149.png)'
- en: 'The code is as follows:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 代码如下：
- en: '[PRE18]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**Can you explain the difference between `QImage`, `QPixmap`, and `QIcon`?**'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您能解释`QImage`，`QPixmap`和`QIcon`之间的区别吗？**'
- en: '`QPixmap` and `QImage` both represent a single image, but `QPixmap` is optimized
    for display, while `QImage` is optimized for image manipulation in memory. `QIcon`
    is not a single image, but a collection of images that can be tied to a widget
    or action''s state.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`QPixmap`和`QImage`都代表单个图像，但`QPixmap`经过优化用于显示，而`QImage`经过优化用于内存中的图像处理。`QIcon`不是单个图像，而是一组可以绑定到小部件或操作状态的图像。'
- en: '**You have defined the following `.qrc` file for your application, run `pyrcc5`,
    and imported the resource library in your script. How would you load this image
    into `QPixmap`?**'
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您已经为您的应用程序定义了以下`.qrc`文件，运行了`pyrcc5`，并在脚本中导入了资源库。如何将这个图像加载到`QPixmap`中？
- en: '[PRE19]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The code should look like this:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 代码应该如下所示：
- en: '[PRE20]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Using `QPalette`, how would you tile the background of a `QWidget` object with
    the `tile.png` image?**'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用`QPalette`，如何使用`tile.png`图像铺设`QWidget`对象的背景？**'
- en: 'The code should look like this:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 代码应该如下所示：
- en: '[PRE21]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '**You are trying to make a delete button pink using QSS, but it''s not working.
    What is wrong with your code?**'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您试图使用QSS使删除按钮变成粉色，但没有成功。您的代码有什么问题？**'
- en: '[PRE22]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'There are two problems with your code. First, your `deleteButton` does not
    have an `objectName` assigned. QSS does not know anything about your Python variable
    names; it only knows Qt object names. Second, your style sheet doesn''t prefix
    the object name with a `#` symbol. The corrected code should look like this:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 您的代码有两个问题。首先，您的`deleteButton`没有分配`objectName`。QSS对您的Python变量名称一无所知；它只知道Qt对象名称。其次，您的样式表没有使用`#`符号前缀对象名称。更正后的代码应该如下所示：
- en: '[PRE23]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**Which style sheet string will turn the background colors of your `QLineEdit` widget
    black?**'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**哪种样式表字符串将把您的`QLineEdit`小部件的背景颜色变成黑色？**'
- en: '[PRE24]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '`stylesheet1` will turn the background of any `QWidget` child class black,
    including `QLineEdit`. `stylesheet2` will only turn the background of actual `QWidget`
    objects black; child classes will remain unaffected.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '`stylesheet1`将把任何`QWidget`子类的背景变成黑色，包括`QLineEdit`。`stylesheet2`只会把实际`QWidget`对象的背景变成黑色；子类将保持不受影响。'
- en: '**Build a simple app with a combobox that allows you to change the Qt style
    to any style installed on your system. Include some other widgets so that you
    can see how they look in the different styles.**'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用下拉框构建一个简单的应用程序，允许您将Qt样式更改为系统上安装的任何样式。包括一些其他小部件，以便您可以看到它们在不同样式下的外观。**'
- en: See `question_8_answer.py` in the example code included for this chapter.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的示例代码中查看`question_8_answer.py`。
- en: '**You feel very happy about learning how to style PyQt apps and want to create
    a `QProxyStyle` class that will force all pixmaps in a GUI to be `smile.gif`.
    How would you do this? Hint: You will need to research some drawing methods of `QStyle` other than
    the ones discussed in this chapter.**'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您对学习如何为PyQt应用程序设置样式感到非常高兴，并希望创建一个`QProxyStyle`类，该类将强制GUI中的所有像素图像为`smile.gif`。您会如何做？提示：您需要研究一些`QStyle`的绘图方法，而不是本章讨论的方法。**'
- en: 'The class looks like this:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 该类如下所示：
- en: '[PRE25]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '**The following animation doesn''t work; figure out why it doesn''t work:**'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以下动画不起作用；找出为什么不起作用：**'
- en: '[PRE26]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The short answer is that `animation` should be `self.animation`. Animations
    do not have parent objects and do not get **re-parented** like widgets do when
    they're added to a layout. Hence, when the constructor exits, `animation` goes
    out of scope and gets destroyed. The moral of the story is, save your animations
    as instance variables.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 简短的答案是`animation`应该是`self.animation`。动画没有父对象，当它们被添加到布局时，它们不会像小部件一样被**重新父化**。因此，当构造函数退出时，`animation`就会超出范围并被销毁。故事的寓意是，保存您的动画作为实例变量。
- en: Chapter 7
  id: totrans-192
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章
- en: '**Using `QSoundEffect`, you''ve written a utility for a call center that allows
    them to review recorded phone calls. They''re moving to a new phone system that
    stores the audio calls as MP3 files. Do you need to make any changes to your utility?**'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用`QSoundEffect`，您为呼叫中心编写了一个实用程序，允许他们回顾录制的电话呼叫。他们正在转移到一个新的电话系统，该系统将电话呼叫存储为MP3文件。您需要对您的实用程序进行任何更改吗？**'
- en: Yes. You'll need to use `QMediaPlayer` instead of `QSoundEffect`, or write a
    layer to decode the MP3 to WAV, because `QSoundEffect` cannot play compressed
    audio.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 是的。您需要使用`QMediaPlayer`而不是`QSoundEffect`，或者编写一个解码MP3到WAV的层，因为`QSoundEffect`无法播放压缩音频。
- en: '`cool_songs` **is a Python list containing path strings to your favorite songs.
    What do you need to do to play these songs back in a random order**?'
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`cool_songs`是一个Python列表，其中包含您最喜欢的歌曲的路径字符串。要以随机顺序播放这些歌曲，您需要做什么？'
- en: 'You need to convert the paths into `QUrl` objects, add them to `QMediaPlaylist`,
    set `playbackMode` to `Random`, then pass it to `QMediaPlayer`. The code looks
    like this:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要将路径转换为`QUrl`对象，将它们添加到`QMediaPlaylist`，将`playbackMode`设置为`Random`，然后将其传递给`QMediaPlayer`。代码如下：
- en: '[PRE27]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '**You have installed the `audio/mpeg` codec on your system, but the following
    code isn''t working. Find out what''s wrong with it:**'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您已在系统上安装了`audio/mpeg`编解码器，但以下代码不起作用。找出其中的问题：**'
- en: '[PRE28]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '`QAudioRecorder` doesn''t have a `setCodec` method. The codec used in the recording
    is set on the `QAudioEncoderSettings` object. The code should read as follows:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`QAudioRecorder`没有`setCodec`方法。录制中使用的编解码器设置在`QAudioEncoderSettings`对象上设置。代码应该如下所示：'
- en: '[PRE29]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '**Run `audio_test.py` and `video_test.py` on several different Windows, macOS,
    and Linux systems. How is the output different? Are there any items supported
    across all systems?**'
  id: totrans-202
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在几个不同的Windows、macOS和Linux系统上运行`audio_test.py`和`video_test.py`。输出有什么不同？有哪些项目在所有系统上都受支持？
- en: The answers will depend on the systems you choose.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 答案将取决于您选择的系统。
- en: '**The properties of the `QCamera` class include several control objects, which
    allow you to manage different aspects of the camera. One of these is `QCameraFocus`.
    Investigate `QCameraFocus` in the Qt documentation at [https://doc.qt.io/qt-5/qcamerafocus.html](https://doc.qt.io/qt-5/qcamerafocus.html) and
    write a simple script that shows a viewfinder and lets you adjust the digital
    zoom.**'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`QCamera`类的属性包括几个控制对象，允许您管理相机的不同方面。其中之一是`QCameraFocus`。在Qt文档中查看`QCameraFocus`，并编写一个简单的脚本，显示取景器并让您调整数字变焦。'
- en: See `question_5_example_code.py` in the included code examples.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含的代码示例中查看`question_5_example_code.py`。
- en: '**You''ve noticed the audio being recorded to your Captain''s Log video log
    is quite loud. You want to add a control to adjust it; how would you do this?**'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您已经注意到录制到您的船长日志视频日志中的音频相当响亮。您想添加一个控件来调整它；您会如何做？**'
- en: '`QMediaRecorder` has a `volume()` slot, just like `QAudioRecorder`. You need
    to create a `QSlider` (or any other control widget) and connect its `valueChanged`
    or `sliderMoved` signal to the recorder''s `volume()` slot.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '`QMediaRecorder`有一个`volume()`插槽，就像`QAudioRecorder`一样。您需要创建一个`QSlider`（或任何其他控件小部件），并将其`valueChanged`或`sliderMoved`信号连接到录制器的`volume()`插槽。'
- en: '**Implement a dock widget in `captains_log.py` that allows you to control as
    many aspects of the audio and video recording as you can. You can include things
    such as the focus, zoom, exposure, white balance, framerate, resolution, audio
    volume, audio quality, and more.**'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在`captains_log.py`中实现一个停靠窗口小部件，允许您控制尽可能多的音频和视频录制方面。您可以包括焦点、缩放、曝光、白平衡、帧速率、分辨率、音频音量、音频质量等内容。**'
- en: You're on your own here!
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 这里就靠你自己了！
- en: Chapter 8
  id: totrans-210
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章
- en: '**You are designing an application that will emit a status message to the local
    network, which you will monitor with administrator tools. What kind of socket
    object would be a good choice?**'
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您正在设计一个应用程序，该应用程序将向本地网络发出状态消息，您将使用管理员工具进行监控。哪种类型的套接字对象是一个不错的选择？**'
- en: '`QUdpSocket` would be best here, since it allows for broadcasting packets,
    and the status packets do not need the overhead of TCP.'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里最好使用`QUdpSocket`，因为它允许广播数据包，并且状态数据包不需要TCP的开销。
- en: '**Your GUI class has a `QTcpSocket` object called `self.socket`. You''ve connected
    its `readyRead` signal to the following method, but it''s not working. What''s
    happening, and how can you fix it?**'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的GUI类有一个名为`self.socket`的`QTcpSocket`对象。您已经将其`readyRead`信号连接到以下方法，但它没有起作用。发生了什么，您该如何修复它？
- en: '[PRE30]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '`QTcpSocket` does not have a `hasPendingDatagrams()` or `readDatagram()` method.
    TCP sockets work with data streams, not datagrams. This method needs to be rewritten
    to extract data using a `QDataStream` object.'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`QTcpSocket`没有`hasPendingDatagrams()`或`readDatagram()`方法。TCP套接字使用数据流而不是数据包。这个方法需要重写以使用`QDataStream`对象提取数据。'
- en: '**Use `QTcpServer` to implement a simple service that listens on port `8080` and
    prints any requests received. Make it reply to the client with a byte string of
    your choice.**'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`QTcpServer`实现一个简单的服务，监听端口`8080`并打印接收到的任何请求。让它用您选择的字节字符串回复客户端。
- en: See `question_3_tcp_server.py` in the example code. Test it by running the script
    and pointing a web browser to [http://localhost:8080](http://localhost:8080).
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例代码中查看`question_3_tcp_server.py`。通过运行脚本并将Web浏览器指向[http://localhost:8080](http://localhost:8080)来进行测试。
- en: '**You''re creating a download function for your application to retrieve a large
    data file for import into your application. The code does not work. Read the code
    and decide what you''re doing wrong:**'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您正在为应用程序创建一个下载函数，以便检索一个大型数据文件以导入到您的应用程序中。代码不起作用。阅读代码并决定您做错了什么：
- en: '[PRE31]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: You're trying to use `QNetworkAccessManager.get()` synchronously, but it is
    designed to be used asynchronously. Instead of retrieving a reply object from
    `get()`, you need to connect a callback to the network access manager's `finished`
    signal, which carries the finished reply with it.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 您试图同步使用`QNetworkAccessManager.get()`，但它是设计用于异步使用的。您需要连接一个回调到网络访问管理器的`finished`信号，而不是从`get()`中检索回复对象，它携带完成的回复。
- en: '**Modify your `poster.py` script so that it sends the key-value data as JSON,
    rather than HTTP form data.**'
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改您的`poster.py`脚本，以便将键值数据发送为JSON，而不是HTTP表单数据。
- en: See the `question_5_json_poster.py` file in the example code.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例代码中查看`question_5_json_poster.py`文件。
- en: Chapter 9
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章
- en: '**Compose an SQL `CREATE` statement that builds a table to hold television
    schedule listings. Make sure it has fields for the date, time, channel, and program
    name. Also, make sure it has a primary key and constraints to prevent nonsensical
    data (such as two shows at the same time on the same channel, or a show with no
    time or date).**'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编写一个SQL `CREATE`语句，用于构建一个表来保存电视节目表。确保它具有日期、时间、频道和节目名称的字段。还要确保它具有主键和约束，以防止无意义的数据（例如在同一频道上同时播放两个节目，或者一个节目没有时间或日期）。
- en: 'An example might look like this:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 一个示例可能如下所示：
- en: '[PRE32]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '**The following SQL query is returning a syntax error; can you fix it?**'
  id: totrans-227
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下SQL查询返回语法错误；您能修复它吗？
- en: '[PRE33]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'There are several problems here:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个问题：
- en: '`DELETE` does not take a field list, so `*` must be removed.'
  id: totrans-230
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DELETE`不接受字段列表，因此必须删除`*`。'
- en: '`IF` is the wrong keyword. It should use `WHERE`.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`IF`是错误的关键字。它应该使用`WHERE`。'
- en: '`==` is not an SQL operator. Unlike Python, SQL uses a single `=` for both
    assignment and comparison operations.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`==`不是SQL运算符。与Python不同，SQL使用单个`=`进行赋值和比较操作。'
- en: 'The resulting SQL should read as follows:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的SQL应该如下所示：
- en: '[PRE34]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '**The following SQL query doesn''t work correctly; can you fix it?**'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下SQL查询不正确；您能修复它吗？
- en: '[PRE35]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Each set of parentheses in the `VALUES` clause represents a single row. Since
    we are only inserting one column, each row should have only one value in it. Hence,
    our statement should look like this:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`VALUES`子句中的每组括号表示一行。由于我们只插入一列，每行应该只有一个值。因此，我们的语句应该如下所示：'
- en: '[PRE36]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '**The documentation for `QSqlDatabase` can be found at [https://doc.qt.io/qt-5/qsqldatabase.html](https://doc.qt.io/qt-5/qsqldatabase.html).
    Read up on how you can work with multiple database connections, for example, a
    read-only and read/write connection to the same database. How would you create
    two connections and make specific queries to each?**'
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`QSqlDatabase`的文档可以在[https://doc.qt.io/qt-5/qsqldatabase.html](https://doc.qt.io/qt-5/qsqldatabase.html)找到。详细了解如何使用多个数据库连接，例如对同一数据库进行只读和读写连接。您将如何创建两个连接并对每个连接进行特定的查询？'
- en: 'The key is to call `addDatabase()` multiple times with unique connection names;
    an example is as follows:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是多次使用唯一连接名称调用`addDatabase()`；一个示例如下：
- en: '[PRE37]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '**Using `QSqlQuery`, write code to safely insert the data in the `dict` object
    into the `coffees` table:**'
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`QSqlQuery`，编写代码将`dict`对象中的数据安全地插入`coffees`表中：
- en: '[PRE38]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To be safe, we''ll use the `prepare()` method of `QSqlQuery`:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 为了安全起见，我们将使用`QSqlQuery`的`prepare()`方法：
- en: '[PRE39]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '**You''ve created a `QSqlTableModel` object and attached it to `QTableView`.
    You know there is data in the table, but it is not showing in the view. Look at
    the code and decide what is wrong:**'
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您已经创建了一个`QSqlTableModel`对象，并将其附加到`QTableView`。您知道表中有数据，但在视图中没有显示。查看代码并决定问题出在哪里：
- en: '[PRE40]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: You have not called `select()` on your model. Until you do so, it will be empty.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 您没有在模型上调用`select()`。在这样做之前，它将是空的。
- en: '**The following is a callback attached to the `textChanged` signal of `QLineEdit`.
    Explain why this is not a good idea:**'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是附加到`QLineEdit`的`textChanged`信号的回调。解释为什么这不是一个好主意：
- en: '[PRE41]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The problem here is that you're taking arbitrary user input and passing it to
    a table model's `filter()` string. This string is appended literally to the table
    model's internal SQL query, opening up your database to SQL injection. To make
    this safe, you would need to take steps to sanitize `text` or switch the SQL table
    model for a `QSqlQueryModel` and use `prepare()` to create a prepared statement.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于您正在接受任意用户输入并将其传递给表模型的`filter()`字符串。这个字符串被直接附加到表模型的内部SQL查询中，从而使您的数据库容易受到SQL注入。为了使其安全，您需要采取措施来清理`text`或切换SQL表模型以使用`prepare()`来创建一个准备好的语句。
- en: '**You decide you''d rather have colors than names in the roasts comboboxes
    in your coffee list. What changes would you need to make to accomplish this?**'
  id: totrans-252
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您决定在您的咖啡列表的烘焙组合框中使用颜色而不是名称。为了实现这一点，您需要做出哪些改变？
- en: You would need to change the display field used by the `QSqlRelation` set on
    `roast_id` to `color`. Then, you would need to create a custom delegate for `coffee_list`
    that creates color icons (see [Chapter 6](c3eb2567-0e73-4c37-9a9e-a0e2311e106c.xhtml),
    *Styling Qt Applications*) and uses them instead of text labels in the combobox.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要更改`roast_id`上设置的`QSqlRelation`所使用的显示字段为`color`。然后，您需要为`coffee_list`创建一个自定义委托，用于创建颜色图标（参见[第6章](c3eb2567-0e73-4c37-9a9e-a0e2311e106c.xhtml)，*Qt应用程序的样式*）并在组合框中使用它们而不是文本标签。
- en: Chapter 10
  id: totrans-254
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章
- en: '**Create code to call the `self.every_ten_seconds()` method every ten seconds.**'
  id: totrans-255
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建代码以每十秒调用`self.every_ten_seconds()`方法。
- en: 'Assuming we''re in the `__init__()` method of a class, it looks like this:'
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们在一个类的`__init__()`方法中，它看起来像这样：
- en: '[PRE42]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '**The following code uses `QTimer` incorrectly. Can you fix it?**'
  id: totrans-258
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码错误地使用了`QTimer`。你能修复它吗？
- en: '[PRE43]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '`QTimer` is being used synchronously with the `while` loop. This creates blocking
    code. The same can be done asynchronously, like so:'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: '`QTimer`与`while`循环同步使用。这会创建阻塞代码。可以异步完成相同的操作，如下所示：'
- en: '[PRE44]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '**You''ve created the following word-counting worker class and want to move
    it to another thread to prevent large documents from slowing the GUI. It''s not
    working, however; what do you need to change about this class?**'
  id: totrans-262
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您创建了以下计算单词数的工作类，并希望将其移动到另一个线程以防止大型文档减慢GUI。但是，它没有工作；您需要对这个类做出哪些改变？
- en: '[PRE45]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'The class relies on accessing a widget through a common parent because the
    `Worker` class must be parented by the GUI class containing the widget. You''ll
    need to change this class so that the following applies:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 该类依赖于通过共同的父级访问小部件，因为`Worker`类必须由包含小部件的GUI类作为父级。您需要更改此类，使以下内容适用：
- en: It doesn't have a parent widget.
  id: totrans-265
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它没有父小部件。
- en: It accesses the content some other way, such as through a slot.
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它以其他方式访问内容，比如通过一个槽。
- en: '**The following code is blocking, rather than running in a separate thread.
    Why is this so?**'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码是阻塞的，而不是在单独的线程中运行。为什么会这样？
- en: '[PRE46]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The button callback is pointed at `Worker.run()`. It should point to the `start()`
    method of the `QThread` object.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮回调指向`Worker.run()`。它应该指向`QThread`对象的`start()`方法。
- en: '**Will this worker class run correctly? If not, why?**'
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个工作类会正确运行吗？如果不会，为什么？
- en: '[PRE47]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: No. `QRunnable` objects cannot emit signals, because they do not descend from
    `QObject` or have an event loop. You would be better off using `QThread`, in this
    case.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 不，`QRunnable`对象不能发出信号，因为它们不是从`QObject`继承的，也没有事件循环。在这种情况下，最好使用`QThread`。
- en: '**The following code is a `run()` method from a `QRunnable` class designed
    for processing large data file output from scientific equipment. The files consist
    of millions of long rows of space-delimited numbers. Is this code likely to be
    slowed down by the Python GIL? Could you make it less likely that the GIL will
    interfere?**'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码是一个`QRunnable`类的`run()`方法，用于处理来自科学设备的大型数据文件输出。文件由数百万行空格分隔的数字组成。这段代码可能会被Python
    GIL减慢吗？您能使GIL干扰的可能性更小吗？
- en: '[PRE48]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: Reading in the file is an I/O-bound operation, which does not require acquiring
    the GIL. However, doing mathematical calculations and type conversions is a CPU-bound
    task and will require the acquisition of the GIL. This could be mitigated by doing
    the calculations in a non-Python math library, such as NumPy.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 读取文件是一个I/O绑定的操作，不需要获取GIL。但是，进行数学计算和类型转换是一个CPU绑定的任务，需要获取GIL。这可以通过在非Python数学库（如NumPy）中进行计算来减轻。
- en: '**The following is a `run()` method from `QRunnable` in a multithreaded TCP
    Server application you''re writing. All threads share a server socket instance
    accessed through `self.datastream`. This code is not thread-safe, though. What
    do you need to do to fix it?**'
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是你正在编写的多线程TCP服务器应用程序中`QRunnable`中的`run()`方法。所有线程共享通过`self.datastream`访问的服务器套接字实例。但是，这段代码不是线程安全的。你需要做什么来修复它？
- en: '[PRE49]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Since you don''t want two threads writing to the data stream at the same time,
    you''ll want to use `QMutex` to ensure that only one thread has access. After
    defining a shared mutex objected called `qmutex`, the code would look like this:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 由于您不希望两个线程同时写入数据流，您将希望使用`QMutex`来确保只有一个线程可以访问。在定义了一个名为`qmutex`的共享互斥对象之后，代码将如下所示：
- en: '[PRE50]'
  id: totrans-279
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Chapter 11
  id: totrans-280
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第11章
- en: '**The following HTML isn''t displaying like you wanted. Find as many errors
    as you can:**'
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下HTML显示不像您想要的那样。找出尽可能多的错误：
- en: '[PRE51]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'There are several errors here:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有几个错误：
- en: The `<thead>` section is missing a `<tr>` tag around the cells.
  id: totrans-284
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<thead>`部分缺少围绕单元格的`<tr>`标签。'
- en: In the next row, the second cell is missing the opening `<td>` tag.
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在下一行中，第二个单元格缺少开放的`<td>`标签。
- en: Also, there's no `text-color` attribute. It's just `color`.
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 另外，没有`text-color`属性。它只是`color`。
- en: In the next row, the first cell is missing a closing `</td>` tag.
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在下一行中，第一个单元格缺少闭合的`</td>`标签。
- en: Also, there's no `text-style` attribute. The text should just be wrapped in
    a `<b>` tag.
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 还有没有`text-style`属性。文本应该只是用`<b>`标签包装起来。
- en: '**What is wrong with the following Qt HTML snippets?**'
  id: totrans-289
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下Qt HTML片段有什么问题？
- en: '[PRE52]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'The problems are as follows:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 问题如下：
- en: The last two closing tags are switched. Nested tags must be closed before the
    outer tags.
  id: totrans-292
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后两个闭合标签被切换了。嵌套标签必须在外部标签之前关闭。
- en: There is no such tag as `<row>` or `<data>`. The correct tags should be `<tr>`
    and `<td>`, respectively.
  id: totrans-293
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有`<row>`或`<data>`这样的标签。正确的标签应该分别是`<tr>`和`<td>`。
- en: There are two problems—`<font>` has no `family` attribute, and it should be
    `face`; also, there is no `<strikethrough>` tag, and it should be `<s>`.
  id: totrans-294
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有两个问题——`<font>`没有`family`属性，应该是`face`；另外，没有`<strikethrough>`标签，应该是`<s>`。
- en: Qt doesn't support the `<label>` or `<input>` tags. Also, `<input>` does not
    use a closing tag.
  id: totrans-295
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Qt不支持`<label>`或`<input>`标签。此外，`<input>`不使用闭合标签。
- en: '`<img>` has no `source` attribute; it should be `src`. It also does not use
    a closing tag and cannot enclose text content.'
  id: totrans-296
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`<img>`没有`source`属性；它应该是`src`。它也没有使用闭合标签，也不能包含文本内容。'
- en: '**This snippet is supposed to implement a table of contents. Why doesn''t it
    work right?**'
  id: totrans-297
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**这段代码应该实现一个目录。为什么它不能正常工作？**'
- en: '[PRE53]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'This is not how document anchors work. The correct code is as follows:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是文档锚点的工作方式。正确的代码如下：
- en: '[PRE54]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Note the pound sign (`#`) before `href`, indicating that this is an internal
    anchor, and the `<a>` tags above the sections, with a `name` attribute containing
    the section name (without the pound sign!).
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意`href`前面的井号(`#`)，表示这是一个内部锚点，以及上面的`<a>`标签，其中包含一个包含部分名称的`name`属性（不包括井号！）。
- en: '**Using `QTextCursor`, you need to add a sidebar on the right-hand side of
    your document. Explain how you would go about this.**'
  id: totrans-302
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用`QTextCursor`，您需要在文档的右侧添加一个侧边栏。解释一下您将如何做到这一点。**'
- en: 'The steps to do this are as follows:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做的步骤如下：
- en: Create a `QTextFrameFormat` object
  id: totrans-304
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`QTextFrameFormat`对象
- en: Configure your frame format's `position` property to float right
  id: totrans-305
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将框架格式的`position`属性配置为右浮动
- en: Position your text cursor in the root frame
  id: totrans-306
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文本光标定位在根框中
- en: Call `insertFrame()` on your cursor with the frame object as the first argument
  id: totrans-307
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在光标上调用`insertFrame()`，并将框架对象作为第一个参数
- en: Insert the sidebar contents using cursor insert methods
  id: totrans-308
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用光标插入方法插入侧边栏内容
- en: '**You are trying to create a document with `QTextCursor`. It should have a
    top and bottom frame; in the top frame, there should be a title, and in the bottom
    frame, an unordered list. Correct this code so that it does that:**'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您正在尝试使用`QTextCursor`创建一个文档。它应该有一个顶部和底部框架；在顶部框架中，应该有一个标题，在底部框架中，应该有一个无序列表。请更正此代码，使其实现这一点：**'
- en: '[PRE55]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'The main problem with this code is that it fails to move the cursor correctly,
    so content is not being created in the right spots. This is the corrected code:'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码的主要问题在于它未能正确移动光标，因此内容没有被创建在正确的位置。以下是更正后的代码：
- en: '[PRE56]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '**You''re creating your own `QPrinter` subclass to add a signal when the page
    size changes. Will the following code work?**'
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您正在创建自己的`QPrinter`子类以在页面大小更改时添加信号。以下代码会起作用吗？**'
- en: '[PRE57]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Unfortunately, it won''t. Since `QPrinter` is not derived from `QObject`, it
    cannot have signals. You will get an error like this:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，不会。因为`QPrinter`不是从`QObject`派生的，所以它不能有信号。您将会收到这样的错误：
- en: '[PRE58]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: '**`QtPrintSupport` contains a class called `QPrinterInfo`. Using this class,
    print a list of the names, make and model, and default page size of all of the
    printers on your system.**'
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**`QtPrintSupport`包含一个名为`QPrinterInfo`的类。使用这个类，在您的系统上打印出所有打印机的名称、制造商和型号以及默认页面大小的列表。**'
- en: 'The code looks like this:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 代码如下：
- en: '[PRE59]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Chapter 12
  id: totrans-320
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第12章
- en: '**Add code to this method to write your name in blue on the bottom of the picture:**'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在这个方法中添加代码，以在图片底部用蓝色写下您的名字：**'
- en: '[PRE60]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: 'Your code will need to create `QPainter` and `QPen`, then write to the image:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 您的代码将需要创建`QPainter`和`QPen`，然后写入图像：
- en: '[PRE61]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '**Given a `QPainter` object called `painter`, write a line of code to paint
    an 80 × 80 pixel octagon in the upper-left corner of the painter''s paint device.
    Refer to the documentation at [https://doc.qt.io/qt-5/qpainter.html#drawPolygon](https://doc.qt.io/qt-5/qpainter.html#drawPolygon).**'
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**给定一个名为`painter`的`QPainter`对象，写一行代码在绘图设备的左上角绘制一个80×80像素的八边形。参考[https://doc.qt.io/qt-5/qpainter.html#drawPolygon](https://doc.qt.io/qt-5/qpainter.html#drawPolygon)中的文档。**'
- en: 'There are a few ways to create and draw a polygon, but the simplest is to pass
    a series of `QPoint` objects to `drawPolygon()`:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种方法可以创建和绘制多边形，但最简单的方法是将一系列`QPoint`对象传递给`drawPolygon()`：
- en: '[PRE62]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: Of course, you could also use a `QPainterPath` object, as well.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您也可以使用`QPainterPath`对象。
- en: '**You''re creating a custom widget and can''t figure out why the text is showing
    up in black. The following is your `paintEvent()` method; see if you can figure
    out the problem:**'
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您正在创建一个自定义小部件，但不知道为什么文本显示为黑色。以下是您的`paintEvent()`方法；看看您能否找出问题所在：**'
- en: '[PRE63]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: The problem is that you've set `brush`, but the text is drawn with a `pen`.
    The default pen is black. To fix this, create a `pen` set to white and pass it
    to `painter.setPen()` before drawing the text.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于您设置了`brush`，但文本是用`pen`绘制的。默认的笔是黑色。要解决这个问题，创建一个设置为白色的`pen`，并在绘制文本之前将其传递给`painter.setPen()`。
- en: '**A deep-fried meme is a style of meme that uses extreme compression, saturation,
    and other processing to make the meme image look intentionally low quality. Add
    a feature to your meme generator to optionally make the meme deep-fried. Some
    things you can try include reducing the color bit depth and adjusting the hue
    and saturation of the colors in the image.**'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**油炸模因是一种使用极端压缩、饱和度和其他处理方式的模因风格，使模因图像看起来故意低质量。向您的模因生成器添加一个功能，可选择使模因油炸。您可以尝试的一些方法包括减少颜色位深度和调整图像中颜色的色调和饱和度。**'
- en: Be creative here, but for an example, see the `question_4_example_code.py` file
    in the included source code.
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里要有创意，但是可以参考附带源代码中的`question_4_example_code.py`文件。
- en: '**You''d like to animate a circle moving horizontally across the screen. What
    do you need to change in the following code to animate the circle?**'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您想要对一个圆进行水平移动的动画。在以下代码中，您需要改变什么才能使圆形动起来？**'
- en: '[PRE64]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: Your `circle` object cannot be animated as it is, since it is a `QGraphicsItem`.
    To animate an object's properties with `QPropertyAnimation`, it must be a `QObject`
    descendant. You need to build your circle as a subclass of `QGraphicsObject`;
    then, you can animate it.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 您的`circle`对象不能像现在这样进行动画处理，因为它是一个`QGraphicsItem`。要使用`QPropertyAnimation`对对象的属性进行动画处理，它必须是`QObject`的后代。您需要将您的圆构建为`QGraphicsObject`的子类；然后，您可以对其进行动画处理。
- en: '**What''s wrong with the following code, which attempts to set up `QPainter` with
    a gradient brush?**'
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以下代码有什么问题，它试图使用渐变刷设置`QPainter`？**'
- en: '[PRE65]'
  id: totrans-338
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: 'There are two problems here:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有两个问题：
- en: The first argument to `setColorAt` is not a pixel location, but rather, it's
    a percentage expressed as a float between `0` and `1`.
  id: totrans-340
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`setColorAt`的第一个参数不是像素位置，而是一个表示为浮点数的百分比，介于`0`和`1`之间。'
- en: There is no `QPainter.setGradient()` method. The gradient must be passed into
    the `QPainter` constructor.
  id: totrans-341
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有`QPainter.setGradient()`方法。渐变必须传递到`QPainter`构造函数中。
- en: '**See if you can implement some of the following improvements to the game we
    created:**'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 看看你是否可以实现以下游戏改进：
- en: '**Pulsating bullets**'
  id: totrans-343
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 脉动子弹
- en: '**Explosions when a tank is hit**'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 击中坦克时爆炸
- en: '**Sounds (see [Chapter 7](0234c71b-292c-4423-89d7-e9d9906d730e.xhtml), *Working
    with Audio-Visual Using QtMultimedia*, for help here)**'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 声音（参见[第7章](0234c71b-292c-4423-89d7-e9d9906d730e.xhtml)，*使用QtMultimedia处理音频-视觉*，在这里寻求帮助）
- en: '**Background animation**'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 背景动画
- en: '**Multiple bullets**'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多个子弹
- en: You're own your own here. Have fun!
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 你自己来吧。玩得开心！
- en: Chapter 13
  id: totrans-349
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章
- en: '**Which steps of the OpenGL render pipeline are user-definable? Which steps must be
    defined in order to render anything? You may need to reference the documentation
    at [https://www.khronos.org/opengl/wiki/Rendering_Pipeline_Overview](https://www.khronos.org/opengl/wiki/Rendering_Pipeline_Overview).**'
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: OpenGL渲染管线的哪些步骤是可用户定义的？为了渲染任何东西，必须定义哪些步骤？你可能需要参考[https://www.khronos.org/opengl/wiki/Rendering_Pipeline_Overview](https://www.khronos.org/opengl/wiki/Rendering_Pipeline_Overview)上的文档。
- en: The vertex processing and fragment shader steps are user-definable. At a minimum,
    you must create a vertex shader and a fragment shader. Optional steps include
    the geometry shader and tessellation steps, which are part of vertex processing.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 顶点处理和片段着色器步骤是可用户定义的。至少，你必须创建一个顶点着色器和一个片段着色器。可选步骤包括几何着色器和镶嵌步骤，这些步骤是顶点处理的一部分。
- en: '**You''re writing a shader for an OpenGL 2.1 program. Does the following look
    correct?**'
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你正在为一个OpenGL 2.1程序编写着色器。以下看起来正确吗？
- en: '[PRE66]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: Your version string is wrong. It should read `#version 120`, since it specifies
    the version of GLSL, not the version of OpenGL. Versions are also specified as
    a three-digit number with no period.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 你的版本字符串是错误的。它应该是`#version 120`，因为它指定了GLSL的版本，而不是OpenGL的版本。版本也被指定为一个没有句号的三位数。
- en: '**Is the following a vertex or fragment shader? How can you tell?**'
  id: totrans-355
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下是顶点着色器还是片段着色器？你如何判断？
- en: '[PRE67]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'This is a vertex shader; there are a couple of clues:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个顶点着色器；有一些线索：
- en: It has an attribute variable, which it assigns to `gl_Position`.
  id: totrans-358
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有一个属性变量，它分配给`gl_Position`。
- en: It has a varying variable to which it's assigning values.
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有一个可变变量，它正在分配值。
- en: '**Given the following vertex shader, what code do you need to write to assign
    simple values to the two variables?**'
  id: totrans-360
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给定以下顶点着色器，你需要写什么代码来为这两个变量分配简单的值？
- en: '[PRE68]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Assuming that your `QOpenGLShaderProgram` object is saved as `self.program`,
    the following code is needed:'
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你的`QOpenGLShaderProgram`对象保存为`self.program`，需要以下代码：
- en: '[PRE69]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '**You enable face culling to save some processing power, but find that several
    of the visible primitives in your drawing are not rendering now. What could be
    the problem?**'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你启用面剔除以节省一些处理能力，但发现你的绘图中的几何体没有渲染。可能出了什么问题？
- en: The vertices were drawn in the wrong order. Remember that drawing a primitive
    counterclockwise will cause the far face to be culled; drawing it clockwise will
    cause the near face to be culled.
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: 顶点被以错误的顺序绘制。记住，逆时针绘制一个基元会导致远处的面被剔除；顺时针绘制会导致近处的面被剔除。
- en: '**What does the following code do to our OpenGL image?**'
  id: totrans-366
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码对我们的OpenGL图像做了什么？
- en: '[PRE70]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: By itself, nothing. This code simply creates a 4 x 4 matrix and runs some transform
    operations on it. If, however, we passed this into a shader that applied its values
    to a vertex, it would create a perspective projection, move our object in space,
    and rotate the image. The actual `matrix` object is nothing more than a matrix
    of numbers.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 单独来看，什么也没有。这段代码只是创建一个4x4矩阵，并对其进行一些变换操作。然而，如果我们将其传递到一个应用其值到顶点的着色器中，它将创建一个透视投影，将我们的对象移动到空间中，并旋转图像。实际的`matrix`对象只不过是一组数字的矩阵。
- en: '**Experiment with the demo and see whether you can add any of the following
    features:**'
  id: totrans-369
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尝试演示，并看看你是否可以添加以下功能中的任何一个：
- en: '**A more interesting shape (pyramid, cube, and so on)**'
  id: totrans-370
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个更有趣的形状（金字塔、立方体等）
- en: '**More controls for moving the object**'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动对象的更多控件
- en: '**Shadows and lighting effects**'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阴影和光效果
- en: '**Animating shape changes in the object**'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在对象中动画形状的变化
- en: You're on your own here!
  id: totrans-374
  prefs: []
  type: TYPE_NORMAL
  zh: 你自己来吧！
- en: Chapter 14
  id: totrans-375
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第14章
- en: '**Consider the following descriptions of datasets. What style of chart would
    you suggest for each?**'
  id: totrans-376
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑以下数据集的描述。你会为每个建议哪种图表样式？
- en: '**Web server hit counts by date**'
  id: totrans-377
  prefs:
  - PREF_UL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按日期的Web服务器点击次数
- en: '**Sales figures by salesperson per month**'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个销售人员每月的销售数据
- en: '**Percentages of support tickets for the past year by company department**'
  id: totrans-379
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 去年各公司部门支持票的百分比
- en: '**The yield of a plot of bean plants against the plant''s height, for several
    hundred plants**'
  id: totrans-380
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 豆类植物的产量与植物的高度的图表，几百个植物
- en: 'The answers are subjective, but the author suggests the following:'
  id: totrans-381
  prefs: []
  type: TYPE_NORMAL
  zh: 答案是主观的，但作者建议以下内容：
- en: A line or spline chart, as it would illustrate traffic trends
  id: totrans-382
  prefs:
  - PREF_OL
  - PREF_OL
  type: TYPE_NORMAL
  zh: 线图或样条线图，因为它可以说明交通趋势
- en: A bar or stacked by chart, as this would allow you to compare salespeople over
    time
  id: totrans-383
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 条形图或堆叠图，因为这样可以让你比较销售人员的销售情况
- en: A pie chart, since it represents a set of percentages adding up to 100
  id: totrans-384
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 饼图，因为它代表一组百分比加起来等于100
- en: A scatter plot, since you want to show a general trend of a large set of data
  id: totrans-385
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 散点图，因为你想展示大量数据的一般趋势
- en: '**Which chart component has not been configured in the following code, and
    what will the result be?**'
  id: totrans-386
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码中哪个图表组件尚未配置，结果会是什么？
- en: '[PRE71]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: The axes have not been configured. This chart can be displayed, but will not
    have reference marks on the axes, and may not be scaled intuitively.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 轴尚未配置。此图表可以显示，但轴上将没有参考标记，并且可能无法直观地进行缩放。
- en: '**What''s wrong with the following code?**'
  id: totrans-389
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码有什么问题？
- en: '[PRE72]'
  id: totrans-390
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '`QChart` is not a widget and cannot be added to a layout or set as a central
    widget. It must be attached to `QChartView`.'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: '`QChart`不是一个小部件，不能添加到布局或设置为中央小部件。它必须附加到`QChartView`。'
- en: '**You want to create a bar chart comparing Bob and Alice''s sales figures for
    the quarter. What code needs to be added? (Note that axes are not required here.):**'
  id: totrans-392
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你想创建一个比较Bob和Alice季度销售额的柱状图。需要添加什么代码？（注意这里不需要轴。）**'
- en: '[PRE73]'
  id: totrans-393
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: 'We need to create bar sets for Bob and Alice and append them to the series:'
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要为Bob和Alice创建柱状图，并将它们附加到系列中：
- en: '[PRE74]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '**Given a `QChart` object named `chart`, write code so that the chart has a
    black background and blue data plots.**'
  id: totrans-396
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**给定一个名为`chart`的`QChart`对象，编写代码使图表具有黑色背景和蓝色数据图。**'
- en: 'To do this, set the `backgroundBrush` and `theme` properties:'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，设置`backgroundBrush`和`theme`属性：
- en: '[PRE75]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '**Style the other two charts in the system monitor script using the techniques
    you used on the last chart. Experiment with different brushes and pens, and see
    whether you can find other properties to set.**'
  id: totrans-399
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**使用你在上一个图表中使用的技术来为系统监视器脚本中的另外两个图表设置样式。尝试不同的画刷和笔，看看是否可以找到其他需要设置的属性。**'
- en: You're on your own here!
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在是自己一个人了！
- en: '**`QPolarChart` is a subclass of `QChart` that allows you to construct a polar
    chart. Investigate the use of the polar chart in the Qt documentation and see
    whether you can create a polar chart of an appropriate dataset.**'
  id: totrans-401
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**`QPolarChart`是`QChart`的一个子类，允许你构建极坐标图。查阅Qt文档中关于极坐标图的使用，并看看你是否可以创建一个适当数据集的极坐标图。**'
- en: You're on your own here!
  id: totrans-402
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在是自己一个人了！
- en: '**`psutil.cpu_percent()` takes an optional argument, `percpu`, that will create
    a list of values showing usage information per CPU core. Update your application
    to use this option and separately display each CPU core''s activity on one chart****.**'
  id: totrans-403
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**`psutil.cpu_percent()`接受一个可选参数`percpu`，它将创建一个显示每个CPU核心使用信息的值列表。更新你的应用程序以使用这个选项，并分别在一个图表上显示每个CPU核心的活动。**'
- en: You're still on your own here; don't worry, though, you can do it!
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在还是自己一个人；不过别担心，你可以做到的！
- en: Chapter 15
  id: totrans-405
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第15章
- en: '**You have just bought a Raspberry Pi with Raspbian preinstalled to run your
    PyQt5 application. When you try to run your application, you get an error trying
    to import `QtNetworkAuth`, which your application depends on. What is likely the
    problem?**'
  id: totrans-406
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你刚刚购买了一个预装了Raspbian的树莓派来运行你的PyQt5应用程序。当你尝试运行你的应用程序时，你会遇到一个错误，试图导入`QtNetworkAuth`，而你的应用程序依赖于它。可能的问题是什么？**'
- en: Possibly, your Raspbian installation is version 9\. Version 9 has Qt 5.7, which
    does not have the `QtNetworkAuth` module. You need to upgrade to a newer release
    of Raspbian.
  id: totrans-407
  prefs: []
  type: TYPE_NORMAL
  zh: 可能你的Raspbian安装版本是9。版本9具有Qt 5.7，其中没有`QtNetworkAuth`模块。你需要升级到更新的Raspbian版本。
- en: '**You have written a PyQt frontend for a legacy scanner device. Your code talks
    to the scanner through a proprietary driver utility called `scanutil.exe`. It
    is currently running on a Windows 10 PC, but your employer wants to save money
    by moving it to a Raspberry Pi. Is this a good idea?**'
  id: totrans-408
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你为一个传统扫描仪设备编写了一个PyQt前端。你的代码通过一个名为`scanutil.exe`的专有驱动程序实用程序与扫描仪通信。它目前在Windows
    10 PC上运行，但你的雇主希望通过将其移植到树莓派来节省成本。这是一个好主意吗？**'
- en: Unfortunately, it isn't. If your application relies on a proprietary Windows
    x86 binary, that program will not run on the Pi. To switch to the Pi, you would
    need a binary compiled for the ARM platform that can run on one of the Pi's supported
    operating systems (also, that OS needs to be able to run Python and Qt).
  id: totrans-409
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，不是这样。如果你的应用程序依赖于专有的Windows x86二进制文件，那么该程序将无法在树莓派上运行。要切换到树莓派，你需要一个为ARM平台编译的二进制文件，可以在树莓派支持的操作系统之一上运行（此外，该操作系统需要能够运行Python和Qt）。
- en: '**You''ve acquired a new sensor and want to try it out with the Raspberry Pi.
    It has three connections, labeled Vcc, GND, and Data. How would you connect this
    to the Raspberry Pi? Is there more information you need?**'
  id: totrans-410
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你已经获得了一个新的传感器，并想要用树莓派试验它。它有三个连接，标有Vcc、GND和Data。你将如何将其连接到树莓派？你还需要更多的信息吗？**'
- en: 'You really need more information, but here''s enough to get started:'
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 你真的需要更多的信息，但这里有足够的信息让你开始：
- en: '**Vcc** is an abbreviation that means input voltage. You will have to connect
    this to either a 5V or 3V3 pin on the Pi. You will need to consult the manufacturer''s
    documentation to determine which connection will work.'
  id: totrans-412
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vcc**是输入电压的缩写。你将不得不将其连接到树莓派上的5V或3V3引脚。你需要查阅制造商的文档，以确定哪种连接方式可行。'
- en: '**GND** means ground, and you can connect this to any ground pin on the Pi.'
  id: totrans-413
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GND**意味着地线，你可以将其连接到树莓派上的任何地线引脚。'
- en: '**Data** is presumably a connection you would want to make to one of the programmable
    GPIO pins. It''s very likely that, you''ll need some kind of library to make it
    work, so you should check with the manufacturer for that.'
  id: totrans-414
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Data**可能是你想要连接到可编程GPIO引脚之一的连接。很可能你需要某种库来使其工作，所以你应该向制造商咨询。'
- en: '**You''re trying to light an LED connected to the fourth GPIO pin from the
    left on the outside. What is wrong with this code?**'
  id: totrans-415
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你试图点亮连接到树莓派左侧第四个GPIO引脚的LED。这段代码有什么问题？**'
- en: '[PRE76]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: The GPIO pin mode is set to `BCM`, which means you have the wrong number for
    the pin you're using. Set the mode to `BOARD` or use the correct BCM number for
    your pin (`14`).
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: GPIO引脚模式设置为`BCM`，这意味着你使用的引脚号错误。将模式设置为`BOARD`，或者使用正确的BCM引脚号（`14`）。
- en: '**You are trying to dim an LED connected to GPIO pin `12`. Does this code work?**'
  id: totrans-418
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你试图调暗连接到GPIO引脚`12`的LED。这段代码有效吗？**'
- en: '[PRE77]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: 'This code doesn''t work, because pins can only be either on or off. To simulate
    half voltage, you need to use pulse width modulation, as shown in the following
    example:'
  id: totrans-420
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码不起作用，因为引脚只能是开或关。要模拟半电压，你需要使用脉冲宽度调制，就像下面的例子中所示：
- en: '[PRE78]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '**You have a motion sensor with a data pin that goes `HIGH` when motion is
    detected. It''s connected to pin `8`. The following is your driver code:**'
  id: totrans-422
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**你有一个带有数据引脚的运动传感器，当检测到运动时会变为`HIGH`。它连接到引脚`8`。以下是你的驱动代码：**'
- en: '[PRE79]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '**Your main window class creates a `MotionSensor` object and connects its `detection` signal
    to a callback method. However, nothing is being detected. What is missing?**'
  id: totrans-424
  prefs: []
  type: TYPE_NORMAL
  zh: '**你的主窗口类创建了一个`MotionSensor`对象，并将其`detection`信号连接到一个回调方法。然而，没有检测到任何东西。缺少了什么？**'
- en: You are not calling `MotionSensor.check()`. You should implement polling by
    adding a `QTimer` object that calls `check()` periodically.
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 您没有调用`MotionSensor.check()`。您应该通过添加一个调用`check()`的`QTimer`对象来实现轮询。
- en: '**Combine the two circuits in this chapter in a creative way; for example,
    you might create a light that changes color depending on the humidity and temperature.**'
  id: totrans-426
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以创造性的方式结合本章中的两个电路；例如，您可以创建一个根据湿度和温度改变颜色的灯。**'
- en: You're on your own here!
  id: totrans-427
  prefs: []
  type: TYPE_NORMAL
  zh: 这里就靠你自己了！
- en: Chapter 16
  id: totrans-428
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第16章
- en: '**The following code is giving you an attribute error; what''s wrong?**'
  id: totrans-429
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以下代码给出了一个属性错误；怎么了？**'
- en: '[PRE80]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: You want to import `QtWebEngineWidgets`, not `QtWebEngine`. The latter is for
    use with Qt's QML frontend.
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 您想要导入`QtWebEngineWidgets`，而不是`QtWebEngine`。后者用于与Qt的QML前端一起使用。
- en: '**The following code should connect this `UrlBar` class with `QWebEngineView`, so
    that the entered URL is loaded when the *return*/*Enter *key is pressed. It doesn''t
    work, though; what is wrong?**'
  id: totrans-432
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以下代码应该将`UrlBar`类与`QWebEngineView`连接起来，以便在按下*返回*/*Enter*键时加载输入的URL。但是它不起作用；怎么了？**'
- en: '[PRE81]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '`QWebEngineView.load()` requires a `QUrl` object, not a string. The `url_request`
    signal sends the text of the bar as a string directly to `load()`. It should wrap
    it in a `QUrl` object first.'
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: '`QWebEngineView.load()`需要一个`QUrl`对象，而不是一个字符串。`url_request`信号将栏的文本作为字符串直接发送到`load()`。它应该首先将其包装在`QUrl`对象中。'
- en: '**What is the result of the following code?**'
  id: totrans-435
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**以下代码的结果是什么？**'
- en: '[PRE82]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '`QWebEngineView.createWindow()` is called whenever a browser action requests
    a new tab or window to be created, and is expected to return a `QWebEngineView`
    object, which will be used for the new window or tab. By returning `self`, this
    subclass forces any links or calls that try to create a new window to just navigate
    in the same window, instead.'
  id: totrans-437
  prefs: []
  type: TYPE_NORMAL
  zh: 每当浏览器操作请求创建新的选项卡或窗口时，都会调用`QWebEngineView.createWindow()`，并且预计返回一个`QWebEngineView`对象，该对象将用于新窗口或选项卡。通过返回`self`，这个子类强制任何尝试创建新窗口的链接或调用只是在同一个窗口中导航。
- en: '**Check out the documentation for `QWebEngineView` at [https://doc.qt.io/qt-5/qwebengineview.html](https://doc.qt.io/qt-5/qwebengineview.html).
    How would you implement a zoom feature in your browser?**'
  id: totrans-438
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**查看[https://doc.qt.io/qt-5/qwebengineview.html](https://doc.qt.io/qt-5/qwebengineview.html)上的`QWebEngineView`文档。您将如何在浏览器中实现缩放功能？**'
- en: 'First, you''d need to implement callback functions on the `MainWindow` to set
    the `zoomFactor` property on the current web view:'
  id: totrans-439
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要在`MainWindow`上实现回调函数，以设置当前Web视图的`zoomFactor`属性：
- en: '[PRE83]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: 'Then, in `MainWindow.__init__()`, you would just need to create controls to
    call those methods:'
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在`MainWindow.__init__()`中，您只需要创建控件来调用这些方法：
- en: '[PRE84]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '**As the name implies, `QWebEngineView` represents the view portion of a model-view
    architecture. What class represents the model in this design?**'
  id: totrans-443
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**顾名思义，`QWebEngineView`表示模型-视图架构中的视图部分。在这个设计中，哪个类代表模型？**'
- en: '`QWebEnginePage` seems to be the clearest candidate here, since it stores and
    controls the rendering of the web content.'
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '`QWebEnginePage`似乎是这里最清晰的候选者，因为它存储和控制Web内容的呈现。'
- en: '**Given a `QWebEngineView` named `webview`, write code to determine whether
    JavaScript is enabled on `webview`.**'
  id: totrans-445
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**给定名为`webview`的`QWebEngineView`，编写代码来确定`webview`上是否启用了JavaScript。**'
- en: 'The code must query the view''s `QWebEngineSettings` object, like this:'
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 代码必须查询视图的`QWebEngineSettings`对象，就像这样：
- en: '[PRE85]'
  id: totrans-447
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '**You saw in our browser example that `runJavaScript()` can pass an integer
    value to a callback function. Write a simple demo script to test what other kinds
    of JavaScript objects can be returned, and how they appear in Python cod**e.'
  id: totrans-448
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您在我们的浏览器示例中看到`runJavaScript()`可以将整数值传递给回调函数。编写一个简单的演示脚本来测试可以返回哪些其他类型的JavaScript对象，以及它们在Python代码中的显示方式。**'
- en: See `chapter_7_return_value_test.py` in the example code.
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例代码中查看`chapter_7_return_value_test.py`。
- en: Chapter 17
  id: totrans-450
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第17章
- en: '**You have written a PyQt application in a file called `Scan & Print Tool-box.py`.
    You want to convert this into module-style organization; what change should you
    make?**'
  id: totrans-451
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您已经在名为`Scan & Print Tool-box.py`的文件中编写了一个PyQt应用程序。您想将其转换为模块样式的组织；您应该做出什么改变？**'
- en: The name of the script should change, since spaces, ampersands, and dashes are
    not valid characters to use in a Python module name. You might change the module
    name to `scan_and_print_toolbox`, for example.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本的名称应该更改，因为空格、和符号和破折号不是Python模块名称中使用的有效字符。例如，您可以将模块名称更改为`scan_and_print_toolbox`。
- en: '**Your PyQt5 database application has a set of `.sql` files containing queries
    used by the application. It worked when your app was a single script in the same
    directories as the `.sql` files, but now that you''ve converted it into module-style
    organization, the queries can''t be found. What should you do?**'
  id: totrans-453
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**您的PyQt5数据库应用程序有一组包含应用程序使用的查询的`.sql`文件。当您的应用程序是与`.sql`文件在同一个目录中的单个脚本时，它可以工作，但是现在您已经将其转换为模块样式的组织，就无法找到查询。你应该怎么办？**'
- en: The best thing to do is to put your `.sql` files into a Qt resource file and
    make that part of your Python module. If you are unable to use Qt resource files,
    you will need to convert your relative paths to absolute paths using the `path`
    module and the built-in `file` variable
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 最好的做法是将您的`.sql`文件放入Qt资源文件中，并将其作为Python模块的一部分。如果无法使用Qt资源文件，您将需要使用`path`模块和内置的`file`变量将相对路径转换为绝对路径
- en: '**You''re writing a detailed `README.rst` file to document your new application
    before uploading it to a code-sharing site. What characters should be used to
    underline your level 1, 2, and 3 headings, respectively?**'
  id: totrans-455
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在将新应用程序上传到代码共享站点之前，您正在编写一个详细的`README.rst`文件来记录您的新应用程序。分别应该使用哪些字符来标记您的一级、二级和三级标题？**'
- en: 'It actually doesn''t matter, as long as you use characters from the list of
    acceptable characters:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上并不重要，只要使用可接受字符列表中的字符即可：
- en: '[PRE86]'
  id: totrans-457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: An RST interpreter should consider the first header character encountered to
    mean level one; the second, level two; and the third, level three.
  id: totrans-458
  prefs: []
  type: TYPE_NORMAL
  zh: RST解释器应该考虑遇到的第一个标题字符表示一级；第二个表示二级；第三个表示三级。
- en: '**You''re creating a `setup.py` script for your project so that you can upload
    it to PyPI. You would like to include a URL for the project''s FAQ page. How can
    you accomplish this?**'
  id: totrans-459
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您正在为您的项目创建一个`setup.py`脚本，以便您可以将其上传到PyPI。您想要包括项目的FAQ页面的URL。您该如何实现这一点？
- en: 'You need to add a `key: value` pair to the `project_urls` dict, like so:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: '您需要向`project_urls`字典中添加一个`key: value`对，就像这样：'
- en: '[PRE87]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: '**You have specified `include_package_data=True` in your `setup.py` file, but
    for some reason, the `docs` folder is not being included in your distribution
    package. What''s wrong?**'
  id: totrans-462
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您在`setup.py`文件中指定了`include_package_data=True`，但由于某种原因，`docs`文件夹没有包含在您的分发包中。出了什么问题？
- en: '`include_package_data` only affects data files inside packages (modules). If
    you want to include files outside your modules, you need to use the `MANIFEST.in`
    file for these.'
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: '`include_package_data`只影响包（模块）内的数据文件。如果您想要包括模块外的文件，您需要使用`MANIFEST.in`文件。'
- en: '**You ran `pyinstaller fight_fighter3.py` to package your new game as an executable.
    Something went wrong, though; where can you find a log of the build process?**'
  id: totrans-464
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您运行了`pyinstaller fight_fighter3.py`来将您的新游戏打包为可执行文件。不过出了些问题；您可以在哪里找到构建过程的日志？
- en: You need to look at `build/fight_fighter3/warn-fight_fighter3.txt`, for a start.
    You might need to increase the debugging output by calling PyInstaller with the
    `--log-level DEBUG` argument.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，您需要查看`build/fight_fighter3/warn-fight_fighter3.txt`。您可能需要通过使用`--log-level
    DEBUG`参数调用PyInstaller来增加调试输出。
- en: '**Despite the name, PyInstaller cannot actually generate installer programs
    or packages for your application. Research some options for your platform of choice.**'
  id: totrans-466
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 尽管名字是这样，但PyInstaller实际上不能生成安装程序或包来安装您的应用程序。研究一些适合您平台的选项。
- en: You're on your own here, although a popular option is the **Nullsoft Scriptable
    Install System** (**NSIS**).
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要自己解决这个问题，尽管一个流行的选项是**Nullsoft Scriptable Install System**（**NSIS**）。
