- en: Handling Emails Using Python Scripting
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python脚本处理电子邮件
- en: In this chapter, you'll learn about how to use Python scripts to handle emails.
    You'll learn about the email message format. We're going to explore the `smtplib`
    module for sending and receiving emails. We're going to use the Python email package
    to send emails with attachments and HTML contents. You'll also learn about the
    different protocols used to handle emails.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习如何使用Python脚本处理电子邮件。您将学习电子邮件消息格式。我们将探索`smtplib`模块用于发送和接收电子邮件。我们将使用Python电子邮件包发送带有附件和HTML内容的电子邮件。您还将学习用于处理电子邮件的不同协议。
- en: 'In this chapter, you''ll learn about the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将学习以下内容：
- en: Email message format
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件消息格式
- en: Adding HTML and multimedia content
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加HTML和多媒体内容
- en: POP3 and IMAP servers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: POP3和IMAP服务器
- en: Email message format
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电子邮件消息格式
- en: 'In this section, we''re going to learn about the email message format. Email
    messages consist of three primary components:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习电子邮件消息格式。电子邮件消息由三个主要组件组成：
- en: The receiver's email address
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接收者的电子邮件地址
- en: The sender's email address
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发件人的电子邮件地址
- en: The message
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息
- en: There are other components also included in the message format, such as the
    subject line, email signatures, and attachments.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 消息格式中还包括其他组件，如主题行、电子邮件签名和附件。
- en: 'Now, we''re going to see a simple example of sending a plain text email from
    your Gmail address, in which you''ll learn about writing an email message and
    sending it. Now, create a script, `write_email_message.py`, and write the following
    content in it:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看一个简单的例子，从您的Gmail地址发送纯文本电子邮件，在其中您将学习如何编写电子邮件消息并发送它。现在，请创建一个名为`write_email_message.py`的脚本，并在其中编写以下内容：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Run the script and you''ll get the following output:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the preceding example, we used the `smtplib` Python module to send an email.
    Make sure you're sending an email from a Gmail ID to the receiver. The `sender`
    variable saves the sender's email address. In the `password` variable, you can
    either enter your password or you can prompt for a password using the `getpass`
    module. Here, we prompt for the password. Next, we created a variable named `msg`,
    which will be our actual email message. In that, we first mentioned a subject
    and then the message we want to send. Then, in `login()`, we mentioned the `sender`
    and `password` variables. Next, in `sendmail()`, we mentioned the `sender`, `receivers`,
    and `text` variables. So, using this process, we sent the email successfully.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们使用了`smtplib` Python模块来发送电子邮件。确保您从Gmail ID向接收者发送电子邮件。`sender`变量保存了发件人的电子邮件地址。在`password`变量中，您可以输入密码，或者您可以使用`getpass`模块提示输入密码。在这里，我们提示输入密码。接下来，我们创建了一个名为`msg`的变量，这将是我们实际的电子邮件消息。在其中，我们首先提到了一个主题，然后是我们想要发送的消息。然后，在`login()`中，我们提到了`sender`和`password`变量。接下来，在`sendmail()`中，我们提到了`sender`，`receivers`和`text`变量。因此，通过这个过程，我们成功地发送了电子邮件。
- en: Adding HTML and multimedia content
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加HTML和多媒体内容
- en: In this section, we're going to see how we can send multimedia content as an
    attachment and how we can add HTML content. To do this, we'll use the Python `email`
    package.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将看到如何将多媒体内容作为附件发送以及如何添加HTML内容。为此，我们将使用Python的`email`包。
- en: 'First, we''ll see how we can add HTML content. For that, create a script, `add_html_content.py`,
    and write the following content in it:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将看如何添加HTML内容。为此，请创建一个名为`add_html_content.py`的脚本，并在其中编写以下内容：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Run the script and you''ll get the following output:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE3]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the preceding example, we used the email package to send HTML content as
    a message through a Python script. We created a `msg` variable in which we stored
    HTML content.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们使用了电子邮件包通过Python脚本发送HTML内容作为消息。我们创建了一个`msg`变量，其中存储了HTML内容。
- en: 'Now, we''ll see how we can add an attachment and send it through a Python script.
    For that, create a script, `add_attachment.py`, and write the following content
    in it:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看如何添加附件并通过Python脚本发送它。为此，请创建一个名为`add_attachment.py`的脚本，并在其中编写以下内容：
- en: '[PRE4]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Run the script and you''ll get the output as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，您将得到以下输出：
- en: '[PRE5]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In the preceding example, we sent an image as an attachment to the receiver.
    We mentioned the sender's and receiver's email IDs. Next, in `f_path`, we mentioned
    the path of the image that we're sending as an attachment. Next, we send that
    image as an attachment to the receiver.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，我们将一张图片作为附件发送给接收者。我们提到了发件人和收件人的电子邮件ID。接下来，在`f_path`中，我们提到了我们要发送的图片的路径。接下来，我们将该图片作为附件发送给接收者。
- en: POP3 and IMAP servers
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: POP3和IMAP服务器
- en: In this section, you'll learn about receiving emails via POP and IMAP servers.
    Python offers the `poplib` and `imaplib` libraries for receiving emails via Python
    scripts.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何通过POP和IMAP服务器接收电子邮件。Python提供了`poplib`和`imaplib`库，用于通过Python脚本接收电子邮件。
- en: Receiving email using the poplib library
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用poplib库接收电子邮件
- en: '**POP3** stands for **Post Office Protocol version 3**. This standard protocol
    helps you receive emails from a remote server to our local machine. The main advantage
    of POP3 is that it allows us to download emails on to our local machine and read
    the downloaded emails offline.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**POP3**代表**邮局协议第3版**。这个标准协议帮助您从远程服务器接收电子邮件到我们的本地计算机。POP3的主要优势在于它允许我们将电子邮件下载到本地计算机上，并离线阅读已下载的电子邮件。'
- en: 'The POP3 protocol works on two ports:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: POP3协议在两个端口上运行：
- en: 'Port `110`: The default non-encrypted port'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口`110`：默认的非加密端口
- en: 'Port `995`: The encrypted port'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口`995`：加密端口
- en: 'Now, we''ll see some examples. First, we''ll see an example where we get a
    number of emails. For that, create a script, `number_of_emails.py`, and write
    the following content in it:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看一些例子。首先，我们将看一个例子，其中我们收到了一些电子邮件。为此，请创建一个名为`number_of_emails.py`的脚本，并在其中编写以下内容：
- en: '[PRE6]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Run the script, as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，如下所示：
- en: '[PRE7]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As output, you'll get however many emails are present in your mailbox.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 作为输出，您将得到邮箱中存在的电子邮件数量。
- en: In the preceding example, first we're importing the `poplib` library, which
    is used in Python for the POP3 protocol to receive an email securely. Then, we
    state the specific email server and our email credentials—that is, our username
    and password. After that, we print the response message from the server and provide
    the username and password to the POP3 SSL server. After login, we get mailbox
    stats and print them to the Terminal in the form of a number of emails.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，首先我们导入了`poplib`库，该库用于Python的POP3协议，以安全地接收电子邮件。然后，我们声明了特定的电子邮件服务器和我们的电子邮件凭据，即我们的用户名和密码。之后，我们打印来自服务器的响应消息，并向POP3
    SSL服务器提供用户名和密码。登录后，我们获取邮箱统计信息并将其以电子邮件数量的形式打印到终端。
- en: 'Now, we''re going to write a script to get the latest email. For that, create
    a script, `latest_email.py`, and write the following content in it:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将编写一个脚本来获取最新的电子邮件。为此，请创建一个名为`latest_email.py`的脚本，并在其中编写以下内容：
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Run the script, as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，如下所示：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: As output, you'll get the latest mail you received in your mailbox.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 作为输出，您将获得您收件箱中收到的最新邮件。
- en: In the preceding example, we imported the `poplib` library used in Python to
    supply the POP3 protocol to receive an email securely. After stating the specific
    email server and the username and password, we printined the response message
    from the server and providing the username and password to the POP3 SSL server.
    Then, we're fetching the latest email from the mailbox.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，我们导入了用于Python的`poplib`库，以安全地提供POP3协议以接收电子邮件。在声明了特定的电子邮件服务器和用户名和密码之后，我们打印了来自服务器的响应消息，并向POP3
    SSL服务器提供了用户名和密码。然后，我们从邮箱中获取了最新的电子邮件。
- en: 'Now, we''re going to write a script to get all of the emails. For that, create
    a script, `all_emails.py`, and write the following content in it:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将编写一个脚本来获取所有的电子邮件。为此，请创建一个名为`all_emails.py`的脚本，并在其中编写以下内容：
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Run the script, as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，如下所示：
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: As output, you'll get all of the emails you've received in your mailbox.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 作为输出，您将获得您收件箱中收到的所有电子邮件。
- en: Receiving email using the imaplib library
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用imaplib库接收电子邮件
- en: IMAP stands for Internet Message Access Protocol. It's used to access emails
    on a remote server through your local machine. IMAP allows simultaneous access
    by multiple clients to your email. IMAP is more suitable when you access your
    email via different locations.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: IMAP代表Internet消息访问协议。它用于通过本地计算机访问远程服务器上的电子邮件。IMAP允许多个客户端同时访问您的电子邮件。当您通过不同位置访问电子邮件时，IMAP更适用。
- en: 'The IMAP protocol works on two ports:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: IMAP协议在两个端口上运行：
- en: 'Port `143`: The default non-encrypted port'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口`143`：默认非加密端口
- en: 'Port `993`: The encrypted port'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口`993`：加密端口
- en: 'Now, we''re going to see an example using the `imaplib` library. Create a script,
    `imap_email.py`, and write the following content in it:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将看到使用`imaplib`库的示例。创建一个名为`imap_email.py`的脚本，并在其中编写以下内容：
- en: '[PRE12]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Run the script, as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 运行脚本，如下所示：
- en: '[PRE13]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: As output, you'll get all of the emails from the specified folder.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 作为输出，您将获得指定文件夹中的所有电子邮件。
- en: In the preceding example, first, we're importing the `imaplib` library, which
    is used in Python to receive an email securely via the IMAP protocol. Then, we
    state the specific email server and our user credentials—that is, our username
    and password. After that, we provide that username and password to the IMAP SSL
    server. We're using the `'select('Inbox')'` function over `imap_obj` to display
    messages in the inbox. Then we use a `for` loop to display messages that have
    been fetched one by one. To display messages, we use "pretty print"—that is, the
    `pprint.pprint()`function-because it formats your object, writes it into the data
    stream, and passes it as an argument. Then, finally, the connection is closed.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，首先我们导入了`imaplib`库，该库用于Python通过IMAP协议安全地接收电子邮件。然后，我们声明了特定的电子邮件服务器和我们的用户凭据，即我们的用户名和密码。之后，我们向IMAP
    SSL服务器提供了用户名和密码。我们使用`'select('Inbox')'`函数在`imap_obj`上显示收件箱中的消息。然后，我们使用`for`循环逐个显示已获取的消息。为了显示消息，我们使用“pretty
    print”——即`pprint.pprint()`函数——因为它会格式化您的对象，将其写入数据流，并将其作为参数传递。最后，连接被关闭。
- en: Summary
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about how to write an email message in a Python
    script. We also learned about the Python `smtplib` module, which is used for sending
    and receiving emails via Python scripts. We also learned about how to receive
    emails through POP3 and IMAP protocols. Python supplies the `poplib` and `imaplib`
    libraries with which we can perform tasks.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在Python脚本中编写电子邮件消息。我们还学习了Python的`smtplib`模块，该模块用于通过Python脚本发送和接收电子邮件。我们还学习了如何通过POP3和IMAP协议接收电子邮件。Python提供了`poplib`和`imaplib`库，我们可以使用这些库执行任务。
- en: In the next chapter, you'll learn about Telnet and SSH.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将学习有关Telnet和SSH的知识。
- en: Questions
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: What are POP3 and IMAP?
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: POP3和IMAP是什么？
- en: What are break and continue used for? Give an appropriate example.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: break和continue分别用于什么？给出一个适当的例子。
- en: What is pprint?
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: pprint是什么？
- en: What are negative indexes and why are they used?
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 什么是负索引，为什么要使用它们？
- en: What is the difference between the `pyc` and `py` file extensions?
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`pyc`和`py`文件扩展名之间有什么区别？'
- en: 'Generate following pattern using looping''s:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用循环生成以下模式：
- en: '[PRE14]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
