- en: Interactive Financial Analytics with the VIX
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 与VIX一起进行交互式金融分析
- en: Investors use volatility derivatives to diversify and hedge their risk in equity
    and credit portfolios. Since long-term investors in equity funds are exposed to
    downside risk, volatility can be used as a hedge for the tail risk and replacement
    for the put options. In the United States, the **Chicago Board Options Exchange**
    (**CBOE**)** Volatility Index** (**VIX**), or simply called the **VIX**, measures
    the short-term volatility implied by S&P 500 stock index options with an average
    expiration of 30 days. Many people around the world use the VIX to measure stock
    market volatility over the next 30-day period. In Europe, the equivalent volatility
    counterpart indicator is the **EURO STOXX 50 Volatility** (**VSTOXX**) **Market
    Index**. For benchmark strategies utilizing the S&P 500 Index, the nature of its
    negative correlation with the VIX presents a viable way of avoiding benchmark-rebalancing
    costs. The statistical nature of volatility allows traders to perform mean-reverting
    strategies, dispersion trading, and volatility spread trading, among others.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 投资者使用波动率衍生品来分散和对冲他们在股票和信用组合中的风险。由于股票基金的长期投资者面临下行风险，波动率可以用作尾部风险的对冲和看涨期权的替代品。在美国，芝加哥期权交易所（CBOE）的波动率指数（VIX），或简称VIX，衡量了具有平均到期日为30天的标准普尔500股票指数期权隐含的短期波动率。世界各地许多人使用VIX来衡量未来30天的股票市场波动性。在欧洲，等效的波动率对应指标是EURO
    STOXX 50波动率（VSTOXX）市场指数。对于利用S&P 500指数的基准策略，其与VIX的负相关性的性质提供了一种可行的方式来避免基准再平衡成本。波动性的统计性质允许交易员执行均值回归策略、离散交易和波动性价差交易等策略。
- en: In this chapter, we will take a look at how to perform data analytics on the
    VIX and the S&P 500 Index. Using the S&P 500 Index options, we can reconstruct
    the VIX and compare them with the observed values. The code presented here runs
    on the Jupyter Notebook, the interactive component of Python, to help us visualize
    data and study relationships between them.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将看看如何对VIX和S&P 500指数进行数据分析。使用S&P 500指数期权，我们可以重建VIX并将其与观察值进行比较。这里呈现的代码在Jupyter
    Notebook上运行，这是Python的交互式组件，可以帮助我们可视化数据并研究它们之间的关系。
- en: 'In this chapter, we will discuss the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论以下主题：
- en: An introduction to the EURO STOXX 50 index, VSTOXX, and the VIX
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍EURO STOXX 50指数、VSTOXX和VIX
- en: Performing financial analytics on the S&P 500 Index and the VIX
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对S&P 500指数和VIX进行金融分析
- en: Step-by-step reconstruction of the VIX index in accordance with the CBOE VIX
    white paper
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据CBOE VIX白皮书逐步重建VIX指数
- en: Finding near-term and next-term options of the VIX index
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 寻找VIX指数的近期和次期期权
- en: Determining strike price boundaries of options datasets
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确定期权数据集的行权价边界
- en: Tabulating contributions to the VIX by strike prices
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过行权价对VIX的贡献进行制表
- en: Calculating forward levels of near-term and next-term options
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算近期和次期期权的远期水平
- en: Calculating volatility values of near-term and next-term options
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 计算近期和次期期权的波动率值
- en: Calculating multiple VIX indexes at once
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 同时计算多个VIX指数
- en: Comparing the results of the calculated index with the actual S&P 500 Index
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将计算出的指数结果与实际的标准普尔500指数进行比较
- en: Volatility derivatives
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 波动率衍生品
- en: The two most popular volatility indexes worldwide are the VIX and VSTOXX, which
    are available in the United States and Europe respectively. The VIX is based on
    the S&P 500 Index that is disseminated on the CBOE. While the VIX is not traded
    directly, derivative products of the VIX such as options, futures, exchange-traded
    funds, and a host of volatility-based securities are available to investors. The
    CBOE website provides comprehensive information on many options and market indices
    such as the S&P 500 standard and weekly options, and the VIX, which we can analyze.
    We begin by understanding the background of these products before performing financial
    analytics on them in the later sections of this chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 全球最受欢迎的两个波动率指数是VIX和VSTOXX，分别在美国和欧洲可用。VIX基于标准普尔500指数，在CBOE上发布。虽然VIX本身不进行交易，但VIX的衍生产品，如期权、期货、交易所交易基金和一系列基于波动性的证券可供投资者选择。CBOE网站提供了许多期权和市场指数的全面信息，如标准普尔500标准和周期期权，以及我们可以分析的VIX。在本章的后面部分，我们将首先了解这些产品的背景，然后进行金融分析。
- en: STOXX and the Eurex
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: STOXX和Eurex
- en: In the United States, the S&P 500 Index is one of the most widely watched stock
    market indexes, created by Standard & Poor's Dow Jones Indices. In Europe, one
    such company is STOXX Limited.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在美国，标准普尔500指数是最广泛关注的股票市场指数之一，由标准普尔道琼斯指数创建。在欧洲，STOXX有限公司是这样一家公司。
- en: Formed in 1997, STOXX Limited is headquartered in Zurich, Switzerland and calculates
    approximately 7,000 indices globally. As an index provider, it develops, maintains,
    distributes, and markets a comprehensive range of indices that are known to be
    strictly rule-based and transparent.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 成立于1997年，STOXX有限公司总部位于瑞士苏黎世，在全球计算大约7000个指数。作为一个指数提供商，它开发、维护、分发和推广一系列严格基于规则和透明的指数。
- en: 'STOXX provides a number of equity indices in these categories: benchmark indices,
    blue-chip indices, dividend indices, size indices, sector indices, style indices,
    optimized indices, strategy indices, theme indices, sustainability indices, faith-based
    indices, smart beta indices, and calculation products.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: STOXX在这些类别提供了许多股票指数：基准指数、蓝筹股指数、股息指数、规模指数、行业指数、风格指数、优化指数、策略指数、主题指数、可持续性指数、信仰指数、智能贝塔指数和计算产品。
- en: The Eurex Exchange is a derivatives exchange in Frankfurt, Germany offering
    more than 1,900 products, including equity indices, futures, options, ETFs, dividends,
    bonds, and repos. Many of STOXX's products and derivatives trade on the Eurex.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: Eurex交易所是德国法兰克福的衍生品交易所，提供超过1900种产品，包括股票指数、期货、期权、交易所交易基金、股息、债券和回购。STOXX的许多产品和衍生品在Eurex上交易。
- en: The EURO STOXX 50 Index
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EURO STOXX 50指数
- en: 'Designed by STOXX Limited, the EURO STOXX 50 Index is one of the most liquid
    stock indexes worldwide, serving many indices products listed on the Eurex. It
    was introduced on February 26, 1998 and is made up of 50 blue-chip stocks from
    the 12 Eurozone countries: Austria, Belgium, Finland, France, Germany, Greece,
    Ireland, Italy, Luxembourg, the Netherlands, Portugal, and Spain. The EURO STOXX
    50 Index futures and options contracts are available and traded on the Eurex Exchange.
    Recalculation of the index takes place typically every 15 seconds based on real-time
    prices.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 由STOXX有限公司设计，EURO STOXX 50指数是全球最流动的股票指数之一，服务于Eurex上列出的许多指数产品。它于1998年2月26日推出，由来自奥地利、比利时、芬兰、法国、德国、希腊、爱尔兰、意大利、卢森堡、荷兰、葡萄牙和西班牙的50只蓝筹股组成。EURO
    STOXX 50指数期货和期权合约可在Eurex交易所上交易。指数每15秒基于实时价格重新计算一次。
- en: The ticker symbol for the EURO STOXX 50 Index is SX5E. EURO STOXX 50 Index Options
    take on the ticker symbol OESX.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: EURO STOXX 50指数的股票代码是SX5E。EURO STOXX 50指数期权的股票代码是OESX。
- en: The VSTOXX
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VSTOXX
- en: The VSTOXX or EURO STOXX 50 Volatility is a class of volatility derivatives
    serviced by the Eurex Exchange. The VSTOXX Market Index is based on the market
    prices of a basket of OESX quoted **at the money** or **out of the money**. It
    measures the implied market volatility over the next 30 days on the EURO STOXX
    50 Index.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: VSTOXX或EURO STOXX 50波动率是由Eurex交易所提供服务的一类波动率衍生品。VSTOXX市场指数基于一篮子OESX报价的平价或虚价。它衡量了未来30天在EURO
    STOXX 50指数上的隐含市场波动率。
- en: Investors use volatility derivatives for benchmark strategies utilizing the
    EURO STOXX 50 Index; the nature of its negative correlation with the VSTOXX presents
    a viable way of avoiding benchmark-rebalancing costs. The statistical nature of
    volatility allows traders to perform mean-reverting strategies, dispersion trading,
    and volatility spread trading, among others. Recalculation of the index takes
    place every 5 seconds.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 投资者利用波动率衍生品进行基准策略，利用EURO STOXX 50指数的负相关性，可以避免基准再平衡成本。波动率的统计性质使交易员能够执行均值回归策略、离散交易和波动率价差交易等。指数每5秒重新计算一次。
- en: The ticker symbol for the VSTOXX is V2TX. VSTOXX Options and VSTOXX Mini Futures
    based on the VSTOXX Index trade on the Eurex Exchange.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: VSTOXX的股票代码是V2TX。基于VSTOXX指数的VSTOXX期权和VSTOXX迷你期货在Eurex交易所交易。
- en: The S&P 500 Index
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标普500指数
- en: The history of the **S&P 500 Index** (**SPX**) dates all the way back to 1923,
    where it was then known as the **Composite Index**. Initially, it tracked a small
    number of stocks. In 1957, the number of tracked stocks expanded to 500, and became
    the SPX.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 标普500指数（SPX）的历史可以追溯到1923年，当时它被称为综合指数。最初，它跟踪了少量股票。1957年，跟踪的股票数量扩大到500只，并成为了SPX。
- en: Stocks that make up the SPX are publicly listed on the **New York Stock Exchange**
    (**NYSE**) or the **National Association of Securities Dealers Automated Quotations**
    (**NASDAQ**). The index is considered as a leading representation of the United
    States economy through large cap common stocks. Recalculation of the index takes
    place every 15 seconds and is distributed by Reuters America Holdings, Inc.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 构成SPX的股票在纽约证券交易所（NYSE）或全国证券经纪人自动报价系统（NASDAQ）上公开上市。该指数被认为是美国经济的主要代表，通过大市值普通股。指数每15秒重新计算一次，并由路透美国控股公司分发。
- en: The common ticker symbols used by exchanges are *SPX* and *INX*, and on some
    websites is *^GSPC*.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 交易所使用的常见股票代码是SPX和INX，一些网站上是^GSPC。
- en: SPX options
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SPX期权
- en: The CBOE offers a variety of options contracts to be traded, including options
    on stock indices such as the SPX. SPX Index options products come with different
    expiration dates. Standard or traditional SPX options expire on the third Friday
    of every month, and are settled at the start of the business. **SPX Weekly** (**SPXW**)
    options products may expire weekly, on Mondays, Wednesdays and Fridays, or monthly
    on the last trading day of the month. If the expiration date falls on an exchange
    holiday, the expiration date will be brought forward to the preceding business
    day. Other SPX options are the minis, trading at one-tenth of the notional size,
    and the **SPDR ETF** (**S&P's Depositary Receipt Exchange-traded Fund**). Most
    SPX Index options are European style, with the exception of SPDR ETF which is
    American style.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 芝加哥期权交易所提供各种期权合约进行交易，包括标普500指数等股票指数期权。SPX指数期权产品具有不同的到期日。标准或传统的SPX期权每月第三个星期五到期，并在交易日开始结算。SPX周期（SPXW）期权产品可能每周到期，分别在星期一、星期三和星期五，或每月在月末最后一个交易日到期。如果到期日落在交易所假日，到期日将提前至前一个交易日。其他SPX期权是迷你期权，交易量为名义规模的十分之一，以及标普500指数存托凭证交易基金（SPDR
    ETF）。大多数SPX指数期权是欧式风格，除了SPDR ETF是美式风格。
- en: The VIX
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: VIX
- en: Like the STOXX, the CBOE VIX measures the short-term volatility implied by S&P
    500 stock index option prices. The CBOE VIX began in 1993 based on the S&P 100
    Index, was updated in 2003 to be based on the SPX, and updated again in 2014 to
    include SPXW options. Many people around the world think of the VIX to be a popular
    measurement tool for stock market volatility over the next 30-day period. The
    VIX recalculates every 15 seconds and is distributed by CBOE.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 与STOXX一样，芝加哥期权交易所VIX衡量了标普500股票指数期权价格隐含的短期波动率。芝加哥期权交易所VIX始于1993年，基于标普100指数，于2003年更新为基于SPX，并于2014年再次更新以包括SPXW期权。全球许多人认为VIX是未来30天股市波动的流行测量工具。VIX每15秒重新计算一次，并由芝加哥期权交易所分发。
- en: VIX Options and VIX Futures are based on the VIX and trade on the CBOE.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: VIX期权和VIX期货基于VIX，在芝加哥期权交易所交易。
- en: Financial analytics of the S&P 500 and the VIX
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 标普500和VIX的金融分析
- en: In this section, we will study the relationship between the VIX and the S&P
    500 Market Index.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将研究VIX与标普500市场指数之间的关系。
- en: Gathering the data
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收集数据
- en: 'We will be using Alpha Vantage as our data provider. Let''s download the SPX
    and VIX datasets in the following steps:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Alpha Vantage作为我们的数据提供商。让我们按以下步骤下载SPX和VIX数据集：
- en: 'Query for the all-time S&P 500 historical data with the ticker symbol `^GSPC`:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查询具有股票代码`^GSPC`的全时S&P 500历史数据：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Do the same for the VIX Index with the ticker symbol `^VIX`:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于具有股票代码`^VIX`的VIX指数也做同样的操作：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Inspect the contents of the DataFrame object, `df_spx_data`:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查DataFrame对象`df_spx_data`的内容：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Inspect the contents of the DataFrame object, `df_vix_data`:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查DataFrame对象`df_vix_data`的内容：
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Observe that the start date of both datasets begins from January 3, 2000, and
    that the fifth column labeled `5\. adjusted close` contains our values of interest.
    Extract these two columns and combine them into a single `pandas` DataFrame:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，两个数据集的开始日期都是从2000年1月3日开始的，第五列标记为`5\. adjusted close`包含我们感兴趣的值。提取这两列并将它们合并成一个`pandas`
    DataFrame：
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The last line `to_datetime()` method of `pandas` converts the trading dates
    given as string objects into a pandas `DatetimeIndex` object. Inspecting the head
    of our final DataFrame object `df` gives us the following:'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`pandas`的`to_datetime()`方法将作为字符串对象给出的交易日期转换为pandas的`DatetimeIndex`对象。检查我们最终的DataFrame对象`df`的头部，得到以下结果：'
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'This gives us the following table:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们以下表格：
- en: '| **Date** | **SPX** | **VIX** |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| **日期** | **SPX** | **VIX** |'
- en: '| --- | --- | --- |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| 2000-01-03 | 1455.22 | 24.21 |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| 2000-01-03 | 1455.22 | 24.21 |'
- en: '| 2000-01-04 | 1399.42 | 27.01 |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 2000-01-04 | 1399.42 | 27.01 |'
- en: '| 2000-01-05 | 1402.11 | 26.41 |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| 2000-01-05 | 1402.11 | 26.41 |'
- en: 'Viewing our formatted indexes shows us the following:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 查看我们格式化的指数，得到以下结果：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: With the `pandas` DataFrame formatted properly, let's proceed to work with this
    dataset.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 有了正确格式的`pandas` DataFrame，让我们继续处理这个数据集。
- en: Performing analytics
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行分析
- en: 'The `describe()` method of `pandas` gives us a summary statistic and distribution
    of values inside each column of the `pandas` DataFrame object:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`的`describe()`方法给出了DataFrame对象中每列的摘要统计和值的分布：'
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This gives us the following table:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们以下表格：
- en: '|  | **SPX** |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '|  | **SPX** |'
- en: '| --- | --- |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **count** | 4734.000000 |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| **count** | 4734.000000 |'
- en: '| **mean** | 1493.538998 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| **mean** | 1493.538998 |'
- en: '| **std** | 500.541938 |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| **std** | 500.541938 |'
- en: '| **min** | 676.530000 |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| **min** | 676.530000 |'
- en: '| **25%** | 1140.650000 |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| **25%** | 1140.650000 |'
- en: '| **50%** | 1332.730000 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| **50%** | 1332.730000 |'
- en: '| **75%** | 1840.515000 |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| **75%** | 1840.515000 |'
- en: '| **max** | 2930.750000 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| **max** | 2930.750000 |'
- en: 'Another related method, `info()`, used earlier, gives us a technical summary
    of the DataFrame, such as the range of the index and memory usage:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个相关的方法`info()`，之前使用过，给我们DataFrame的技术摘要，如指数范围和内存使用情况：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let''s plot the S&P 500 and VIX to see how they look from the year 2010 onwards:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们绘制S&P 500和VIX，看看它们从2010年开始是什么样子：
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This gives us the following graph:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们以下图表：
- en: '![](Images/61bef461-df5a-4d26-a286-d3b556d523b4.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/61bef461-df5a-4d26-a286-d3b556d523b4.png)'
- en: Observe that when the S&P 500 moves up, the VIX appears to move downwards, exhibiting
    a negative correlation relationship. We need to perform more statistical analysis
    to be sure.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当S&P 500上涨时，VIX似乎下降，表现出负相关关系。我们需要进行更多的统计分析来确保。
- en: 'Perhaps we might be interested in the daily returns of both the indexes. The
    `diff()` method returns the set of differences between the prior period values.
    A histogram can be used to give us a rough sense of the data density estimation
    over a bin interval of 100:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 也许我们对两个指数的日回报感兴趣。`diff()`方法返回前一期值之间的差异集。直方图可用于在100个bin间隔上给出数据密度估计的大致感觉：
- en: '[PRE10]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The `hist()` method gives us the following histograms:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '`hist()`方法给出了以下直方图：'
- en: '![](Images/636afa58-51b6-4d79-ad6c-54cc617c52ac.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/636afa58-51b6-4d79-ad6c-54cc617c52ac.png)'
- en: 'The same effect can also be achieved with the `pct_change()` command that gives
    us the percentage change over the prior period values:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`pct_change()`命令也可以实现相同的效果，它给出了前一期值的百分比变化：
- en: '[PRE11]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'We get the same histogram in terms of percentage changes:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了相同的直方图，以百分比变化为单位：
- en: '![](Images/63bf9d35-c4a4-4ab5-8ce6-3fb8a016e29c.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/63bf9d35-c4a4-4ab5-8ce6-3fb8a016e29c.png)'
- en: For quantitative analysis of returns, we are interested in the logarithm of
    daily returns. Why use log returns over simple returns? There are several reasons,
    but the most important of them is normalization, and this avoids the problem of
    negative prices.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于收益的定量分析，我们对每日收益的对数感兴趣。为什么使用对数收益而不是简单收益？有几个原因，但最重要的是归一化，这避免了负价格的问题。
- en: 'We can use the `shift()` function of `pandas` to shift the values by a certain
    number of periods. The `dropna()` method removes the unused values at the end
    of the logarithmic calculation transformation. The `log()` method of NumPy helps
    to calculate the logarithm of all values in the DataFrame object as a vector,
    and will be stored in the `log_returns` variable as a DataFrame object. The logarithm
    values can then be plotted to give us a graph of daily log returns. Here is the
    code to plot the logarithm values:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`pandas`的`shift()`函数将值向前移动一定数量的期间。`dropna()`方法删除对数计算转换末尾未使用的值。NumPy的`log()`方法帮助计算DataFrame对象中所有值的对数，并将其存储在`log_returns`变量中作为DataFrame对象。然后可以绘制对数值，得到每日对数收益的图表。以下是绘制对数值的代码：
- en: '[PRE12]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'We get the following output:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![](Images/5803aa92-e62b-4e57-8ada-e9e81d40e1c6.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/5803aa92-e62b-4e57-8ada-e9e81d40e1c6.png)'
- en: The top and bottom graph show the log returns of SPX and VIX, respectively,
    from the year 2000 and up to the present period.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部和底部图表分别显示了SPX和VIX的对数收益，从2000年到现在的期间。
- en: The correlation between the SPX and the VIX
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SPX和VIX之间的相关性
- en: 'We can use the `corr()` method to derive the correlation values between each
    column of values in the `pandas` DataFrame object, as in the following Python
    example:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`corr()`方法来推导`pandas` DataFrame对象中每列值之间的相关值，如以下Python示例所示：
- en: '[PRE13]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'This gives us the following correlation table:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们以下相关性表：
- en: '|  | **SPX** | **VIX** |'
  id: totrans-101
  prefs: []
  type: TYPE_TB
  zh: '|  | **SPX** | **VIX** |'
- en: '| --- | --- | --- |'
  id: totrans-102
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| **SPX** | 1.000000 | -0.733161 |'
  id: totrans-103
  prefs: []
  type: TYPE_TB
  zh: '| **SPX** | 1.000000 | -0.733161 |'
- en: '| **VIX** | -0.733161 | 1.000000 |'
  id: totrans-104
  prefs: []
  type: TYPE_TB
  zh: '| **VIX** | -0.733161 | 1.000000 |'
- en: 'At -0.731433, the SPX is negatively correlated with the VIX. To help us better
    visualize this relationship, we can plot both sets of the daily log return values
    as a scatter plot. The `statsmodels.api` module is used to obtain the ordinary
    least squares regression line between the scattered data:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在-0.731433处，SPX与VIX呈负相关。为了更好地可视化这种关系，我们可以将每组日对数收益值绘制成散点图。使用`statsmodels.api`模块来获得散点数据之间的普通最小二乘回归线：
- en: '[PRE14]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'We get the following output:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![](Images/2a73b56d-9cac-4fae-bd9f-d20fc2111257.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/2a73b56d-9cac-4fae-bd9f-d20fc2111257.png)'
- en: The downward-sloping regression line, as shown in the preceding graph, confirms
    the negative correlation relationship between the S&P 500 and the VIX indices.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示的向下倾斜回归线证实了标普500和VIX指数之间的负相关关系。
- en: 'The `rolling().corr()` method of `pandas` computes the moving-window correlation
    between two time series. We use a value of `252` to represent the number of trading
    days in the moving window to compute the annual rolling correlation, using the
    following commands:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`pandas`的`rolling().corr()`方法计算两个时间序列之间的滚动窗口相关性。我们使用`252`的值来表示移动窗口中的交易日数，以计算年度滚动相关性，使用以下命令：'
- en: '[PRE15]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We get the following output:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到以下输出：
- en: '![](Images/425f49cc-56ea-4f2c-bb4d-3048673e2c32.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/425f49cc-56ea-4f2c-bb4d-3048673e2c32.png)'
- en: It can be seen from the preceding graph that the SPX and the VIX are negatively
    correlated, fluctuating between 0.0 and -0.9 during most of the lifetime of the
    indices using 252 trading days per year.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 从前面的图表可以看出，SPX和VIX呈负相关，在大部分时间内在0.0和-0.9之间波动，每年使用252个交易日。
- en: Calculating the VIX Index
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算VIX指数
- en: In this section, we will perform a step-by-step replication of the VIX Index.
    Calculation of the VIX Index is documented on the CBOE website. You may obtain
    a copy of the CBOE VIX white paper at [http://www.cboe.com/micro/vix/vixwhite.pdf](http://www.cboe.com/micro/vix/vixwhite.pdf).
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将逐步复制VIX指数。VIX指数的计算在芝加哥期权交易所网站上有记录。您可以在[http://www.cboe.com/micro/vix/vixwhite.pdf](http://www.cboe.com/micro/vix/vixwhite.pdf)获取芝加哥期权交易所VIX白皮书的副本。
- en: Importing SPX options data
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导入SPX期权数据
- en: Suppose you had gathered SPX options data from your broker or purchased historical
    data from an external source such as the CBOE website. For the purpose of this
    chapter, the end-of-day SPX option chain prices are observed from Monday, October
    15, 2018 to Friday, October 19, 2018 and saved into **Comma-separated Values**
    (**CSV**) files. Sample copies of these files are provided under the files folder
    of the source codes repository.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您从经纪人那里收集了SPX期权数据，或者从CBOE网站等外部来源购买了历史数据。为了本章的目的，我们观察了2018年10月15日（星期一）到2018年10月19日（星期五）的期末SPX期权链价格，并将其保存为**逗号分隔值**（**CSV**）文件。这些文件的示例副本提供在源代码存储库的文件夹下。
- en: 'In the following example, write a function, `read_file()`, that accepts the
    file path in its first argument indicating the location of a CSV file, and returns
    a tuple of a list of metadata and a list of option chain data:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的示例中，编写一个名为`read_file()`的函数，它接受文件路径作为第一个参数，指示CSV文件的位置，并返回元数据列表和期权链数据列表的元组：
- en: '[PRE16]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Note that the structure of your own options data may differ from this example.
    Be prudent to check and modify this function accordingly. Having imported our
    dataset, we can proceed to parse and extract useful information.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您自己的期权数据结构可能与此示例不同。请谨慎检查并相应修改此函数。导入数据集后，我们可以继续解析和提取有用信息。
- en: Parsing SPX options data
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解析SPX期权数据
- en: 'In this example, we assume the top three rows of the CSV file contain meta
    information, with the rest of the options chain prices starting from row four
    onwards. For each row of options pricing data, the first seven columns contain
    the bid and ask quotes of a call contract, with the next seven columns for a put
    contract. The first of each seven column contains a string describing the expiry
    date, strike price, and contract code. Follow these steps to parse information
    from our CSV file:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们假设CSV文件的前三行包含元信息，后面的期权链价格从第四行开始。对于每一行期权定价数据，前七列包含看涨合同的买入和卖出报价，接下来的七列是看跌合同的。每七列的第一列包含描述到期日、行权价和合同代码的字符串。按照以下步骤从我们的CSV文件中解析信息：
- en: 'Each row of meta information is appended in a list variable named `meta_data`,
    while each row of options data is appended to a list variable named `calls_and_puts`.
    Reading a single file with this function gives us the following:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每行元信息都被添加到名为`meta_data`的列表变量中，而每行期权数据都被添加到名为`calls_and_puts`的列表变量中。使用此函数读取单个文件会得到以下结果：
- en: '[PRE17]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Printing each row of metadata provides the following:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印每行元数据提供以下内容：
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The current time of the option quotes can be found on the second row of our
    metadata. Since Eastern Time is 5 hours behind **Greenwich Mean Time** (**GMT**),
    we replace the `ET` string and parse the entire string as a `datetime` object.
    The following function, `get_dt_current()`, demonstrates this:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 期权报价的当前时间可以在我们的元数据的第二行找到。由于东部时间比**格林威治标准时间**（**GMT**）晚5小时，我们将替换`ET`字符串并将整个字符串解析为`datetime`对象。以下函数`get_dt_current()`演示了这一点：
- en: '[PRE19]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'From the meta information of our options data, extract the date and time information
    as Chicago local time:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从我们的期权数据的元信息中提取日期和时间信息作为芝加哥当地时间：
- en: '[PRE20]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now, let''s look at the first two lines of our option quotes data:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们看一下我们的期权报价数据的前两行：
- en: '[PRE21]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Each item in the list contains a tuple of two objects, with each object containing
    a list of a call option and a put option pricing data having the same strike price.
    Referring to our printed headers, the seven items of each option price list data
    contains the contract code with expiry date, the last sale price, the net change
    in price, the bid price, ask price, volume traded, and open interest.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中的每个项目都包含两个对象的元组，每个对象都包含一个看涨期权和一个看跌期权定价数据的列表，这些数据具有相同的行权价。参考我们打印的标题，每个期权价格列表数据的七个项目包含合同代码和到期日、最后成交价、价格净变动、买价、卖价、成交量和未平仓量。
- en: 'Let''s write a function to parse the description of each SPX option dataset:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写一个函数来解析每个SPX期权数据集的描述：
- en: '[PRE22]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The utility function, `parse_expiry_and_strike()`, returns a tuple of expiration
    date object, and the strike price as a `Decimal` object.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 实用函数`parse_expiry_and_strike()`返回一个到期日期对象的元组，以及一个`Decimal`对象作为行权价。
- en: 'Each contract data is a string containing the expiration year, month, day,
    and strike price, followed by the contract code, all separated by spaces. We take
    the date components and reconstruct a date and time string, easily parsed by the
    parser function of `dateutil` imported earlier. Weekly options expire at 4 PM
    New York time, or 3 PM Chicago time. Standard third Friday options are AM-settled
    and expire at the start of the trading day at 8.30 AM. We replace the expiration
    time in accordance with performing a `is_third_friday()` check, implemented as
    follows:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 每个合同数据都是一个字符串，包含到期年、月、日和行权价，后跟合同代码，所有用空格分隔。我们取日期组件并重构一个日期和时间字符串，可以轻松地由之前导入的`dateutil`解析函数解析。周期期权在纽约时间下午4点到期，或芝加哥时间下午3点到期。标准的第三个星期五期权是上午结算的，将在交易日开始时上午8点30分到期。我们根据执行`is_third_friday()`检查的需要替换到期时间，实现如下：
- en: '[PRE23]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Testing our function with a simple contract code data and printing the results
    gives us the following:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 使用一个简单的合同代码数据测试我们的函数并打印结果。
- en: '[PRE24]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: Since September 26, 2018 falls on a Wednesday, the SPXW option will expire at
    3 PM CDT, Chicago local time.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 自2018年9月26日起，星期三，SPXW期权将在芝加哥当地时间下午3点到期。
- en: 'This time round, let''s test our function with a contract code data that falls
    on a third Friday:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，让我们使用一个落在第三个星期五的合同代码数据来测试我们的函数：
- en: '[PRE25]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The test contract code data we have used is October 19, 2018, which falls on
    the third Friday of October. This is a standard SPX option that is settled at
    the start of the trading day, at 8.30 AM Chicago time.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的测试合同代码数据是2018年10月19日，这是10月的第三个星期五。这是一个标准的SPX期权，将在交易日开始时，在芝加哥时间上午8点30分结算。
- en: 'With our utility function in place, we can now go ahead and parse a single
    call or put option price entry, and return useful information that we can use:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 有了我们的实用函数，我们现在可以继续解析单个看涨或看跌期权价格条目，并返回我们可以使用的有用信息：
- en: '[PRE26]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The utility function, `format_option_data()`, takes `option_data` as its argument,
    containing a list of data we have seen earlier. The descriptive data at index
    zero contains the contract code data that we can parse using the `parse_expiry_and_strike()`
    function. Indexes three and four contain the bid and ask price, which are used
    to compute the mid price. The mid price is the average of the bid and ask price.
    This function returns a tuple of the option expiry date, as well as the strike,
    bid, ask, and mid prices as `Decimal` objects.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 实用函数`format_option_data()`以`option_data`作为其参数，其中包含我们之前看到的数据列表。索引零处的描述性数据包含合同代码数据，我们可以使用`parse_expiry_and_strike()`函数进行解析。索引三和四包含买价和卖价，用于计算中间价。中间价是买价和卖价的平均值。该函数返回期权到期日的元组，以及买价、卖价和中间价作为`Decimal`对象。
- en: Finding near-term and next-term options
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找近期和次近期期权
- en: The VIX Index measures the 30-day expected volatility of the SPX using the market
    quotes of call and put options expiring between 24 days and 36 days. In between
    these dates, there will be two SPX option contract maturity dates. Options expiring
    the nearest are referred to as near-term options, while the options expiring later
    are referred to as next-term options. Happening once per week, when the option
    maturities are out of the 24 to 36 days range, new contract maturities will be
    chosen as the new near-term and next-term options.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: VIX指数使用24天到36天到期的看涨和看跌期权的市场报价来衡量SPX的30天预期波动率。在这些日期之间，将有两个SPX期权合同到期日。最接近到期的期权被称为近期期权，而稍后到期的期权被称为次近期期权。每周发生一次，当期权到期日超出24到36天的范围时，新的合同到期日将被选择为新的近期和次近期期权。
- en: 'To help us in finding the near-term and next-term options, let''s organize
    our puts and calls options data indexed by maturity dates, each having a `pandas`
    DataFrame indexed by strike price. We would need the following DataFrame column
    definitions:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们找到近期和次近期期权，让我们按到期日对看涨和看跌期权数据进行组织，每个期权数据都有一个以行权价为索引的`pandas` DataFrame。我们需要以下DataFrame列定义：
- en: '[PRE27]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The following function, `generate_options_chain()`, organizes our list dataset,
    `calls_and_puts`, into a single dictionary variable chain:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数`generate_options_chain()`将我们的列表数据集`calls_and_puts`组织成一个单一的字典变量`chain`：
- en: '[PRE28]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The `chain` variable has its keys as the option maturity dates, each referencing
    to a `pandas` DataFrame object. Two invocations to the `format_option_data()`
    function are made to derive the calls and puts data of interest. The `assert`
    keyword ensures the integrity of our call and put expiry dates, based on the assumption
    that each line in our dataset refers to the same expiry date. Otherwise, an exception
    will be thrown and calls to our attention to inspect the dataset for any signs
    of corruption.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`chain`变量的键是期权到期日，每个键都引用一个`pandas` DataFrame对象。对`format_option_data()`函数进行两次调用，以获取感兴趣的看涨和看跌数据。`assert`关键字确保了我们的看涨和看跌到期日的完整性，基于我们数据集中的每行都指向相同的到期日的假设。否则，将抛出异常并要求我们检查数据集是否存在任何损坏的迹象。'
- en: The `loc` keyword assigns column values for a specific strike price, for both
    calls and puts data. In addition, the `diff` column contains the absolute difference
    between the mid prices of call and put quotes, which we will use later.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: “loc”关键字为特定行权价分配列值，对于看涨期权和看跌期权数据。此外，“diff”列包含看涨和看跌报价的中间价格的绝对差异，我们稍后将使用。
- en: 'Let''s view the first and last two keys in our `chain` dictionary:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看我们的“chain”字典中的前两个和最后两个键：
- en: '[PRE29]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'Our dataset contains options prices for maturities over the next two years.
    From these, we select our near-term and next-term maturities with the following
    function:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据集包含未来两年内到期的期权价格。从中，我们使用以下函数选择我们的近期和下期到期日：
- en: '[PRE30]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Here, we are simply selecting the first two options whose maturities are over
    23 days from the time of this dataset. These two option maturities are as follows:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们只是选择了到数据集时间后23天内到期的前两个期权。这两个期权到期日如下：
- en: '[PRE31]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: The near-term maturity is on November 9, 2018 and the next-term maturity is
    on November 16, 2018.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 近期到期日为2018年11月9日，下期到期日为2018年11月16日。
- en: Calculating the required minutes
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算所需的分钟数
- en: 'The formula for calculating the VIX is given as follows:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 计算VIX的公式如下：
- en: '![](Images/cf22be32-84f5-4672-9d86-bc7874df9a89.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/cf22be32-84f5-4672-9d86-bc7874df9a89.png)'
- en: 'Here, the following applies:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，适用以下规定：
- en: T[1] is the number of years to settlement of the near-term options
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: T[1]是到近期期权结算的年数
- en: T[2] is the number of years to settlement of the next-term options
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: T[2]是到下期期权结算的年数
- en: N[T1] is the number of minutes to settlement of the near-term options
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: N[T1]是到近期期权结算的分钟数
- en: N[T2] is the number of minutes to settlement of the next-term options
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: N[T2]是到下期期权结算的分钟数
- en: N[30] is the number of minutes in 30 days
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: N[30]是30天内的分钟数
- en: N[365] is the number of minutes in a year with 365 days
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: N[365]是一年365天的分钟数
- en: 'Let''s find out these values in Python:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在Python中找出这些值：
- en: '[PRE32]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The difference of two `datetime` objects returns a `timedelta` object, whose
    `total_seconds()` method gives the difference in terms of the number of seconds.
    The number of minutes can be obtained by dividing the number of seconds by sixty.
    The number of minutes in a year is found by taking the difference between the
    start of next year and the start of current year, while the number of minutes
    in a month is simply the sum of seconds in thirty days.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 两个“datetime”对象的差异返回一个“timedelta”对象，其“total_seconds（）”方法以秒为单位给出差异。将秒数除以六十即可得到分钟数。一年的分钟数是通过取下一年的开始和当前年的开始之间的差异来找到的，而一个月的分钟数简单地是三十天内的秒数之和。
- en: 'The values obtained are as follows:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 获得的值如下：
- en: '[PRE33]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'The general formula for calculating T is as follows:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 计算T的一般公式如下：
- en: '![](Images/edbb82f3-00b5-4338-a396-0b821d9eba6e.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/edbb82f3-00b5-4338-a396-0b821d9eba6e.png)'
- en: 'Here, the following applies:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，适用以下规定：
- en: M[current day] is the number of minutes remaining until midnight of the current
    day
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: M[当前日]是直到当天午夜剩余的分钟数
- en: M[other days] is the sum of minutes between the current day and the expiration
    day
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: M[其他日]是当前日和到期日之间的分钟总和
- en: M[settlement day] is the number of minutes from midnight of the expiration day
    until the expiration time
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: M[结算日]是从到期日的午夜到到期时间的分钟数
- en: 'With these, we can find T[1] and T[2 ], that is, the amount of time remaining
    per year for the near-term and next-term options:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们可以找到T[1]和T[2]，即近期和下期期权每年剩余的时间：
- en: '[PRE34]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The near-term option is 0.6792 years to maturity and the next-term option is
    0.08636 years to maturity.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 近期期权到期日为0.6792年，下期期权到期日为0.08636年。
- en: Calculating the forward SPX Index level
  id: totrans-188
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算前向SPX指数水平
- en: 'For each contract month, the forward SPX level *F* is given as follows:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个合同月，前向SPX水平*F*如下所示：
- en: '![](Images/e387f54e-6191-425f-a982-942bbf0c055a.png)'
  id: totrans-190
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/e387f54e-6191-425f-a982-942bbf0c055a.png)'
- en: Here, the strike price is chosen where the absolute difference between the call
    and put prices is the minimum. Note that options with zero bid prices are not
    taken into account for the VIX Index calculation. This suggests that as volatility
    of the SPX and options changes, the bid quotes may become zero, and the number
    of options used in calculation of the VIX Index may vary at any minute!
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，选择绝对差异最小的行权价。请注意，对于VIX指数的计算，不考虑出价为零的期权。这表明随着SPX和期权的波动性变化，出价可能变为零，并且用于计算VIX指数的期权数量可能在任何时刻发生变化！
- en: 'We can represent the forward index level calculation with the `determine_forward_level()`
    function, as shown in the following code:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用“determine_forward_level（）”函数表示前向指数水平的计算，如下面的代码所示：
- en: '[PRE35]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The `df` argument is the DataFrame containing the near-term or next-term options
    prices. The `min_diff` variable contains the minimum of all absolute price differences
    computed in the diff column earlier. The `pd_k` variable contains the DataFrame
    at which we will choose our strike price having the minimum absolute price difference.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: “df”参数是包含近期或下期期权价格的数据框。 “min_diff”变量包含在先前的差异列中计算的所有绝对价格差异的最小值。 “pd_k”变量包含我们将选择的DataFrame，其中我们将选择具有最小绝对价格差异的行权价。
- en: Note that we are assuming an interest rate of 2.17% for both option chains for
    the sake of simplicity. In practice, the interest rates of near-term and next-term
    options are based on a cubic spline calculation of U.S. Treasury yield curve rates,
    or **Constant Maturity Treasury rates** (**CMTs**). Yield curve rates are available
    from the U.S. Department of the Treasury website at [https://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yieldYear&year=2018](https://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yieldYear&year=2018).
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，出于简单起见，我们假设两个期权链的利率均为2.17%。在实践中，近期和次期期权的利率基于美国国债收益率曲线利率的三次样条计算，或者**恒定到期国债收益率**（**CMTs**）。美国国债收益率曲线利率可从美国财政部网站[https://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yieldYear&year=2018](https://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yieldYear&year=2018)获取。
- en: 'Let''s calculate the forward SPX level for the near-term options as `f1`:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们计算近期期权的前向SPX水平为`f1`：
- en: '[PRE36]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: We will be using the forward SPX level, *F*, as 2747.596.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用前向SPX水平*F*作为2747.596。
- en: Finding the required forward strike prices
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找所需的前向行权价格
- en: 'The forward strike price is the strike price immediately below the forward
    SPX level, denoted by `k0`, and is determined by the `find_k0()` function, written
    as follows:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 前向行权价格是紧挨着前向SPX水平的行权价格，用`k0`表示，并由以下`find_k0()`函数确定：
- en: '[PRE37]'
  id: totrans-201
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'The value of `k0` of the near-term option can simply be found with the function
    call:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 近期期权的`k0`值可以通过以下函数调用简单找到：
- en: '[PRE38]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: The near-term forward strike price is found to be 2745.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 近期前向行权价格被确定为2745。
- en: Determining strike price boundaries
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 确定行权价格边界
- en: When selecting options used in the VIX Index calculation, calls and puts with
    bid prices of zero are ignored. For far **out-of-the-money** (**OTM**) put options
    where strike prices are lower than `k0`, the lower price boundary terminates when
    two consecutive zero bid prices are encountered. Similarly, for far OTM call options
    with strike prices more than `k0`, the upper price boundary terminates when two
    consecutive zero bid prices are encountered.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择用于VIX指数计算的期权时，忽略买价为零的认购和认沽期权。对于远**虚值**（**OTM**）认沽期权，其行权价格低于`k0`，下限价格边界在遇到两个连续的零买价时终止。同样，对于行权价格高于`k0`的远虚值认购期权，上限价格边界在遇到两个连续的零买价时终止。
- en: 'The following function, `find_lower_and_upper_bounds()`, illustrates the process
    of finding the lower and upper boundaries in Python code:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数`find_lower_and_upper_bounds()`说明了在Python代码中找到下限和上限的过程：
- en: '[PRE39]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: The `df` argument is the `pandas` DataFrame of the option prices. The `otm_puts`
    variable contains OTM puts data, and is iterated backwards in descending order
    by the `for` loop. At each iteration, the `k_lower` variable stores the current
    strike price while we are looking at two bid prices ahead in the loop. When the
    `for` loop terminates due to two zero bids encountered or reaches the end of the
    list, `k_lower` will contain the strike price of the lower boundary.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: '`df`参数是期权价格的`pandas` DataFrame。`otm_puts`变量包含虚值认沽期权数据，并通过`for`循环按降序迭代。在每次迭代时，`k_lower`变量存储当前行权价格，同时我们在循环中向前查看两个报价。当`for`循环由于遇到两个零报价而终止，或者到达列表末尾时，`k_lower`将包含下限行权价格。'
- en: The same methodology is applied in finding the strike price of the upper boundary.
    Since the strike prices of OTM calls are already in descending order, we simply
    read the prices using forward index referencing on the `iloc` command.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在寻找上限行权价格时采用相同的方法。由于虚值认购期权的行权价格已经按降序排列，我们只需使用`iloc`命令上的前向索引引用来读取价格。
- en: 'When we provide the near-term option chain data to this function, the lower
    and upper strike price boundaries can be obtained from the `k_lower` and `k_upper`
    variables, respectively, as shown in the following codes:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们将近期期权链数据提供给这个函数时，下限和上限行权价格可以从`k_lower`和`k_upper`变量中获得，如下面的代码所示：
- en: '[PRE40]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: Near-term options with strike prices from 1,500 to 3,200 will be used in the
    calculation of the VIX Index.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 将使用行权价格从1,500到3,200的近期期权来计算VIX指数。
- en: Tabulating contributions by strike prices
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 按行权价格制表
- en: 'Since the VIX Index is composed of prices of calls and puts options expiring
    on an average of 30 days, each option of the chosen maturity date contributes
    to the VIX Index calculation by a certain amount. This amount is given as the
    general formula:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 由于VIX指数由平均到期日为30天的认购和认沽期权的价格组成，所以所选到期日的每个期权都会对VIX指数的计算产生一定的影响。这个影响量可以用以下一般公式表示：
- en: '![](Images/548953d5-c05a-408a-b2c7-08bd3fb208aa.png)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/548953d5-c05a-408a-b2c7-08bd3fb208aa.png)'
- en: Here, *T* is the time to expiration of the option, *R* is the risk-free interest
    rate to expiration of the option, *K[i]* is the strike price of the *i*th OTM
    option, and △K[i] is the half-difference on either side of *K[i]* such that △K[i]=
    0.5(K[i+1]-K[i-1]).
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*T*是期权到期时间，*R*是期权到期时的无风险利率，*K[i]*是第*i*个虚值期权的行权价格，△K[i]是*K[i]*两侧的半差，使得△K[i]=0.5(K[i+1]-K[i-1])。
- en: 'We can represent this formula by the following  `calculate_contrib_by_strike()`
    function:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用以下`calculate_contrib_by_strike()`函数来表示这个公式：
- en: '[PRE41]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'In calculating △K[i]=0.5(K[i+1]-K[i-1]), we search for *K[i-1]* using the utility
    function, `find_prev_k()`, as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算△K[i]=0.5(K[i+1]-K[i-1])时，我们使用实用函数`find_prev_k()`来寻找*K[i-1]*，如下所示：
- en: '[PRE42]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Similarly, we use the same procedure in searching for K[i+1] using the utility
    function, `find_next_k()`, as follows:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，我们使用相同的程序来寻找*K[i+1]*，使用实用函数`find_next_k()`，如下所示：
- en: '[PRE43]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'With the preceding utility functions, we can now create a function, `tabulate_contrib_by_strike()`,
    that uses an iterative procedure to calculate the contributions of each option
    for every strike price available in the `pandas` DataFrame `df` with option prices,
    returning a new DataFrame containing the final dataset used towards the calculation
    of the VIX Index:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 有了前面的实用函数，我们现在可以创建一个名为`tabulate_contrib_by_strike()`的函数，使用迭代过程来计算`pandas` DataFrame
    `df`中可用的每个行权价的期权的贡献，返回一个包含用于计算VIX指数的最终数据集的新DataFrame：
- en: '[PRE44]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: The resulting DataFrame is indexed by strike price and contains three columns—the
    option type as either a *Call* or *Put*, the average of the bid-ask spread, and
    the contribution to the VIX Index.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的DataFrame以行权价为索引，包含三列——期权类型为*看涨*或*看跌*，买卖价差的平均值，以及对VIX指数的贡献。
- en: 'Tabulating the contributions of our near-term options gives us the following:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 列出我们近期期权的贡献给出以下结果：
- en: '[PRE45]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Peeking at the head of the results provides the following:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 查看结果的头部提供以下信息：
- en: '[PRE46]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'This gives us the following table:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 这给出以下表格：
- en: '|  | **Option Type** | **mid** | **contrib** |'
  id: totrans-232
  prefs: []
  type: TYPE_TB
  zh: '|  | **期权类型** | **中间值** | **贡献** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-233
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| **1250.00** | Put | 0.10 | 0.000003204720007271874493426366826 |'
  id: totrans-234
  prefs: []
  type: TYPE_TB
  zh: '| **1250.00** | 看跌期权 | 0.10 | 0.000003204720007271874493426366826 |'
- en: '| **1300.00** | Put | 0.125 | 0.000003703679742131881579865901010 |'
  id: totrans-235
  prefs: []
  type: TYPE_TB
  zh: '| **1300.00** | 看跌期权 | 0.125 | 0.000003703679742131881579865901010 |'
- en: '| **1350.00** | Put | 0.15 | 0.000004121296305647986745661479970 |'
  id: totrans-236
  prefs: []
  type: TYPE_TB
  zh: '| **1350.00** | 看跌期权 | 0.15 | 0.000004121296305647986745661479970 |'
- en: '| **1400.00** | Put | 0.20 | 0.000005109566338124799893855814454 |'
  id: totrans-237
  prefs: []
  type: TYPE_TB
  zh: '| **1400.00** | 看跌期权 | 0.20 | 0.000005109566338124799893855814454 |'
- en: '| **1450.00** | Put | 0.20 | 0.000004763258036967708819004706934 |'
  id: totrans-238
  prefs: []
  type: TYPE_TB
  zh: '| **1450.00** | 看跌期权 | 0.20 | 0.000004763258036967708819004706934 |'
- en: 'Peeking at the tail of the results provides the following:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 查看结果的尾部提供以下信息：
- en: '[PRE47]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'This also gives us the following table:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 这也给我们提供了以下表格：
- en: '|  | **Option Type** | **mid** | **contrib** |'
  id: totrans-242
  prefs: []
  type: TYPE_TB
  zh: '|  | **期权类型** | **中间值** | **贡献** |'
- en: '| --- | --- | --- | --- |'
  id: totrans-243
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- | --- |'
- en: '| **3020.00** | Call | 0.175 | 9.608028452572290489411343569E-8 |'
  id: totrans-244
  prefs: []
  type: TYPE_TB
  zh: '| **3020.00** | 看涨期权 | 0.175 | 9.608028452572290489411343569E-8 |'
- en: '| **3025.00** | Call | 0.225 | 1.231237623174939828257858985E-7 |'
  id: totrans-245
  prefs: []
  type: TYPE_TB
  zh: '| **3025.00** | 看涨期权 | 0.225 | 1.231237623174939828257858985E-7 |'
- en: '| **3030.00** | Call | 0.175 | 9.544713775211615220689389699E-8 |'
  id: totrans-246
  prefs: []
  type: TYPE_TB
  zh: '| **3030.00** | 看涨期权 | 0.175 | 9.544713775211615220689389699E-8 |'
- en: '| **3035.00** | Call | 0.20 | 1.087233242345573774601901086E-7 |'
  id: totrans-247
  prefs: []
  type: TYPE_TB
  zh: '| **3035.00** | 看涨期权 | 0.20 | 1.087233242345573774601901086E-7 |'
- en: '| **3040.00** | Call | 0.15 | 8.127448187590304540304760266E-8 |'
  id: totrans-248
  prefs: []
  type: TYPE_TB
  zh: '| **3040.00** | 看涨期权 | 0.15 | 8.127448187590304540304760266E-8 |'
- en: The `pd_contrib_near` variable contains the near-term call and put OTM options
    contained in a single DataFrame.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '`pd_contrib_near`变量包含了单个DataFrame中包含的近期看涨和看跌虚值期权。'
- en: Calculating the volatilities
  id: totrans-250
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算波动性
- en: 'The volatility calculation for the chosen options is given as follows:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 所选期权的波动性计算如下：
- en: '![](Images/79c5426c-8d4e-42c5-b999-8abdb4026cdd.png)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/79c5426c-8d4e-42c5-b999-8abdb4026cdd.png)'
- en: 'Since we have already computed the contributions for the summation term, this
    formula can be simply written in Python as the `calculate_volatility()` function:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们已经计算了求和项的贡献，这个公式可以简单地在Python中写成`calculate_volatility()`函数：
- en: '[PRE48]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Computing the volatility of the near-term option gives us the following:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 计算近期期权的波动性给出以下结果：
- en: '[PRE49]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: The volatility of the near-term option is 0.04891.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 近期期权的波动性为0.04891。
- en: Calculating the next-term options
  id: totrans-258
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算下一个期权
- en: 'Just as we did for near-term options, calculating the next-term options is
    pretty straightforward with the following Python calls to the functions already
    defined in place:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们对近期期权所做的那样，使用已经定义好的函数进行下一个期权的计算是非常简单的：
- en: '[PRE50]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Since `dt_next` is our next-term maturity date, calling `chain.get()` retrieves
    the next-term option prices from the options chain store. With this data, we determine
    the forward SPX level, `f2`, for the next-term option, find its forward strike
    price, `k0_next`, and find its lower and upper strike price boundaries. Next,
    we tabulate the contributions of each option in calculating the VIX Index within
    the boundary of strike prices, from which we calculate the next-term volatility
    with the  `calculate_volatility()` function.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 由于`dt_next`是我们的下一个到期日，调用`chain.get()`从期权链存储中检索下一个到期期权的价格。有了这些数据，我们确定了下一个到期期权的前向SPX水平`f2`，找到了它的前向行权价`k0_next`，并找到了它的下限和上限行权价边界。接下来，我们列出了在行权价边界内计算VIX指数的每个期权的贡献，从中我们使用`calculate_volatility()`函数计算了下一个期权的波动性。
- en: The volatility of the next-term option is 0.0452.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个期权的波动性为0.0452。
- en: Calculating the VIX Index
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算VIX指数
- en: 'Finally, the 30-day weighted average of the VIX Index is written as follows:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，30天加权平均的VIX指数写成如下形式：
- en: '![](Images/07384973-e811-4e95-a2ff-f0c1a2c855ca.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/07384973-e811-4e95-a2ff-f0c1a2c855ca.png)'
- en: 'Representing this formula in Python code gives us the following:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python代码中表示这个公式给出以下结果：
- en: '[PRE51]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Substituting with the values from near-term and next-term options provides
    the following:'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 用近期和下一个期权的值进行替换得到以下结果：
- en: '[PRE52]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: We obtained the VIX Index as 21.43 at the close of October 15, 2018.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了2018年10月15日收盘时的VIX指数为21.43。
- en: Calculating multiple VIX indexes
  id: totrans-271
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算多个VIX指数
- en: With a single VIX value calculated for a particular trading day, we can reuse
    the defined functions to calculate VIX values over a time period.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定交易日计算出的单个VIX值，我们可以重复使用定义的函数来计算一段时间内的VIX值。
- en: 'Let''s write a function, `process_file()`, to process a single file path, and
    return the calculated VIX Index:'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写一个名为`process_file()`的函数，来处理单个文件路径，并返回计算出的VIX指数：
- en: '[PRE53]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'Suppose we have observed options chain data and collected it into CSV files
    for the week of 15th to 19th of October, 2018\. We can define the filenames and
    file path pattern into constant variables:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们观察了期权链数据，并将其收集到2018年10月15日至19日的CSV文件中。我们可以将文件名和文件路径模式定义为常量变量：
- en: '[PRE54]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: 'Iterating through the dates and setting the calculated VIX value into a `pandas`
    DataFrame with a column named `''VIX''` gives us the following:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 通过日期进行迭代，并将计算出的VIX值设置到一个名为'VIX'的`pandas` DataFrame列中，得到以下结果：
- en: '[PRE55]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Observing our data with the `head()` command provides the following:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`head()`命令观察我们的数据提供了以下结果：
- en: '[PRE56]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'This gives us the following table, containing VIX values over a 5-day period:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们提供了以下表格，其中包含了VIX在5天内的数值：
- en: '|  | **VIX** |'
  id: totrans-282
  prefs: []
  type: TYPE_TB
  zh: '| | VIX |'
- en: '| --- | --- |'
  id: totrans-283
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| **2018-10-15** | 21.4311 |'
  id: totrans-284
  prefs: []
  type: TYPE_TB
  zh: 2018-10-15 | 21.4311
- en: '| **2018-10-16** | 17.7384 |'
  id: totrans-285
  prefs: []
  type: TYPE_TB
  zh: 2018-10-16 | 17.7384
- en: '| **2018-10-17** | 17.4741 |'
  id: totrans-286
  prefs: []
  type: TYPE_TB
  zh: 2018-10-17 | 17.4741
- en: '| **2018-10-18** | 20.0477 |'
  id: totrans-287
  prefs: []
  type: TYPE_TB
  zh: 2018-10-18 | 20.0477
- en: '| **2018-10-19** | 19.9196 |'
  id: totrans-288
  prefs: []
  type: TYPE_TB
  zh: 2018-10-19 | 19.9196
- en: Comparing the results
  id: totrans-289
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比较结果
- en: 'Let''s compare the calculated VIX values against actual VIX values by reusing
    the DataFrame `df_vix_data` VIX Index that was downloaded in an earlier section,
    and extract only the relevant values for the corresponding week of 15th to 19th
    of October, 2018:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过重用在之前的部分中下载的DataFrame `df_vix_data` VIX指数，提取出2018年10月15日至19日对应周的相关数值，比较计算出的VIX值与实际VIX值：
- en: '[PRE57]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'The actual end-of-day VIX values for the period are as follows:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 该时期的实际VIX收盘价如下：
- en: '[PRE58]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Let''s merge the actual VIX values and the calculated values into a single
    DataFrame, and plot them:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将实际的VIX值和计算出的值合并到一个DataFrame中，并绘制它们：
- en: '[PRE59]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'This gives us the following output:'
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 这给我们提供了以下输出：
- en: '![](Images/a2aa5abf-df9a-41c6-8ca0-b6c9a871416d.png)'
  id: totrans-297
  prefs: []
  type: TYPE_IMG
  zh: '![](Images/a2aa5abf-df9a-41c6-8ca0-b6c9a871416d.png)'
- en: The calculated values in red dots appear to be very close to the actual VIX
    values.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 红点中的计算值似乎非常接近实际的VIX值。
- en: Summary
  id: totrans-299
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we looked at volatility derivatives and their uses by investors
    to diversify and hedge their risk in equity and credit portfolios. Since long-term
    investors in equity funds are exposed to downside risk, volatility can be used
    as a hedge for the tail risk and in replacement for the put options. In the United
    States, the CBOE VIX measures the short-term volatility implied by SPX option
    prices. In Europe, the VSTOXX Market Index is based on the market prices of a
    basket of OESX, and measures the implied market volatility over the next 30 days
    on the EURO STOXX 50 Index. Many people around the world use the VIX as a popular
    measurement tool for the stock market volatility over the next 30-day period.
    To help us better understand how the VIX Index is calculated, we looked at its
    components and at formulas used in determining its value.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了波动率衍生品及其在投资者中的用途，以实现在股票和信用组合中的多样化和对冲风险。由于股票基金的长期投资者面临下行风险，波动率可以用作尾部风险的对冲工具，并替代认购期权。在美国，芝加哥期权交易所VIX衡量了由SPX期权价格隐含的短期波动率。在欧洲，VSTOXX市场指数基于OESX一篮子的市场价格，并衡量了下一个30天内欧洲STOXX
    50指数的隐含市场波动率。世界各地的许多人使用VIX作为下一个30天股票市场波动率的流行测量工具。为了帮助我们更好地理解VIX指数是如何计算的，我们研究了它的组成部分和确定其价值的公式。
- en: To help us determine the relationship between the SPX and the VIX, we downloaded
    these data and performed a variety of financial analytics, with the conclusion
    that they are negatively correlated. This relationship presents a viable way of
    avoiding frequent rebalancing costs by trading strategies based on benchmarking.
    The statistical nature of volatility allows volatility derivative traders to generate
    returns by utilizing mean-reverting strategies, dispersion trading, and volatility
    spread trading, among others.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 为了帮助我们确定SPX和VIX之间的关系，我们下载了这些数据并进行了各种金融分析，得出它们之间存在负相关的结论。这种关系提供了一种可行的方式，通过基于基准的交易策略来避免频繁的再平衡成本。波动性的统计性质使波动率衍生品交易者能够通过利用均值回归策略、离散交易和波动率价差交易等方式获得回报。
- en: In studying VIX-based trading strategies, we replicated the VIX Index for a
    single time period. Since the VIX Index is a sentiment of the volatility outlook
    for the next 30 days, it is made up of two SPX option chains expiring between
    24 and 36 days. As the SPX rises and falls, the volatility of SPX options changes,
    and option bids may become zero. The number of options included in the calculation
    of the VIX Index may change as a result. For the simplicity of breaking down the
    VIX calculations in this chapter, we assumed the number of options included is
    static. We also assumed the CMTs over the 5-day period is constant. In reality,
    options prices and the risk-free interest rate are constantly changing, and the
    VIX Index recalculates approximately every 15 seconds.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 在研究基于VIX的交易策略时，我们复制了单个时间段的VIX指数。由于VIX指数是对未来30天波动性展望的一种情绪，它由两个SPX期权链组成，到期日在24至36天之间。随着SPX的涨跌，SPX期权的波动性也会发生变化，期权买价可能会变为零。用于计算VIX指数的期权数量可能会因此而改变。为了简化本章中对VIX计算的分解，我们假设包括的期权数量是静态的。我们还假设了在5天内CMT是恒定的。实际上，期权价格和无风险利率是不断变化的，VIX指数大约每15秒重新计算一次。
- en: In the next section, we will be building an algorithmic trading platform.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将建立一个算法交易平台。
