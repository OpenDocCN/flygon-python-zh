- en: Automating Tasks Made Easy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简化任务自动化
- en: 'In this chapter, we''ll cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Preparing a task
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备一个任务
- en: Setting up a cron job
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置一个定时任务
- en: Capturing errors and problems
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 捕获错误和问题
- en: Sending email notifications
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送电子邮件通知
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: To properly automate tasks, we need a platform so that they run automatically
    at the proper times. A task that needs to be run manually is not really fully
    automated.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 要正确自动化任务，我们需要一个平台，让它们在适当的时间自动运行。需要手动运行的任务并不真正实现了自动化。
- en: But, in order to be able to leave them running in the background while worrying
    about more pressing issues, the task will need to be adequate to run in *fire-and-forget* mode.
    We should be able to monitor that it runs correctly, be sure that we are capturing
    future actions (such as receiving notifications if something interesting arises),
    and know whether there have been any errors while running it.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，为了能够让它们在后台运行而不用担心更紧急的问题，任务需要适合以 *fire-and-forget* 模式运行。我们应该能够监控它是否正确运行，确保我们能够捕获未来的动作（比如在出现有趣的情况时接收通知），并知道在运行过程中是否出现了任何错误。
- en: Ensuring that a piece of software runs consistently with a high reliability
    is actually a very big deal and is one area that, to be done properly, requires
    specialized knowledge and staff, which typically go by the names of sysadmin,
    operations, or **SRE** (**Site Reliability Engineering**). Sites like Amazon and
    Google require huge investment in ensuring that everything works 24/7.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 确保软件始终以高可靠性一致运行实际上是一件大事，这是一个需要专业知识和人员的领域，通常被称为系统管理员、运维或 **SRE**（**站点可靠性工程**）。像亚马逊和谷歌这样的网站需要巨大的投资来确保一切都能24/7正常运行。
- en: The objective for this book is way more modest than that. You probably don't
    require a downtime lower than a few seconds per year. Running a task with reasonable
    reliability is a much easier thing to do. But, be aware that there's maintenance
    to be done, so be prepared for that.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的目标要比那更加谦虚。你可能不需要每年低于几秒的停机时间。以合理的可靠性运行任务要容易得多。但是，要意识到还有维护工作要做，所以要有所准备。
- en: Preparing a task
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备一个任务
- en: It all starts with defining exactly what task needs to be run, and designing
    it in a way that doesn't require human intervention to run.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都始于准确定义需要运行的任务，并设计成不需要人工干预就能运行的方式。
- en: 'Some ideal characteristic points are as follows:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一些理想的特点如下：
- en: '**Single, clear entry point**: No confusion on what the task to run is.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**单一、明确的入口点**：不会对要运行的任务产生混淆。'
- en: '**Clear parameters**: If there are any parameters, they should be very explicit.'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**清晰的参数**：如果有任何参数，它们应该非常明确。'
- en: '**No interactivity**: Stopping the execution to request information from the
    user is not possible.'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**无交互**：停止执行以请求用户信息是不可能的。'
- en: '**The result should be stored**: To be able to be checked at a different time
    than when it runs.'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**结果应该被存储**：可以在运行时以外的时间进行检查。'
- en: '**Clear result**: If we are working interactively in a result, we accept more
    verbose results, or progress reports. But, for an automated task, the final result
    should be as concise and to the point as possible.'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**清晰的结果**：如果我们在交互中工作，我们会接受更详细的结果或进度报告。但是，对于自动化任务，最终结果应尽可能简洁明了。'
- en: '**Errors should be logged**: To analyze what went wrong.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**错误应该被记录下来**：以便分析出错的原因。'
- en: A command-line program has a lot of those characteristics already. It has a
    clear way of running, with defined parameters, and the result can be stored, even
    if just in text format. But, it can be improved with a config file to clarify
    the parameters, and an output file.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行程序已经具备了许多这些特点。它有明确的运行方式，有定义的参数，并且结果可以被存储，即使只是以文本格式。但是，通过配置文件来澄清参数，并且输出到一个文件，可以进一步改进。
- en: Note that point 6 is the objective of the *Capturing errors and problems* recipe,
    and will be covered there.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，第6点是 *捕获错误和问题* 配方的目标，并将在那里进行介绍。
- en: To avoid interactivity, do not use any command that stops for the user to input,
    like `input`. Remember to delete breakpoints for debugging!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免交互，不要使用任何需要用户输入的命令，比如 `input`。记得删除调试时的断点！
- en: Getting ready
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: We'll start by following a structure in which a main function will serve as
    the entry point, and all parameters are supplied to it.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将按照一个结构开始，其中一个主函数作为入口点，并将所有参数提供给它。
- en: This is the same the basic structure the was presented in the *Adding command-line
    arguments* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let's
    Begin Our Automation Journey*.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这与[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)中 *添加命令行参数* 配方中呈现的基本结构相同，*让我们开始自动化之旅*。
- en: The definition of a main function will all the explicit arguments covers points
    1 and 2. Point 3 is not difficult to achieve.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个主函数，包含所有明确的参数，涵盖了第1和第2点。第3点并不难实现。
- en: To improve point 2 and 5, we'll look at retrieving the configuration from a
    file and storing the result in another. Another option is to send a notification,
    such as an email, which will be covered later in this chapter.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改进第2和第5点，我们将研究如何从文件中检索配置并将结果存储在另一个文件中。另一个选项是发送通知，比如电子邮件，这将在本章后面介绍。
- en: How to do it...
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Prepare the following task and save it as `prepare_task_step1.py`:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备以下任务，并将其保存为 `prepare_task_step1.py`：
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Update the file to define a config file that contains both arguments, and save
    it as `prepare_task_step2.py`. Note that defining a config file overwrites any
    command-line parameters:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新文件以定义包含两个参数的配置文件，并将其保存为 `prepare_task_step2.py`。注意，定义配置文件会覆盖任何命令行参数：
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Create the config file `config.ini`:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建配置文件 `config.ini`：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Run the command with the config file. Note that the config file overwrites
    the command-line parameters, as described in step 2:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用配置文件运行命令。注意，配置文件会覆盖命令行参数，就像第2步中描述的那样：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Add a parameter to store the result in a file, and save it as `prepare_task_step5.py`:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个参数来将结果存储在文件中，并将其保存为 `prepare_task_step5.py`：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Run the result to check that it''s sending the output to the defined file.
    Note that there''s no output outside the result files:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行结果以检查是否将输出发送到定义的文件。请注意，结果文件之外没有输出：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works...
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Note that the `argparse` module allows us to define files as parameters, with
    the `argparse.FileType` type, and opens them automatically. This is very handy,
    and will raise an error if the file is not valid.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`argparse`模块允许我们将文件定义为参数，使用`argparse.FileType`类型，并自动打开它们。这非常方便，如果文件无效，将会引发错误。
- en: Remember to open the file in the correct mode. In Step 5, the config file is
    opened in read mode (`r`) and the output file in write mode (`w`), which will
    overwrite the file if it exists. You may find the append mode (`a`), which will
    add the next piece of data at the end of an existing file.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 记得以正确的模式打开文件。在步骤5中，配置文件以读模式（`r`）打开，输出文件以写模式（`w`）打开，如果文件存在，将覆盖该文件。您可能会发现追加模式（`a`），它将在现有文件的末尾添加下一段数据。
- en: 'The `configparser` module allows us to use config files with ease. As demonstrated
    in Step 2, the parsing of the file is as simple as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '`configparser`模块允许我们轻松使用配置文件。如步骤2所示，文件的解析就像下面这样简单：'
- en: '[PRE6]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The config will then be accessible as a dictionary divided by sections, and
    then values. Note that the values are always stored in string format, requiring
    to be transformed into other types, such as integers:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，配置将作为由部分和值分隔的字典访问。请注意，值始终以字符串格式存储，需要转换为其他类型，如整数：
- en: If you need to obtain boolean values, do not perform `value = bool(config[raw_value])` as
    it will be transformed into `True` no matter what; for instance, the string `False`
    is a true string, as it's not empty. Use the `.getboolean` method instead, for
    example, `value = config.getboolean(raw_value)`.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要获取布尔值，请不要执行`value = bool(config[raw_value])`，因为无论如何都会转换为`True`；例如，字符串`False`是一个真字符串，因为它不是空的。相反，使用`.getboolean`方法，例如，`value
    = config.getboolean(raw_value)`。
- en: Python3 allows us to pass a `file` parameter to the `print` function, which
    will write to that file. Step 5 shows the usage to redirect all the printed information
    to a file.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Python3允许我们向`print`函数传递一个`file`参数，它将写入该文件。步骤5展示了将所有打印信息重定向到文件的用法。
- en: 'Note that the default parameter is `sys.stdout`, which will print the value
    to the Terminal (standard output). This makes it so that calling the script without
    an `-o` parameter will display the information on the screen, which is helpful
    in debugging:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，默认参数是`sys.stdout`，它将值打印到终端（标准输出）。这样做会使得在没有`-o`参数的情况下调用脚本将在屏幕上显示信息，这在调试时很有帮助：
- en: '[PRE7]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: There's more...
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Please check out the full documentation of `configparse` in the official Python
    documentation: [https://docs.python.org/3/library/configparser.html.](https://docs.python.org/3/library/configparser.html)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看官方Python文档中`configparse`的完整文档：[https://docs.python.org/3/library/configparser.html.](https://docs.python.org/3/library/configparser.html)
- en: In most cases, this configuration parser should be good enough, but if more
    power is needed, you can use YAML files as configuration files. YAML files ([https://learn.getgrav.org/advanced/yaml](https://learn.getgrav.org/advanced/yaml))
    are very common as configuration files, and are better structured and can be parsed
    directly, taking into account data types.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，这个配置解析器应该足够好用，但如果需要更多的功能，可以使用YAML文件作为配置文件。YAML文件（[https://learn.getgrav.org/advanced/yaml](https://learn.getgrav.org/advanced/yaml)）作为配置文件非常常见，结构更好，可以直接解析，考虑到数据类型。
- en: 'Add PyYAML to the `requirements.txt` file and install it:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将PyYAML添加到`requirements.txt`文件并安装它：
- en: '[PRE8]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Create the `prepare_task_yaml.py` file:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`prepare_task_yaml.py`文件：
- en: '[PRE9]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Define the config file `config.yaml,` available in GitHub [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/config.yaml](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/config.yaml)[ ](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/chapter2/config.yaml):'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义配置文件`config.yaml`，可在GitHub [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/config.yaml](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/config.yaml)
    中找到：
- en: '[PRE10]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, run the following:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后运行以下命令：
- en: '[PRE11]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There's also the possibility of setting a default config file, as well as a
    default output file. This can be handy to create a pure task that requires no
    input parameters.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 还有设置默认配置文件和默认输出文件的可能性。这对于创建一个不需要输入参数的纯任务非常方便。
- en: As a general rule, try to avoid creating too many input and configuration parameters
    if the task has a very specific objective in mind. Try to limit the input parameters
    to different executions of the task. A parameter that never changes is probably
    fine being defined as a **constant**. A high number of parameters will make config
    files or command-line arguments complicated and will create more maintenance in
    the long run. On the other hand, if your objective is to create a very flexible
    tool to be used in very different situations, then creating more parameters is
    probably a good idea. Try to find your own proper balance!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一般规则是，如果任务有一个非常具体的目标，请尽量避免创建太多的输入和配置参数。尝试将输入参数限制为任务的不同执行。一个永远不会改变的参数可能很好地被定义为**常量**。大量的参数将使配置文件或命令行参数变得复杂，并将在长期内增加更多的维护。另一方面，如果您的目标是创建一个非常灵活的工具，可以在非常不同的情况下使用，那么创建更多的参数可能是一个好主意。尝试找到适合自己的平衡！
- en: See also
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Command-line arguments* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let's
    Begin Our Automation Journey*
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)中的*命令行参数*配方，*让我们开始自动化之旅*'
- en: The *Sending email notifications* recipe
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*发送电子邮件通知*配方'
- en: The *Debugging with breakpoints* recipe in [Chapter 10](8c793eca-22a6-4688-afa9-e5175b4fb380.xhtml), *Debugging
    Techniques*
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第10章](8c793eca-22a6-4688-afa9-e5175b4fb380.xhtml)中的*使用断点进行调试*配方，*调试技术*'
- en: Setting up a cron job
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置cron作业
- en: Cron is an old-fashioned but reliable way of executing commands. It has been
    around since the 70s in Unix, and it's an old favorite in system administration
    to perform maintenance, such as freeing space, rotating logs, making backups,
    and other common operations.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Cron是一种老式但可靠的执行命令的方式。它自Unix的70年代以来就存在，并且是系统管理中常用的维护方式，比如释放空间、旋转日志、制作备份和其他常见操作。
- en: 'This recipe is Unix-specific, so it will work in Linux and MacOS. While it''s
    possible to schedule a task in Windows, it''s very different and uses Task Scheduler,
    which won''t be described here. If you have access to a Linux server, it can be
    a good way of scheduling periodic tasks.The main advantages are as follows:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方是特定于Unix的，因此它将在Linux和MacOS中工作。虽然在Windows中安排任务是可能的，但非常不同，并且使用任务计划程序，这里不会描述。如果你有Linux服务器的访问权限，这可能是安排周期性任务的好方法。其主要优点如下：
- en: It's present in virtually all Unix or Linux systems and configured to run automatically.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它几乎存在于所有的Unix或Linux系统中，并配置为自动运行。
- en: It's easy to use, though a little deceptive.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它很容易使用，尽管有点欺骗性。
- en: It's well-known. Almost anyone involved with admin tasks will have a general
    idea on how to use it.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是众所周知的。几乎所有涉及管理任务的人都对如何使用它有一个大致的概念。
- en: It allows for easy periodic commands, with good precision.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它允许轻松地周期性命令，精度很高。
- en: 'But, it also has some disadvantages, as follows:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 但它也有一些缺点，如下：
- en: By default, it may not give much feedback. Retrieving the output, logging execution,
    and errors is critical.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认情况下，它可能不会提供太多反馈。检索输出、记录执行和错误是至关重要的。
- en: The task should be as self-contained as possible to avoid problems with environment
    variables, such as using the wrong Python interpreter, or what path should execute.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任务应尽可能自包含，以避免环境变量的问题，比如使用错误的Python解释器，或者应该执行的路径。
- en: It is Unix-specific.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它是特定于Unix的。
- en: Only fixed periodic times are available.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有固定的周期时间可用。
- en: It doesn't control how many tasks run at the same time. Each time the countdown
    goes off, it creates a new task. For example, a task that takes one hour to complete,
    and that is scheduled to run once every 45 minutes, will have 15 minutes of overlap
    where two tasks will be running.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它不控制同时运行的任务数量。每次倒计时结束时，它都会创建一个新任务。例如，一个需要一个小时才能完成的任务，计划每45分钟运行一次，将有15分钟的重叠时间，两个任务将同时运行。
- en: Don't understate the latest effect. Running multiple expensive tasks at the
    same time can have bad effects on performance. Having expensive tasks overlapping
    may result in a race condition where each task is making the others never finish!
    Allow ample time for your tasks to finish and keep an eye on them.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 不要低估最新效果。同时运行多个昂贵的任务可能会对性能产生不良影响。昂贵的任务重叠可能导致竞争条件，使每个任务都无法完成！充分时间让你的任务完成并密切关注它们。
- en: Getting ready
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'We will produce a script, called  `cron.py`:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将生成一个名为`cron.py`的脚本：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Note the following details:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 注意以下细节：
- en: The config file, is by default, `/etc/automate.ini`. Reuse `config.ini` from
    the previous recipe.
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 配置文件默认为`/etc/automate.ini`。重用上一个配方中的`config.ini`。
- en: A timestamp has been added to the output. This will make it explicit when the
    task is run.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 时间戳已添加到输出中。这将明确显示任务运行的时间。
- en: The result is being added to the file, as shown with the `'a'` mode where the
    file is open.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 结果将被添加到文件中，如使用`'a'`模式打开文件所示。
- en: The `ArgumentDefaultsHelpFormatter` parameter automatically adds information
    about default values when printing the help using the `-h` argument.
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ArgumentDefaultsHelpFormatter`参数在使用`-h`参数打印帮助时会自动添加有关默认值的信息。'
- en: 'Check that the task is producing the expected result and that you can log to
    a known file:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 检查任务是否产生了预期的结果，并且你可以记录到一个已知的文件中：
- en: '[PRE13]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: How to do it...
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Obtain the full path of the Python interpreter. This is the interpreter that''s
    on your virtual environment:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 获取Python解释器的完整路径。这是你的虚拟环境中的解释器：
- en: '[PRE14]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Prepare the cron to be executed. Get the full path and check that it can be
    executed with no problem. Execute it a couple of times:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 准备执行cron。获取完整路径并检查是否可以无问题执行。执行几次：
- en: '[PRE15]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Check that the result is being added correctly to the result file:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查结果是否正确地添加到结果文件中：
- en: '[PRE16]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Edit the crontab file to run the task once every five minutes:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑crontab文件，以便每五分钟运行一次任务：
- en: '[PRE17]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Note that this opens an editing Terminal with your default command-line editor.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这将使用默认的命令行编辑器打开一个编辑终端。
- en: 'If you haven''t set up your default command-line editor, by default, it is
    likely Vim. This can be disconcerting if you don''t have experience with Vim.
    Press *I* to start inserting text and *Esc *when you''re done. Then, exit after
    saving the file with `:wq`. For more information about Vim, see this introduction:
    [https://null-byte.wonderhowto.com/how-to/intro-vim-unix-text-editor-every-hacker-should-be-familiar-with-0174674](https://null-byte.wonderhowto.com/how-to/intro-vim-unix-text-editor-every-hacker-should-be-familiar-with-0174674).'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有设置默认的命令行编辑器，默认情况下可能是Vim。如果你对Vim没有经验，这可能会让你感到困惑。按*I*开始插入文本，*Esc*完成后退出。然后，在保存文件后退出，使用`:wq`。有关Vim的更多信息，请参阅此介绍：[https://null-byte.wonderhowto.com/how-to/intro-vim-unix-text-editor-every-hacker-should-be-familiar-with-0174674](https://null-byte.wonderhowto.com/how-to/intro-vim-unix-text-editor-every-hacker-should-be-familiar-with-0174674)。
- en: 'For information on how to change the default command-line editor, see the following:
    [https://www.a2hosting.com/kb/developer-corner/linux/setting-the-default-text-editor-in-linux.](https://www.a2hosting.com/kb/developer-corner/linux/setting-the-default-text-editor-in-linux)'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何更改默认命令行编辑器的信息，请参阅以下链接：[https://www.a2hosting.com/kb/developer-corner/linux/setting-the-default-text-editor-in-linux.](https://www.a2hosting.com/kb/developer-corner/linux/setting-the-default-text-editor-in-linux)
- en: 'Check the crontab contents. Note that this displays the crontab contents, but
    doesn''t set it to edit:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查crontab内容。请注意，这会显示crontab内容，但不会设置为编辑：
- en: '[PRE18]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Wait and check the result file to see how the task is being executed:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 等待并检查结果文件，看任务是如何执行的：
- en: '[PRE19]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: How it works...
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它的工作原理...
- en: 'The crontab line consists of a line describing how often to run the task (first
    six elements), plus the task. Each of the initial six elements mean a different
    unit of time to execute. Most of them are stars, meaning *any*:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: crontab行由描述任务运行频率的行（前六个元素）和任务组成。初始的六个元素中的每一个代表不同的执行时间单位。它们大多数是星号，表示*任何*：
- en: '[PRE20]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Therefore, our line, `*/5 * * * * *`, means *every time the minute is divisible
    by 5, in all hours, all days... all years*.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的行，`*/5 * * * * *`，意味着*每当分钟可被5整除时，在所有小时、所有天...所有年*。
- en: 'Here are some examples:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些例子：
- en: '[PRE21]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Do not try to guess too much. Use a cheat sheet like [https://crontab.guru/](https://crontab.guru/)
    for examples and tweaks. Most of the common usages will be described there directly.
    You can also edit a formula and get a descriptive text on how it's going to run.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 不要试图猜测太多。使用像[https://crontab.guru/](https://crontab.guru/)这样的备忘单来获取示例和调整。大多数常见用法将直接在那里描述。您还可以编辑一个公式并获得有关其运行方式的描述性文本。
- en: After the description of how to run the cron job, include the line to execute
    the task, as prepared in Step 2 in the *How to do it…* section.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在描述如何运行cron作业之后，包括执行任务的行，如*如何操作…*部分的第2步中准备的那样。
- en: Note that the task is described with all the full paths for every related file—the
    interpreter, the script, and the output file. This removes all ambiguity related
    to paths and reduces the chances of possible errors. A very common one is not
    being able to determine one (or more) of the three elements.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，任务的描述中包含了每个相关文件的完整路径——解释器、脚本和输出文件。这消除了与路径相关的所有歧义，并减少了可能出现错误的机会。一个非常常见的错误是无法确定其中一个（或多个）元素。
- en: There's more...
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If there''s any problem in the execution of the crontab, you should receive
    a system mail. This will show up as a message in the Terminal, like this:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 如果crontab执行时出现任何问题，您应该收到系统邮件。这将显示为终端中的消息，如下所示：
- en: '[PRE22]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This can be read with `mail`:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过`mail`来阅读：
- en: '[PRE23]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: In the next recipe, we will see methods to capture the errors independently
    so that the task can run smoothly.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个食谱中，我们将看到独立捕获错误的方法，以便任务可以顺利运行。
- en: See also
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Adding command-line options* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml),
    *Let's Begin Our Automation Journey*
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第1章《让我们开始自动化之旅》中的*添加命令行选项*食谱
- en: The *Capturing errors and problems* recipe
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*捕获错误和问题*食谱'
- en: Capturing errors and problems
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 捕获错误和问题
- en: An automated task's main characteristic is its *fire-and-forget* quality. We
    are not actively looking at the result, but making it run in the background.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化任务的主要特点是其*fire-and-forget*质量。我们不会积极地查看结果，而是让它在后台运行。
- en: Also, as most of the recipes in this book deal with external information, such
    as web pages or other reports, the likelihood of finding an unexpected problem
    when running it is high. This recipe will present an automated task that will
    safely store unexpected behaviors in a log file that can be checked afterwards.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于本书中大多数食谱涉及外部信息，如网页或其他报告，因此在运行时发现意外问题的可能性很高。这个食谱将呈现一个自动化任务，它将安全地将意外行为存储在一个日志文件中，以便以后检查。
- en: Getting ready
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: As a starting point, we'll use a task that will divide two numbers, as described
    in the command line.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 作为起点，我们将使用一个任务，该任务将按照命令行中的描述来除两个数字。
- en: This task is very similar to the one presented in Step 5 in the *How to do it…*
    section, but instead of multiplying two numbers, we'll divide them.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这个任务与*如何操作…*部分中的第5步中介绍的任务非常相似，但是我们将除法代替乘法。
- en: How to do it...
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create the `task_with_error_handling_step1.py` file, as follows:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`task_with_error_handling_step1.py`文件，如下所示：
- en: '[PRE24]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Execute it a couple of times to see that it divides two numbers:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 多次执行它，看看它是如何除以两个数字的：
- en: '[PRE25]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Check that dividing by `0` produces an error, and that the error is not logged
    on the result file:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查除以`0`是否会产生错误，并且该错误是否未记录在结果文件中：
- en: '[PRE26]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Create the `task_with_error_handling_step4.py` file:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`task_with_error_handling_step4.py`文件：
- en: '[PRE27]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Run it to check that it displays the proper `INFO` and `ERROR` log, and that
    it stores it on the log file:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行它以检查它是否显示正确的`INFO`和`ERROR`日志，并且是否将其存储在日志文件中：
- en: '[PRE28]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: How it works...
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'To properly capture any unexpected exceptions, the main function should be
    wrapped into a `try-except` block, as done in Step 4 in the *How to do it…* section.
    Compare this to how Step 1 is not wrapping the code:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确捕获任何意外异常，主函数应该被包装到一个`try-except`块中，就像*如何操作…*部分中的第4步中所做的那样。将此与第1步中未包装代码的方式进行比较：
- en: '[PRE29]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Note that logging the exception is important for getting information on what
    went wrong.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，记录异常对于获取出了什么问题很重要。
- en: This kind of exception is nicknamed *Pokémon*, because it can *catch'em all*,
    as it will capture any unexpected error at the highest level. Do not use it in
    other areas of the code, as capturing everything can hide unexpected errors. At
    the very least, any unexpected exception should be logged to allow for further
    analysis.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这种异常被昵称为*宝可梦*，因为它可以*捕获所有*，因此它将在最高级别捕获任何意外错误。不要在代码的其他区域使用它，因为捕获所有可能会隐藏意外错误。至少，任何意外异常都应该被记录下来以便进行进一步分析。
- en: The extra step to exit with status 1 with the `exit(1)` call informs the operating
    system that something went wrong with our script.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`exit(1)`调用额外的步骤来以状态1退出通知操作系统我们的脚本出了问题。
- en: The `logging` module allows us to log. Note the basic configuration, which includes
    an optional file to store the logs, the format, and the level of the logs to display.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '`logging`模块允许我们记录。请注意基本配置，其中包括一个可选的文件来存储日志、格式和要显示的日志级别。'
- en: The available level for logs are, from less critical to more critical—`DEBUG`,
    `INFO`, `WARNING`, `ERROR`, and `CRITICAL`. The logging level will set the minimal
    severity required to log the message. For example, an `INFO` log won't be stored
    if the severity is set to `WARNING`.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 日志的可用级别从不太关键到更关键——`DEBUG`、`INFO`、`WARNING`、`ERROR`和`CRITICAL`。日志级别将设置记录消息所需的最小严重性。例如，如果将严重性设置为`WARNING`，则不会存储`INFO`日志。
- en: 'Creating logs is easy. You can do this by making a call to the method `logging.<logging
    level>`, (where `logging level` is `debug`, `info`, and so on). For example:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 创建日志很容易。您可以通过调用`logging.<logging level>`方法来实现（其中`logging level`是`debug`、`info`等）。例如：
- en: '[PRE30]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Note how logs with a severity lower than `INFO` are not displayed. Use the level
    definition to tweak how much information to display. This may change, for example,
    how `DEBUG` logs may be used only while developing the task, but not be displayed
    when running it. Notice that `task_with_error_handling_step4.py` is defining the
    logging level to be `DEBUG`, by default.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，低于`INFO`的严重性的日志不会显示。使用级别定义来调整要显示的信息量。例如，这可能会改变`DEBUG`日志仅在开发任务时使用，但在运行时不显示。请注意，`task_with_error_handling_step4.py`默认将日志级别定义为`DEBUG`。
- en: A good definition of log levels is key to displaying relevant information, while
    reducing spam. It is not easy to set up sometimes, but especially if more than
    one person is involved, try to agree on exactly what `WARNING` versus `ERROR`
    means to avoid misinterpretations.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的日志级别定义是显示相关信息的关键，同时减少垃圾邮件。有时设置起来并不容易，但特别是如果有多个人参与，尝试就`WARNING`与`ERROR`的确切含义达成一致，以避免误解。
- en: '`logging.exception()` is a special case that will create an `ERROR` log, but
    it will also include information about the exception, such as the **stack trace**.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`logging.exception()`是一个特殊情况，它将创建一个`ERROR`日志，但也将包括有关异常的信息，例如**堆栈跟踪**。'
- en: 'Remember to check logs to discover errors. A useful reminder is to add a note
    on the results file, like this:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 记得检查日志以发现错误。一个有用的提醒是在结果文件中添加一个注释，如下所示：
- en: '[PRE31]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: There's more...
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The Python `logging` module has a lot of capabilities, such as the following:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Python `logging`模块具有许多功能，例如以下内容：
- en: Further tweaks the format of the log, for example, including the file and line
    number of the log that was produced.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进一步调整日志的格式，例如，包括生成日志的文件和行号。
- en: Defines different logger objects, each one with its own configuration, like
    logging level and format. This allows to produce logs to different systems in
    different ways, though is normally not used for simplicity.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义不同的记录器对象，每个对象都有自己的配置，如日志级别和格式。这允许以不同的方式将日志发送到不同的系统，尽管通常不会出于简单起见而使用。
- en: Sends logs to multiple places, such as that standard output and file, or even
    a remote logger.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将日志发送到多个位置，例如标准输出和文件，甚至远程记录器。
- en: Automatically rotates logs, creating new log files after a certain time or size.
    This is handy in keeping logs organized by day, and allowing for the compression
    or removal of old logs.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动旋转日志，创建新的日志文件，一段时间或大小后。这对于按天保持日志组织和允许压缩或删除旧日志非常方便。
- en: Reads standard logging configurations from files.
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从文件中读取标准日志配置。
- en: Instead of creating complex rules, try to log  extensively, but with the proper
    level, and then filter.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 与创建复杂规则相比，尝试进行广泛的日志记录，但使用适当的级别，然后进行过滤。
- en: For comprehensive detail, check the Python docs of the module at [https://docs.python.org/3.7/library/logging.html](https://docs.python.org/3.7/library/logging.html),
    or the tutorial at [https://docs.python.org/3.7/howto/logging.html](https://docs.python.org/3.7/howto/logging.html).
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 有关详细信息，请查看模块的Python文档[https://docs.python.org/3.7/library/logging.html](https://docs.python.org/3.7/library/logging.html)，或者查看教程[https://docs.python.org/3.7/howto/logging.html](https://docs.python.org/3.7/howto/logging.html)。
- en: See also
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Adding command-line options* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml), *Let's
    Begin Our Automation Journey*
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)的*添加命令行选项*中，*让我们开始自动化之旅*中的*添加命令行选项*。
- en: The *Preparing a task* recipe
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*准备任务*配方'
- en: Sending email notifications
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发送电子邮件通知
- en: Email has become an inescapable tool that everyone uses everyday. It's probably
    the best place to send a notification if an automated task has detected something.
    On the other hand, email inboxes are already too filled up with spam messages,
    so be careful.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件已成为每个人每天都使用的不可避免的工具。如果自动化任务检测到某些情况，它可能是发送通知的最佳位置。另一方面，电子邮件收件箱已经充斥着垃圾邮件，所以要小心。
- en: Spam filters are also a reality. Be careful with who to send emails to and the
    number of emails to be sent. An email server or address can be labelled as *spam,*
    and all emails will be quietly dropped by the internet.This recipe will show how
    to send a single email, using an already existing email account.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 垃圾邮件过滤器也是现实。小心选择发送电子邮件的对象和发送的电子邮件数量。电子邮件服务器或地址可能被标记为*垃圾邮件*，所有电子邮件都将被互联网悄悄丢弃。本示例将展示如何使用已有的电子邮件帐户发送单个电子邮件。
- en: This approach is viable for spare emails sent to a couple of people, as a result
    from an automated task, but no more than that.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法适用于发送给几个人的备用电子邮件，作为自动化任务的结果，但不要超过这个数量。
- en: Getting ready
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'For this recipe, we require a valid email account set up, which includes the
    following:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本示例，我们需要设置一个有效的电子邮件帐户，其中包括以下内容：
- en: A valid email server
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有效的电子邮件服务器
- en: A port to connect to
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接的端口
- en: An address
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个地址
- en: A password
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码
- en: These four elements should be enough to be able to send an email.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 这四个元素应该足以发送电子邮件。
- en: Some email services, for example, Gmail, will encourage you to set up 2FA, meaning
    that a password is not enough to send an email. Typically, they'll allow you to
    create an specific password for apps to use, bypassing the 2FA request. Check
    your email provider's information for options.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Gmail等一些电子邮件服务将鼓励您设置2FA，这意味着仅密码不足以发送电子邮件。通常，它们允许您为应用程序创建一个特定的密码来使用，绕过2FA请求。查看您的电子邮件提供商的信息以获取选项。
- en: The email provider to use should indicate what the SMTP server is and port to
    use in their documentation. They can be retrieved from email clients as well,
    as they are the same parameters. Check your provider documentation. In the following
    example, we will use a Gmail account.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用的电子邮件提供商应指示SMTP服务器和端口在其文档中使用。它们也可以从电子邮件客户端中检索，因为它们是相同的参数。查看您的提供商文档。在以下示例中，我们将使用Gmail帐户。
- en: How to do it...
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Create the `email_task.py` file, as follows:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`email_task.py`文件，如下所示：
- en: '[PRE32]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Create a configuration file called `email_conf.ini` with the specifics of your
    email account. For example, for a Gmail account, fill the following template.
    The template is available in GitHub [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/email_conf.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/email_conf.ini),
    but be sure to fill it with your data:'
  id: totrans-186
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`email_conf.ini`的配置文件，其中包含您的电子邮件账户的具体信息。例如，对于Gmail账户，请填写以下模板。该模板可在GitHub
    [https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/email_conf.ini](https://github.com/PacktPublishing/Python-Automation-Cookbook/blob/master/Chapter02/email_conf.ini)
    中找到，但请确保用您的数据填写它：
- en: '[PRE33]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Ensure that the file cannot be read or written by other users on the system,
    setting the permissions of the file to allow only our user. `600` permissions
    means read and write access for our user, and no access to anyone else:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保文件不能被系统上的其他用户读取或写入，设置文件的权限只允许我们的用户。`600`权限意味着我们的用户有读写权限，其他人没有访问权限：
- en: '[PRE34]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Run the script to send a test email:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行脚本发送测试邮件：
- en: '[PRE35]'
  id: totrans-191
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Check the inbox of the destination email; an email should be received with the
    subject `With love, from ME to YOU`.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查目标电子邮件的收件箱；应该收到一封主题为`With love, from ME to YOU`的电子邮件。
- en: How it works...
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: There are two key steps in the scripts—the generation of the message, and the
    sending.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本中有两个关键步骤——消息的生成和发送。
- en: The message needs to contain mainly the `To` and `From` email addresses, as
    well as the `Subject`. If the content is pure text, as in this case, calling `.set_content() `
    is enough. The whole message can then be sent.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 消息主要需要包含`To`和`From`电子邮件地址，以及`Subject`。如果内容是纯文本，就像在这种情况下一样，调用`.set_content()`就足够了。然后可以发送整个消息。
- en: It is technically possible to send an email from a different email than the
    account used to send it. This is discouraged, though, as it can be considered
    by your email provider as trying to impersonate a different email. You can use
    the `reply-to` header as a way of allowing answering to a different account.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 从一个与发送邮件的账户不同的邮箱发送邮件在技术上是可能的。尽管如此，这是不被鼓励的，因为你的电子邮件提供商可能会认为你试图冒充另一个邮箱。您可以使用`reply-to`头部来允许回复到不同的账户。
- en: Sending the email requires you to connect to the specified server and start
    an SMPT connection. SMPT is the standard for email communication.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 发送邮件需要连接到指定的服务器并启动SMPT连接。SMPT是电子邮件通信的标准。
- en: The steps are quite straightforward—configure the server, log into it, send
    the prepared message, and quit.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤非常简单——配置服务器，登录，发送准备好的消息，然后退出。
- en: If you need to send more than one message, you can log in, send multiple emails,
    and then quit, instead of connecting each time.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要发送多条消息，可以登录，发送多封电子邮件，然后退出，而不是每次都连接。
- en: There's more...
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: If the objective is a bigger operation, like a marketing campaign, or even production
    emails like confirming a user's email, please check [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml), *Dealing
    with Communication Channels*
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果目标是更大规模的操作，比如营销活动，或者生产邮件，比如确认用户的电子邮件，请查看[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)，*处理通信渠道*
- en: The email message content used in this recipe is very simple, but emails can
    be much more complicated than that.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 本步骤中使用的电子邮件消息内容非常简单，但电子邮件可能比这更复杂。
- en: 'The `To` field can contain multiple recipients. Separate them with commas,
    like this:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`To`字段可以包含多个收件人。用逗号分隔它们，就像这样：'
- en: '[PRE36]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Emails can be defined in HTML, with an alternative plain text, and have attachments.
    The basic operation is to set up a `MIMEMultipart` and then attach each of the
    MIME parts that compose the email:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件可以以HTML格式定义，并附有纯文本和附件。基本操作是设置一个`MIMEMultipart`，然后附加组成邮件的每个MIME部分：
- en: '[PRE37]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: The most common SMPT connection is `SMPT_SSL`, which is more secure and requires
    a login and password, but plain, unauthenticated SMPT exists; check your email
    provider documentation.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的SMPT连接是`SMPT_SSL`，它更安全，需要登录和密码，但也存在普通的未经身份验证的SMPT；请查看您的电子邮件提供商的文档。
- en: Remember that this recipe is aimed for simple notifications. Emails can grow
    quite complex if attaching different information. If your objective is an email
    for customers or any general group, try to use the ideas in [Chapter 8](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml),
    *Dealing with Communication Channels*.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这个步骤是为简单的通知而设计的。如果附加不同的信息，电子邮件可能会变得非常复杂。如果您的目标是为客户或任何一般群体发送电子邮件，请尝试使用[第8章](aefbed90-7a63-4611-b430-85d216ab03c0.xhtml)，*处理通信渠道*中的想法。
- en: See also
  id: totrans-209
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Adding command-line options* recipe in [Chapter 1](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml),
    *Let's Begin Our Automation Journey*
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[第1章](e139aa50-5631-4b75-9257-d4eb2e12ef90.xhtml)，*让我们开始自动化之旅*中的*添加命令行选项*步骤
- en: The *Preparing a task* recipe
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备任务的步骤
